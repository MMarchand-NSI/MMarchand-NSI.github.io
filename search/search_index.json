{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"","text":"<p>Hal Abelson, 1986</p> <p>Computer science is not really about computers -- and it's not about computers in the same sense that physics is not really about particle accelerators, and biology is not about microscopes and Petri dishes...and geometry isn't really about using surveying instruments. Now the reason that we think computer science is about computers is pretty much the same reason that the Egyptians thought geometry was about surveying instruments: when some field is just getting started and you don't really understand it very well, it's very easy to confuse the essence of what you're doing with the tools that you use.</p>"},{"location":"les-outils/","title":"Outils pour d\u00e9velopper","text":"<p>Cette s\u00e9lection d'outils a \u00e9t\u00e9 choisie pour \u00eatre \u00e0 la fois r\u00e9aliste et abordable. </p> <p>L'installation propos\u00e9e se fait dans l'invite de commandes windows gr\u00e2ce \u00e0 l'outil winget qui est d\u00e9j\u00e0 pr\u00e9sent.</p> <p>Il aussi est tout \u00e0 fait possible d'installer la plupart de ces outils en les t\u00e9l\u00e9chargeant et en ex\u00e9cutant leur programme d'installation depuis leur site internet, mais c'est plus long. </p>"},{"location":"les-outils/#vs-code","title":"VS Code","text":"<p>Le couteau suisse de la programmation.</p> <pre><code>winget install Microsoft.VisualStudioCode\n</code></pre>"},{"location":"les-outils/#uv","title":"UV","text":"<p>Le tout nouveau couteau suisse de python. Ex\u00e9cutez cette ligne dans un terminal.</p> <p><pre><code>powershell -ExecutionPolicy ByPass -c \"irm https://astral.sh/uv/install.ps1 | iex\"\n</code></pre> Red\u00e9marrez votre ordinateur.</p>"},{"location":"les-outils/#git","title":"GIT","text":"<p>Un outil de base pour g\u00e9rer \"le stockage\" de ses fichiers.</p> <pre><code>winget install Git.Git\n</code></pre> <p>Puis dans une ligne de commande, en imaginant avoir cr\u00e9\u00e9 un compte github bidule avec l'adresse email truc@gmail.com:</p> <pre><code>git config --global user.name \"bidule\"\n\ngit config --global user.email \"truc@gmail.com\"\n</code></pre> <p>Pour la facilit\u00e9 d'utilisation au quotidien (pour utiliser git comme une cl\u00e9 usb):</p> <p>Dans les settings de VSCode, recherchez <code>post commit command</code> et mettez le param\u00e8tre \u00e0 <code>sync</code></p>"},{"location":"les-outils/#graphviz","title":"Graphviz","text":"<p>Un utilitaire pour dessiner des graphes depuis python.</p> <pre><code>winget install Graphviz.Graphviz\n</code></pre>"},{"location":"les-outils/#dbeaver","title":"DBeaver","text":"<p>DBeaver permet d'interagir avec des syst\u00e8mes de gestion de bases de donn\u00e9es.</p> <pre><code>winget install dbeaver.dbeaver\n</code></pre>"},{"location":"les-outils/#miniforge","title":"Miniforge","text":"<p>Si python est install\u00e9 sur votre machine, d\u00e9sinstallez-le. Nous allons utiliser ce gestionnaire d'environnements \u00e0 la place.</p> <pre><code>winget install CondaForge.Miniforge3\n</code></pre>"},{"location":"les-outils/#msys2","title":"MSYS2","text":"<p>Cet outil simule l'environnement linux et vous permettra m\u00eame de programmer dans d'autres langages de programmation <pre><code>winget install MSYS2.MSYS2\n</code></pre></p>"},{"location":"les-outils/git/","title":"Git et Github","text":"<p>Les fonctionnalit\u00e9s de Git et de Github sont pl\u00e9thoriques. Nous n'utiliserons que 2 fonctionnalit\u00e9s de base.</p> <p>Pr\u00e9-requis</p> <ul> <li>Avoir cr\u00e9\u00e9 un compte Github</li> <li>Avoir install\u00e9 Git comme indiqu\u00e9.</li> </ul>"},{"location":"les-outils/git/#cest-quoi-un-repository","title":"C'est quoi un repository?","text":"<p>Il faut consid\u00e9rer que c'est un r\u00e9pertoire distant.</p>"},{"location":"les-outils/git/#creer-un-repository","title":"Cr\u00e9er un repository","text":"<p>Sur github</p> <p></p> <p>Cliquez sur new.</p> <p>Donnez un nom \u00e0 votre repo </p> <p>Dites que vous voulez ignorer les fichers techniques g\u00e9n\u00e9r\u00e9s par python. Ces fichiers sont de toute fa\u00e7on g\u00e9n\u00e9r\u00e9s par votre code \u00e0 votre insue quand il y en a besoin, vous n'avez pas besoin de les stocker.</p> <p></p> <p>Ignorez les autres champs et cliquez sur </p>"},{"location":"les-outils/git/#cloner-un-repository","title":"Cloner un repository","text":"<p>Lorsque vous n'avez aucun folder d'ouvert, VSCode vous propose ceci:</p> <p></p> <p>La premi\u00e8re fois que vous vous connectez \u00e0 github depuis vscode,  VSCode enclenche une communication avec votre navigateur internet pour s'y authentifier \u00e0 github.  Dites oui partout et autorisez tout \u00e0 chaque fois. Une fois ce processus termin\u00e9, vous pourrez choisir votre repository dans une liste d\u00e9roulante.</p> <p>VSCode veut maintenant savoir o\u00f9 vous voulez le cloner.</p> <p>Par exemple, j'ai toujours un r\u00e9pertoire github o\u00f9 je clone tous mes repos.</p> <p>S\u00e9lectionnez un r\u00e9pertoire et validez.</p> <p>Dites oui pour que VSCode ouvre ce r\u00e9pertoire clon\u00e9.</p>"},{"location":"les-outils/git/#travailler-avec-git","title":"Travailler avec Git","text":"<p>Travaillez normalement, mais au d\u00e9but de chaque session de travail, faites un Pull</p> <p></p> <p>A la fin d'une session de travail, faite un Commit &amp; Sync. Git oblige \u00e0 faire un commentaire Lorsqu'on fait Commit &amp; Sync. Il faut remplir le champ message juste au dessus du bouton bleu avec quelques mots descriptifs du travail r\u00e9alis\u00e9.</p>"},{"location":"les-outils/git/#au-quotidien","title":"Au quotidien","text":"<ul> <li> <p>Je travaille chez moi, je pull mes modifs du lyc\u00e9e, je bosse, je sync.</p> </li> <li> <p>J'arrive au lyc\u00e9e, je pull mes modifs de chez moi, je bosse, je sync.</p> </li> </ul> <p>Plus besoin de cl\u00e9 USB</p>"},{"location":"les-outils/ocaml/","title":"OCaml","text":""},{"location":"les-outils/ocaml/#opam","title":"OPAM","text":"<p>Tout comme nous avons install\u00e9 miniforge pour g\u00e9rer les environnements python, nous pouvons installer OPAM.</p> <p>Opam g\u00e8re des switchs (\u00e9quivalents d'environnements) sur lesquels on travaille avec une version sp\u00e9cifique d'OCaml.</p>"},{"location":"les-outils/ocaml/#installation-linuxwsl","title":"Installation Linux/WSL","text":"<p>Si vous voulez rester sous windows, utilisez WSL. N'utilisez pas la version windows, c'est long, \u00e7a bug \u00e0 la longue.</p> <p>La commande suivante est pour Debian et d\u00e9riv\u00e9s (Ubuntu...): <pre><code>sudo apt install opam\n</code></pre></p>"},{"location":"les-outils/ocaml/#si-vous-etes-sous-wsl-ou-sur-une-machine-virtuelle","title":"Si vous \u00eates sous WSL ou sur une machine virtuelle:","text":"<pre><code>opam init --compiler=5.2.0 --disable-sandboxing\n</code></pre>"},{"location":"les-outils/ocaml/#si-vous-netes-pas-sous-wsl-ni-sur-une-machine-virtuelle","title":"Si vous n'\u00eates PAS sous WSL ni sur une machine virtuelle:","text":"<pre><code>opam init --compiler=5.2.0\n</code></pre> <p>Tout le reste est valable sous n'importe quel OS sur lequel vous avez install\u00e9 opam.</p> <p>En langage Opam, un \"switch\" c'est un peu comme un environnement conda. On a cr\u00e9\u00e9 le switch 5.2.0 en initialisant opam.</p> <p>On peut voir \u00e7a comme l'environnement portant la version 5.2.0 d'OCaml</p> <p>On va installer les packages de base dessus:</p> <pre><code>opam install --switch=5.2.0 ocaml-lsp-server odoc ocamlformat utop ppx_jane\n</code></pre>"},{"location":"les-outils/ocaml/#vscode","title":"VSCode","text":"<ul> <li> <p>Installer l'extension <code>OCaml Platform</code>. </p> </li> <li> <p>Ouvrir un r\u00e9pertoire vide dans VSCode qui contiendra tous vos projets OCaml</p> </li> <li> <p>S\u00e9lectionner le switch que vous avez cr\u00e9\u00e9 \u00e0 l'aide du bouton \"Select Sandbox\"</p> </li> </ul> <p></p> <ul> <li>Dans l'extension OCaml, cliquer sur <code>Open sandboxed terminal</code><ul> <li>Ceci vous ouvre un terminal avec votre switch activ\u00e9</li> </ul> </li> </ul>"},{"location":"les-outils/ocaml/#creer-un-projet","title":"Cr\u00e9er un projet","text":"<pre><code>dune init proj structures\n</code></pre> <p>ceci cr\u00e9\u00e9 un r\u00e9pertoire monprojet avec tous les fichiers n\u00e9cessaires et un petit bout de code.</p> <p>On se place TOUJOURS dans le projet pour y travailler</p> <pre><code>cd structures\n</code></pre>"},{"location":"les-outils/ocaml/#build-un-projet","title":"Build un projet","text":"<pre><code>dune build\n</code></pre>"},{"location":"les-outils/ocaml/#executer-un-projet","title":"Ex\u00e9cuter un projet","text":"<pre><code>dune exec structures\n</code></pre>"},{"location":"les-outils/ocaml/#explications-de-base","title":"Explications de base","text":"<pre><code>let () = ...\n</code></pre> <p>Cette fonction est le point d'entr\u00e9e de l'application.</p> <p>C'est ce qui sera ex\u00e9cut\u00e9 lorsque le programme d\u00e9marrera.</p>"},{"location":"les-outils/ocaml/#programmes-exemple","title":"Programmes exemple","text":""},{"location":"les-outils/ocaml/#mainml","title":"main.ml","text":""},{"location":"les-outils/ocaml/#listeml","title":"liste.ml","text":""},{"location":"les-outils/setup-vscode/","title":"Setup vscode","text":""},{"location":"les-outils/setup-vscode/#setup-de-vscode","title":"Setup de VSCode","text":"<p>Un IDE (environnement de d\u00e9veloppement int\u00e9gr\u00e9) est un logiciel qui aide les programmeurs \u00e0 d\u00e9velopper.</p> <p>VSCode est de loin l'IDE le plus utilis\u00e9 (73,6% des d\u00e9veloppeurs et 77% des \u00e9tudiants du monde entier en 2024 d'apr\u00e8s la c\u00e9l\u00e8bre enqu\u00eate annuelle de stackoverflow)</p>"},{"location":"les-outils/setup-vscode/#pre-requis","title":"Pr\u00e9-requis","text":"<p>Vous avez install\u00e9 les outils recommand\u00e9s avec winget</p>"},{"location":"les-outils/setup-vscode/#configurer-vscode-pour-developper-en-python","title":"Configurer VSCode pour d\u00e9velopper en python.","text":"<p>Cliquez sur l'ic\u00f4ne des extensions </p> <p>Recherchez <code>nsi-dev</code> dans la petite barre de recherche. Cliquez sur le petit bouton bleu \"install\"</p> <p></p> <p>Ca-y-est, c'est configur\u00e9.</p>"},{"location":"les-outils/setup-vscode/#comment-travailler-avec-vscode","title":"Comment travailler avec VSCode?","text":"<p>Attention, sinon \u00e7a ne fonctionnera pas</p> <p>Dans VSCode, on ouvre TOUJOURS un r\u00e9pertoire, JAMAIS un fichier.</p> <p>File &gt; Open Folder</p> <p>Quand vous rouvrez VSCode, vous retrouvez tout comme vous l'avez laiss\u00e9 la derni\u00e8re fois que vous l'avez ouvert.</p> <p>Lorsque vous ouvrez un r\u00e9pertoire pour la premi\u00e8re fois, VSCode vous demande s'il peut avoir confiance en ce r\u00e9pertoire. Cochez la case et cliquez sur le bouton bleu, \"Yes i trust\". Il ne vous le redemandera plus pour ce r\u00e9pertoire ni pour le r\u00e9pertoire parent.</p> <p></p>"},{"location":"les-outils/setup-vscode/#gerer-les-fichiers-du-repertoire","title":"G\u00e9rer les fichiers du r\u00e9pertoire.","text":"<p>Vous pouvez directement cr\u00e9er des fichiers et des dossiers dans L'explorer de VSCode \u00e0 l'aide de ces boutons </p>"},{"location":"les-outils/setup-vscode/#gerer-vos-environnements-python","title":"G\u00e9rer vos environnements Python","text":"<p>L'extension NSI-DEV vous fournit une mani\u00e8re simplifi\u00e9e de g\u00e9rer vos environnements python. Il ne faut pas que vous ayez install\u00e9 python sur votre machine, c'est miniforge qui va se charger de faire coexister une ou pusieurs installations de python.</p> <p></p> <p>Sur l'image ci-dessus, on voit 2 environnements python utilisables que j'ai appel\u00e9 py312 (pour la version 12 de python) et py313 (pour la version 13 de python).</p> <p>Lorsque vous l'utiliserez pour la premi\u00e8re fois, il n'y en aura pas, il faudra en cr\u00e9er un en appuyant sur le bouton +</p> <p>On vous demandera alors de valider une version de python pour votre environnement, puis un nom.</p> <p>A l'heure o\u00f9 j'\u00e9cris ces lignes, je vous conseille de demander la version 3.13 et d'appeler cet environnement py313.</p> <p>Apr\u00e8s quelques instants (\u00e7a peut \u00eatre un peu long), vous verrez appara\u00eetre votre environnement.</p>"},{"location":"les-outils/setup-vscode/#programmer-en-python","title":"Programmer en Python","text":"<p>VSCode doit savoir quel environnement python utiliser pour ex\u00e9cuter vos programme, \u00e9tant donn\u00e9 qu'il peut en exister plusieurs.</p> <p>Lorsque vous avez un fichier python ouvert, il faut cliquer sur la barre d'\u00e9tat en bas \u00e0 droite, \u00e0 l'emplacement o\u00f9 vous voyez sur l'image 3.12.7('py312': conda). Une liste d\u00e9roulante va alors s'afficher o\u00f9 vous pourrez s\u00e9lectionner votre environnement. Si c'est la premi\u00e8re fois que vous ouvrez VS code, vous verrez peut-\u00eatre un bouton \"Select interpreter\" \u00e0 la place.</p> <p></p> <p>Jamais dans base</p> <p>Il existe un environnement par d\u00e9faut qui s'appelle base. L'extension le masque volontairement. N'utilisez jamais cet environnement.</p>"},{"location":"les-outils/setup-vscode/#ajouter-des-modules-python","title":"Ajouter des modules python","text":"<p>Lorsque vous voulez installer un module python, il faut ouvrir un terminal configur\u00e9 pour votre environnement. Ca se fait directement en appuyant sur le petit cube de l'image ci-dessous. (La poubelle vous permet de supprimer l'environnement)</p> <p></p> <p>Un terminal MSYS2 appara\u00eet.</p> <p>Imaginons que vous vouliez installer le module pyxel, vous pouvez alors y ex\u00e9cuter cette commande:</p> <p><code>pip install pyxel</code></p> <p>Ca y est, vous pouvez maintenant \u00e9crire <code>import pyxel</code> dans vos programmes.</p> <p>Au quotidien</p> <p>Une fois que tout \u00e7a est fait, au quotidien, il faut juste s'assurer qu'on est sur le bon environnement en bas \u00e0 droite de VSCode, \u00e9crire ses programmes et les ex\u00e9cuter avec le bouton play en haut \u00e0 droite de l'\u00e9cran.</p>"},{"location":"premi%C3%A8re/IHM/flet/","title":"Interface Homme machine","text":"<p>D\u00e9fintion</p> <p>Une Interface Homme-Machine (IHM) est un syst\u00e8me qui permet l'interaction entre un utilisateur humain et une machine, souvent un ordinateur ou un appareil num\u00e9rique. Elle joue un r\u00f4le essentiel dans la communication, facilitant la compr\u00e9hension des commandes de l'utilisateur et le retour d'informations de la machine. Les IHM incluent divers \u00e9l\u00e9ments comme des interfaces graphiques (boutons, menus, ic\u00f4nes), vocales, tactiles ou gestuelles. Leur conception vise \u00e0 \u00eatre intuitive, ergonomique et accessible, pour am\u00e9liorer l'exp\u00e9rience utilisateur et optimiser l'efficacit\u00e9 de l'interaction.</p>"},{"location":"premi%C3%A8re/IHM/flet/#flet","title":"Flet","text":"<p>Flet est un framework open-source permettant de cr\u00e9er des applications web, desktop et mobiles \u00e0 l'aide de Python. Il simplifie le d\u00e9veloppement d'interfaces utilisateur interactives sans n\u00e9cessiter de connaissances approfondies en HTML, CSS ou JavaScript. Bas\u00e9 sur le framework Flutter de Google, Flet offre des composants modernes et adaptatifs pour concevoir des applications performantes et r\u00e9actives. Id\u00e9al pour les d\u00e9veloppeurs cherchant \u00e0 rapidement prototyper ou d\u00e9ployer des applications multiplateformes.</p>"},{"location":"premi%C3%A8re/IHM/flet/#installation","title":"Installation","text":"<p>Ouvrez le terminal de votre environnement et ex\u00e9cutez cette commande pour y installer flet:</p> <pre><code>pip install flet\n</code></pre>"},{"location":"premi%C3%A8re/IHM/flet/#verifier-que-ca-marche-avec-une-fenetre-vide","title":"V\u00e9rifier que \u00e7a marche avec une fen\u00eatre vide","text":"<p>Dans un nouveau r\u00e9pertoire que vous ouvrirez dans VSCode, cr\u00e9ez un fichier app.py avec le code suivant:</p> <pre><code>import flet as ft\n\ndef main(page: ft.Page):\n    page.title = \"Page Flet Vide\"\n    # \u00e0 chaque fois qu'un ou plusieurs \u00e9l\u00e9ments visuels sont modifi\u00e9s, il faut appeler page.update()\n    page.update() \n\n# Lancer l'application\nft.app(target=main)\n</code></pre>"},{"location":"premi%C3%A8re/IHM/flet/#une-application-simple","title":"Une application simple","text":"<pre><code># type: ignore\nimport flet as ft\n\ndef fois_2(x: int) -&gt; int:\n    return 2*x\n\ndef main(page: ft.Page):\n    page.title = \"Multiplication par 2\"\n    page.vertical_alignment = ft.MainAxisAlignment.START  # Alignement au sommet\n    page.window.width = 300  # Largeur minimale\n    page.window.height = 200  # Hauteur ajust\u00e9e automatiquement\n\n    # 1. D\u00e9finir les Controls\n    input_text = ft.TextField(label=\"Entrez un nombre\")\n    result_label = ft.Text(value=\"\", color=\"blue\")\n\n    # 2. D\u00e9finir le bouton et son callback dans la fonction main\n    def bouton_click(e: ft.Control):\n        result_label.value=f\"R\u00e9sultat: {fois_2(int(input_text.value))}\"\n        page.update()\n\n    bouton = ft.ElevatedButton(\n        text=\"Multiplier par 2\",\n        on_click=bouton_click) \n\n    #bouton_click est une fonction qui est appel\u00e9e lorsque le bouton est cliqu\u00e9.\n    #On appelle cette fonction un CALLBACK.\n\n    # 3. Ajouter les widgets \u00e0 la page\n    page.add(\n        ft.Text(\"Application de multiplication par 2\", size=20),\n        input_text,\n        bouton,\n        result_label,\n    )\n\nft.app(target=main)\n</code></pre>"},{"location":"premi%C3%A8re/IHM/flet/#lancer-en-tant-quapplication-web","title":"Lancer en tant qu'application web","text":"<p>En ligne de commande, \u00e9crire: <pre><code>flet run --web app.py\n</code></pre></p> <p>Le navigateur devrait se lancer \u00e0 l'adresse http://127.0.0.1:53283  (le port peut changer)</p> <p>Comme vous l'avez appris l'ann\u00e9e derni\u00e8re, tout ordinateur est connu sur un r\u00e9seau via son adresse IP qui est unique.</p> <p>Quelle que soit son adresse IP, tout ordinateur se conna\u00eet lui-m\u00eame sous l'adresse 127.0.0.1, ou localhost.</p> <p>C'est un peu lors de la communication entre humains. Si vous vous appelez Bob et que vous avez faim, vous dites \"J'ai faim\", et pas \"Bob a faim\".</p> <p>127.0.0.1, c'est un peu le \"Je\" des machines sur un r\u00e9seau. Tout le monde a son \"Je\", qui s'appelle ici localhost (boucle locale).</p> <p>Flet a lanc\u00e9 un serveur HTTP sur lequel il sert l'application flet que vous avez cr\u00e9\u00e9 sur le PORT 53283.</p> <p>Votre ordinateur est un peu comme un immeuble. Il a une adresse certes, mais il existe plusieurs services qui ont chacun un num\u00e9ro de porte.</p> <p>Ici, flet s'est lanc\u00e9 \u00e0 la porte 53283 de l'immeuble.</p> <p>Lorsque vous allez sur internet, vous ne sp\u00e9cifiez pas de port. C'est parce qu'il y a des ports par d\u00e9faut.</p> <ul> <li>Allez sur www.google.fr:443</li> <li>Ca marche, car 443 est le port par d\u00e9fuat pour https, il n'y a pas besoin de le mettre.</li> </ul>"},{"location":"premi%C3%A8re/IHM/flet/#documentation-officielle","title":"Documentation officielle","text":"<p>La documentation officielle est tr\u00e8s bien faite et permet de tester divers contr\u00f4les.</p> <p>Lien doc flet</p> <p>Pendu</p> <p>Donnez une IHM flet \u00e0 votre pendu</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/","title":"Algorithmique","text":"<p>D\u00e9finition</p> <p>Un algorithme est un dispositif formel qui, pour chaque entr\u00e9e issue d'un ensemble d\u00e9termin\u00e9, ex\u00e9cute une suite finie d'instructions \u00e9l\u00e9mentaires et termine au bout d'un nombre fini d'\u00e9tapes, en produisant une sortie (ou un \u00e9tat final).</p> <p>Un dispositif formel d\u00e9signe une structure logique qui sert \u00e0 d\u00e9crire et \u00e9tudier de fa\u00e7on rigoureuse un calcul.</p> <p>En pratique, on s'appuie sur cette m\u00e9thode pour construire un algorithme:</p> <ul> <li>Lister des \u00e9tapes finies et ex\u00e9cutables clairement</li> <li>Garantir une terminaison pour toute entr\u00e9e (ou au moins pour toutes celles qu'on consid\u00e8re valides)</li> <li>Garantir une r\u00e9ponse correcte vis-\u00e0-vis du probl\u00e8me initial</li> </ul> <p>Un algorithme peut \u00eatre sp\u00e9cifi\u00e9 en langage humain ou en langage informatique, mais peut aussi \u00eatre bas\u00e9 sur un syst\u00e8me mat\u00e9riel. L'unique obligation est que sa sp\u00e9cification fournisse une description pr\u00e9cise de la proc\u00e9dure de calcul \u00e0 suivre.</p> <p>Nous nous appuierons sur des algorithmes simples que vous avez d\u00e9j\u00e0 impl\u00e9ment\u00e9s.</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#probleme-informatique","title":"Probl\u00e8me informatique","text":"<p>Probl\u00e8me</p> <p>Un probl\u00e8me informatique est une question bien d\u00e9finie, pour laquelle on cherche une m\u00e9thode syst\u00e9matique (un algorithme) permettant de produire une solution valide pour toutes les donn\u00e9es d'entr\u00e9e possibles.</p> <p>Les probl\u00e8mes bien d\u00e9finis, connus et \u00e9tudi\u00e9s poss\u00e8dent des noms. Ils sont universellement reconnus par la communaut\u00e9 scientifique.</p> Nom du probl\u00e8me Description TSP (Travelling Salesman Problem) Trouver le plus court chemin passant par toutes les villes une seule fois. PRIME D\u00e9terminer si un entier donn\u00e9 est un nombre premier. SORTING Trier une liste d'\u00e9l\u00e9ments selon un ordre. SEARCH Trouver un \u00e9l\u00e9ment dans une structure (tableau, graphe, arbre, \u2026). FACTORING D\u00e9composer un nombre en facteurs premiers. SAT (Satisfiability) Savoir s'il existe une affectation qui rend une formule logique vraie. CLIQUE Trouver un ensemble de sommets tous adjacents dans un graphe. PATH Savoir s'il existe un chemin entre deux n\u0153uds dans un graphe. SUBSET SUM Trouver si une somme d'\u00e9l\u00e9ments d'un ensemble donne une valeur cible. <p>Une partie importante de la recherche en informatique consiste \u00e0 trouver des algorithmes de plus en plus efficaces pour r\u00e9soudre des probl\u00e8mes donn\u00e9s.</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#correction-totale-dun-algorithme","title":"Correction totale d'un algorithme","text":"<p>On ne peut pas d\u00e9terminer qu'un algorithme est bon juste parce qu'il marche intuitivement sur quelques entr\u00e9es qu'on a test\u00e9. Certains outils humains peuvent causer des pertes humaines et/ou \u00e9conomiques importantes s'ils sont mal programm\u00e9s. Il est donc n\u00e9cessaire de s'assurer que les algorithmes utilis\u00e9s sont toujours totalement corrects. C'est \u00e0 dire qu'ils r\u00e9solvent toujours le probl\u00e8me qu'ils sont cens\u00e9s r\u00e9soudre.</p> <p>Nous travaillerons sur base du probl\u00e8me FIND-MIN afin de d\u00e9couvrir comment on d\u00e9montre qu'un algorithme est totalement correct.</p> <p>Definition: tableau</p> <p>Un tableau (ou array en anglais) est une structure de donn\u00e9es qui permet de stocker plusieurs valeurs du m\u00eame type, organis\u00e9es de mani\u00e8re ordonn\u00e9e, et accessibles via un indice (ou index).</p> <p>En python, nous utilisons le type <code>list</code> pour mod\u00e9liser des tableaux.</p> <p>Le probl\u00e8me FIND\u2011MIN</p> <p>But:\u00a0D\u00e9terminer la valeur minimale d\u2019un tableau \\(T\\) de taille \\(n\\).</p> <p>Pr\u00e9condition\u00a0: \\(n &gt; 0\\).</p> <p>Post-condition  Si \\(m\\) est le r\u00e9sultat, alors $$ \\huge   m \\;=\\; \\min_{0 \\le i &lt; n}\\, \\color{red}T[i] $$</p> <p>Consid\u00e9rons l'entr\u00e9e \\([4, 9, 3, 19]\\)</p> <p>L'algorithme renvoie \\(3\\)</p> <p>Consid\u00e9rons l'entr\u00e9e \\([]\\). </p> <p>C'est un cas non d\u00e9fini. En pratique, l'algorithme produira une erreur ou une valeur sp\u00e9ciale en sortie.</p> <p>Voici l'algorithme que nous avons d\u00e9j\u00e0 vu:</p> <pre><code># Algorithme - Calculer le minimum de T\n# Entr\u00e9e: Un tableau T de taille n\n# Sortie: Le plus petit \u00e9l\u00e9ment de T\n# Pr\u00e9-condition: n&gt;0\n# Post-condition: sortie = min(T)\n1. mini \u2190 T[0]\n2. POUR i allant de 1 \u00e0 n-1:\n3.     SI T[i] &lt; mini\n4.          mini \u2190 T[i]\n3. RETOURNER mini\n</code></pre>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#terminaison","title":"Terminaison","text":"<p>Terminaison</p> <p>Un algorithme doit se terminer</p> <p>Si toutes les boucles d'un algorithme se terminent, alors l'algorithme se termine. </p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#boucles","title":"Boucles","text":"<p>Boucle born\u00e9e</p> <p>Une boucle born\u00e9e est une boucle dont le nombre d'it\u00e9rations est d\u00e9termin\u00e9 ou limit\u00e9 avant l'ex\u00e9cution, et qui s'ex\u00e9cute donc un nombre fini de fois garanti.</p> <p>Le compteur de boucle n'est pas modifi\u00e9 par les instructions internes \u00e0 la boucle.</p> <p>exemple:</p> <pre><code>for i in range(10):      # exactement 10 it\u00e9rations\n    faire_quelque_chose()\n</code></pre> <p>Une boucle while est aussi consid\u00e9r\u00e9e comme born\u00e9e dans le cas o\u00f9 un compteur garantit sa terminaison \u00e0 la fa\u00e7on d'une boucle for.</p> <pre><code>i = 0\nwhile i &lt; 10:\n    faire_quelque_chose()\n    i += 1\n</code></pre> <p>Une boucle born\u00e9e dont l'indice de d\u00e9part est sup\u00e9rieure \u00e0 son indice d'arriv\u00e9e ne s'ex\u00e9cute pas. De m\u00eame, \\(\\displaystyle \\sum_{k=6}^{2}k=0\\) car c'est une somme qui n'accumule aucune valeur. En effet, la condition d'arr\u00eat de la boucle est d\u00e9j\u00e0 remplie avant de s'y engager.</p> <p>Boucle non born\u00e9e</p> <p>Une boucle non born\u00e9e est une boucle dont le nombre d'it\u00e9rations n'est pas d\u00e9termin\u00e9 \u00e0 l'avance. On ne peut pas savoir a priori combien de fois elle va s'ex\u00e9cuter : cela d\u00e9pend d'une condition d'arr\u00eate dynamique, qui \u00e9volue pendant l'ex\u00e9cution.</p> <pre><code>while not condition_arret():\n    faire_quelque_chose()\n</code></pre> <p>Ici, la terminaison d\u00e9pend d'une condition d'arr\u00eat dont on ne peut pas a priori si elle sera vraie un jour.</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#variant-de-boucle","title":"Variant de boucle","text":"<p>Variant de boucle</p> <p>Un variant de boucle est une quantit\u00e9 enti\u00e8re positive strictement d\u00e9croissante qui assure la terminaison d'une boucle lorsqu'elle atteint une limite inf\u00e9rieure (souvent 0).</p> <p>Pour prouver qu'un algorithme se termine, on exhibe un variant de boucle et on montre que cette quantit\u00e9 est strictememnt d\u00e9croissante, pour atteindre son minimum.</p> <p>Puor FIND-MIN, Le variant de boucle est \\(n-i-1\\). et il assure la terminaison du programme.</p> <p>Quoi qu'il arrive, \\(i\\) va aller de \\(0\\) \u00e0 \\(n-1\\), donc le variant de \\(n-1\\) \u00e0 0, puis la boucle se termine, car elle n'est compos\u00e9e que d'instructions \u00e9l\u00e9mentaires qui se terminent. </p> <p>D'un point de vue g\u00e9n\u00e9ral:</p> <p>Th\u00e9or\u00e8me</p> <p>Toute boucle born\u00e9e compos\u00e9e d'instructions se terminant se termine.</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#invariant-de-boucle","title":"Invariant de boucle","text":"<p>Invariant de boucle</p> <p>Un invariant de boucle est une propri\u00e9t\u00e9 qui :</p> <ol> <li>Est vraie au d\u00e9but de chaque it\u00e9ration d'une boucle.  </li> <li>Reste vraie apr\u00e8s chaque it\u00e9ration.  </li> </ol> <p>Pour le probl\u00e8me FIND-MIN, l'invariant de boucle est la propri\u00e9t\u00e9:</p> <p>\"Au d\u00e9but de l'it\u00e9ration \\(i\\), \\(mini\\) contient le minimum de \\(T[0..i-1]\\)\"</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#correction-totale","title":"Correction totale","text":"<p>Correction totale</p> <p>Afin de montrer qu'un algorithme est totalement correct, si on note \\(I\\) l'invariant, il doit v\u00e9rifier :</p> <ul> <li>Initialisation : Au moment d'entrer dans la boucle (avant la premi\u00e8re it\u00e9ration), \\(I\\) est vrai.  </li> <li>Conservation : Si \\(I\\) est vrai au d\u00e9but d'une it\u00e9ration, alors il reste vraie \u00e0 la fin de cette it\u00e9ration (Donc au d\u00e9but de la suivante).</li> <li>Terminaison : Quand la boucle s'arr\u00eate (car on a pr\u00e9alablement porouv\u00e9 la terminaison ou on le prouve ici), la propri\u00e9t\u00e9 \\(I\\) et la condition de sortie permettent de conclure sur le r\u00e9sultat de l'algorithme.</li> </ul> <p>Ce proc\u00e9d\u00e9 est un raisonnement dit inductif, ou r\u00e9current (voir annexe), auquel on ajoute l'\u00e9tape de terminaison.</p> <p>Ces trois phases nous permettent de prouver qu'une boucle fait bien ce qu'on voulait qu'elle fasse. On dit que la boucle est partiellement correcte lorsqu'on a d\u00e9montr\u00e9 la conservation de l'invariant.</p> <p>Une boucle partiellement correcte qui se termine est totalement correcte.</p> <p>Un algorithme est dit totalement correct si toutes ses boucles sont totalement correctes.</p> <p>Notations</p> <ul> <li>\\(T[i..j]\\) repr\u00e9sente le sous-tableau de \\(T\\) de l'indice \\(i\\) \u00e0 l'indice \\(j\\) inclus.</li> <li>\\(T[i..i]\\) reprr\u00e9sente le sous-tableau de \\(T\\) ne comportant que \\(T[i]\\).</li> <li>Attention, contrairement aux slices, la borne sup\u00e9rieure est incluse.</li> </ul> <p>INITIALISATION</p> <ol> <li> <p>Si le tableau n'a qu'un \u00e9l\u00e9ment, la boucle ne s'ex\u00e9cute pas et le minimum est correctement renvoy\u00e9. </p> </li> <li> <p>Si le tableau a au moins un \u00e9l\u00e9ment, \\(i=1\\) et \\(mini\\) est bien le minimum de \\(T[0..0]\\), le tableau constitu\u00e9 d'un seul \u00e9l\u00e9ment.</p> </li> </ol> <p>L'invariant est donc v\u00e9rifi\u00e9 pour \\(\\bold{i=1}\\).</p> <p>CONSERVATION On suppose que pour \\(i\\ge1\\) quelconque, l'invariant est vrai.</p> <p>Donc en d\u00e9but d'it\u00e9ration \\(i\\), \"\\(mini\\) est le minimum de \\(T[0..i-1]\\)\" est vrai</p> <p>On veut alors prouver qu'apr\u00e8s une it\u00e9ration, \"\\(mini\\) est le minimum de \\(T[0..i]\\)\" est vrai</p> <p>D\u00e9roulons l'algorithme: - Si \\(T[i] \\gt mini\\), alors \\(mini\\) est aussi le \\(minimum\\) de \\(T[0..i]\\) et l'invariant est v\u00e9rifi\u00e9 en sortie d'it\u00e9ration, car on ne fait rien dans ce cas. - Sinon, \\(T[i] \\le mini\\), et donc \\(mini\\) n'est pas le minimum de \\(T[0..i]\\). Mais nous r\u00e9tablissons imm\u00e9diatement l'invariant en affectant \\(T[i]\\) \u00e0 \\(mini\\) qui devient bien le minimum de \\(T[0..i]\\).</p> <p>Dans tous les cas, en sortie de boucle, \"\\(mini\\) est le minimum de T[0..i]\" est vrai, ce que nous voulions d\u00e9montrer.</p> <p>L'invariant est donc conserv\u00e9. L'algorithme est partiellement correct.</p> <p>TERMINAISON Nous avons d\u00e9j\u00e0 prouv\u00e9 la terminaison de l'algorithme.</p> <p>Lors de sa derni\u00e8re it\u00e9ration, \\(i=n-1\\) et l'invariant reste vrai pour \\(i=n\\) par conservation.</p> <p>Donc mini est le minimum de \\(T[0..n-1]\\)</p> <p>Notre algorithme de recherche de minimum est donc totalement correct.</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#le-probleme-de-lindice-du-minimum-argmin","title":"Le probl\u00e8me de l'indice du minimum - ARGMIN","text":"<p>Description du probl\u00e8me ARGMIN</p> <p>But:\u00a0D\u00e9terminer le plus petit indice de la valeur minimale d\u2019un tableau \\(T\\) de taille \\(n\\) \u00e0 partir d'un indice \\(k\\).</p> <p>Pr\u00e9conditions\u00a0:  - \\(n &gt; 0\\) - \\(0 \\le k &lt; n\\)</p> <p>Post-condition Si \\(imin\\) est le r\u00e9sultat, alors voici la notation utilis\u00e9e $$ \\huge   imin^{\\star} \\; \\in \\; \\argmin_{k \\le {\\color{red}i} &lt; n}\\, T[i] $$</p> <p>Qui signifie que \\(imin\\) est le plus petit minimisant de l'ensemble des minimisants.</p> <p>Par exemple, si \\(T=[4, 1, 1, 5, 9, 1]\\), alors l'ensemble des indices minimisants \u00e0 partir de \\(k=0\\) est \\([1, 2, 5]\\), et donc \\(imin\\) vaudra \\(1\\).</p> <p>Consid\u00e9rons l'entr\u00e9e \\(T=[0, 9, 3, 19]\\) et \\(k=1\\)</p> <p>La sortie de l'algorithme pour cette entr\u00e9e est 2, car \u00e0 partir de l'indice 1, 3 est le minimum, et son indice dans le tableau est 2.</p> <p>Note: Habituellement, argmin renvoie l'ensemble des minimisants, mais on peut pr\u00e9ciser qu'on ne cherche qu'un minimisant, ce qui est notre cas.</p> <p>Nous voulons prouver que cet algorithme que nous avons d\u00e9j\u00e0 programm\u00e9 r\u00e9soud ARGMIN</p> <pre><code># Algorithme - Calculer l'indice du minimum de T \u00e0 partir de l'indice k\n# Entr\u00e9es:\n   Un tableau T de taille n\n   Un indice de d\u00e9part k\n# Sortie: L'indice imin du minimum de T \u00e0 partir de l'indice k\n# Pr\u00e9-condition: n&gt;0 et 0&lt;=k&lt;n\n1. imini \u2190 k\n2. Pour i allant de k+1 \u00e0 n-1:\n3.     Si T[i] &lt; T[imini]\n4.          imini \u2190 i\n3. Retourner mini\n</code></pre> <p>Exercice</p> <p>Reprendre la m\u00e9thode pr\u00e9c\u00e9dente pour prouver la correction totale de l'algorithme de recherche d'indice minimum:</p> <ol> <li>Formulation de l'invariant</li> <li>Initialisation</li> <li>Conservation</li> <li>Terminaison</li> </ol>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#introduction-a-la-complexite-en-temps","title":"Introduction \u00e0 la complexit\u00e9 en temps","text":"<p>Ici, il s'agit d'estimer le temps que va prendre un algorithme \u00e0 s'ex\u00e9cuter. Il existe aussi une complexit\u00e9 spatiale, mais nous ne l'aborderons pas.</p> <p>Dans le cadre de ce cours, on assimilera le temps au nombre d'instructions \u00e9l\u00e9mentaires n\u00e9cessaires \u00e0 l'ex\u00e9cution d'un algorithme, dans le pire des cas. Le pire des cas est celui d'une entr\u00e9e qui va n\u00e9cessiter le plus d'instructions.</p> <p>Il existe d'autres cas de figure que le pire des cas, mais nous ne les aborderons pas.</p> <p>Lorsque nous parlerons de complexit\u00e9, nous entendrons donc toujours complexit\u00e9 temporelle dans le pire des cas.</p> <p>Taille d'une instance</p> <p>La taille d'une instance d'un probl\u00e8me algorithmique est une grandeur  repr\u00e9sentant une mesure pertinente (nombre d'\u00e9l\u00e9ments, nombre de bits, longueur d'une cha\u00eene, etc.) associ\u00e9e aux donn\u00e9es en entr\u00e9e de l'algorithme.</p> <p>En pratique, la taille est souvent not\u00e9e \\(n\\). \\(n\\) est choisie de fa\u00e7on \u00e0 \u00eatre fonction de la quantit\u00e9 de travail que doit effectuer l'algorithme.</p> <p>Pour le probl\u00e8me du minimum, la taille de l'instance est celle du tableau en entr\u00e9e.</p> <pre><code># Algorithme - Calculer le minimum de T[0..n-1]\n1. mini \u2190 T[0]\n2. Pour i allant de 1 \u00e0 n-1:\n3.     Si T[i] &lt; e\n4.          mini \u2190 T[i]\n3. Retourner mini\n</code></pre> <p>Pire des cas</p> <ul> <li> <p>Quelle est la caract\u00e9ristique d'une instance repr\u00e9sentant le pire des cas pour le probl\u00e8me du minimum?</p> </li> <li> <p>A c\u00f4t\u00e9 de chaque instruction de ce programme, indiquer le nombre de fois o\u00f9 elle sera ex\u00e9cut\u00e9e en fonction de la taille \\(n\\) de l'instance.</p> </li> <li> <p>En d\u00e9duire le nombre d'instructions \u00e9l\u00e9mentaires \\(T(n)\\) ex\u00e9cut\u00e9es par l'algorithme dans le pire des cas en fonction de \\(n\\)</p> <ul> <li>Vous devez trouver \\(T(n)=3n+2\\)</li> </ul> </li> </ul> <p>Attention: On note souvent \\(T(n)\\) le temps en fonction de \\(n\\). Aussi en fran\u00e7ais, on appelle souvent les tableaux \\(T\\). Ce qui peut porter \u00e0 confusion.</p> <p>Complexit\u00e9s \u00e9l\u00e9mentaires</p> <ul> <li>Lorsqu'on trouve que \\(T(n)=a\\), on dit que l'algorithme est \u00e0 co\u00fbt constant.<ul> <li>On dira aussi que la complexit\u00e9 est un \\(\\mathcal{O}(1)\\) (grand O de 1)</li> </ul> </li> <li>Lorsqu'on trouve que \\(T(n)=an+b\\), on dit que l'algorithme a un co\u00fbt lin\u00e9aire.<ul> <li>On dira aussi que la complexit\u00e9 est un \\(\\mathcal{O}(n)\\) (grand O de n)</li> </ul> </li> <li>Lorsqu'on trouve que \\(T(n)=an^2+bn+c\\), on dit que l'algorithme a un co\u00fbt quadratique.<ul> <li>On dira aussi que la complexit\u00e9 est un \\(\\mathcal{O}(n^2)\\) (grand O de \\(n\\) carr\u00e9)</li> </ul> </li> </ul> <p>Si un algorithme est en \\(\\mathcal{O}(n^2)\\), \u00e7a veut dire que sa fonction de temps est domin\u00e9e par \\(n^2\\). Elle ne peut pas \u00eatre plus \"grande\".</p> <p>Ces 3 types de complexit\u00e9s font partie de la m\u00eame classe de complexit\u00e9. On l'appelle la classe P. Elle englobe tous les algorithmes qui calculent en temps polyn\u00f4mial.</p> <p>Le petit outil ci-dessous permet de comparer la croissance de 2 fonctions quand \\(x\\) tend vers l'infini positif. C'est ce qui nous int\u00e9resse en complexit\u00e9.</p> <p>S\u00e9lectionnez donc \\(x^2\\) et \\(2^x\\). Lorsque vous appuyez sur D\u00e9marrer, une animation se lance. Vous visionnez alors la courbe repr\u00e9sentative des fonctions \u00e0 travers une fen\u00eatre de largeur 2 qui se d\u00e9place vers la droite sur l'axe des abscisses. Vous pouvez r\u00e9gler la vitesse de d\u00e9placement de cette fen\u00eatre avec le curseur.</p> <p>Attention, la hauteur du graphique ne change pas mais ymax cro\u00eet en permanence. Toutes ces fonctions sont croissantes et ne cesseront jamais de l'\u00eatre. Elles tendent toutes vers \\(+\\infin\\) quand \\(x\\) tend vers \\(+\\infin\\).</p> <p></p> <p>On peut se rendre compte que plus \\(x\\) grandit, plus certaines fonctions sont \"n\u00e9gligeables\" devant d'autres. Ca explique par exemple pourquoi on ne conservera que l'information \\(n^2\\) dans l'expression \\(an^2+bn+c\\) quand on s'occupe de valeurs de \\(n\\) tendant vers \\(+\\infin\\). Car le reste est n\u00e9gligeable par rapport \u00e0 l'expression \\(an^2\\). Il y a m\u00eame une notation pour \u00e7a. \\(o(n^2)\\) (petit o de \\(n^2\\)) repr\u00e9sente les fonctions n\u00e9gligeables devant \\(n^2\\). Toutes ces fonctions s'\u00e9loignent infiniment l'une de l'autre \u00e0 mesure que x tend vers l'infini.</p> <p>Complexit\u00e9 du minimum</p> <p>Quelle est la complexit\u00e9 de l'algorithme de recherche de minimum?</p> <p>Exercice</p> <p>Objectif : \u00c9tant donn\u00e9 un tableau de taille \\(n\\), afficher toutes les paires possibles d'\u00e9l\u00e9ments.</p> <p>Entr\u00e9e : Un tableau T[0..n-1] Sortie impr\u00e9cise : Toutes les paires d'\u00e9l\u00e9ments possibles</p> <p>Voici 2 algorithmes possibles selon qu'on consid\u00e8re ou non des r\u00e9p\u00e9titions.</p> <p>Algo 1</p> <pre><code>1. Pour i allant de 0 \u00e0 n-1 :\n2.     Pour j allant de 0 \u00e0 n-1 :\n3.         afficher(T[i], T[j])\n</code></pre> <ol> <li>Ecrivez l'affichage obtenu pour T=[2, 4, 6]</li> <li>Estimer \\(T(n)\\) et en d\u00e9duire la complexit\u00e9 de l'Algo1</li> </ol> <p>Algo 2</p> <pre><code>1. Pour i allant de 0 \u00e0 n-1 :\n2.     Pour j allant de i \u00e0 n-1 :\n3.         afficher(T[i], T[j])\n</code></pre> <ol> <li>Ecrivez l'affichage obtenu pour T=[2, 4, 6]</li> <li>Estimer \\(T(n)\\) et en d\u00e9duire la complexit\u00e9 de l'Algo2</li> </ol>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#exercice","title":"Exercice","text":"<p>Ensembe des minimisants</p> <p>Ecrire et tester une fonction python <code>argmin</code> qui r\u00e9soud le probl\u00e8me ARGMIN en renvoyant cette fois-ci l'ensemble des minimisants.</p> \\[ ens\\_min = \\argmin_{k \\le {\\color{red}i} &lt; n}\\, f[i] \\] <p>Moyenne mobile d'un tableau</p> <p>Les moyennes mobiles sont utilis\u00e9es dans divers domaines pour lisser des fluctuations \u00e0 court terme et ainsi r\u00e9v\u00e9ler clairement les tendances globales \u00e0 moyen ou long terme. Par exemple, en finance, elles servent \u00e0 identifier les tendances du march\u00e9 boursier sur des p\u00e9riodes pr\u00e9cises. En m\u00e9t\u00e9orologie, elles permettent de mieux discerner les tendances saisonni\u00e8res des temp\u00e9ratures ou pr\u00e9cipitations. En sant\u00e9 publique, elles facilitent le suivi des \u00e9pid\u00e9mies, en compensant les variations dues aux week-ends ou aux jours f\u00e9ri\u00e9s. De m\u00eame, en \u00e9lectronique et traitement du signal, elles sont utilis\u00e9es pour filtrer le bruit des donn\u00e9es issues de capteurs. Enfin, en \u00e9conomie et en marketing digital, elles aident \u00e0 rep\u00e9rer les cycles \u00e9conomiques et \u00e0 analyser le trafic web pour une meilleure prise de d\u00e9cision strat\u00e9gique.</p> <p>D\u00e9finition : \u00c9tant donn\u00e9 un tableau de nombres r\u00e9els \\( T[0..n-1] \\), le tableau \\(M\\) de moyennes mobiles de taille \\( k \\) est d\u00e9fini ainsi:</p> \\[ M[i] = \\frac{T[i+k-1] + T[i+k-2] + \\dots + T[i]}{k} \\] <p>Ainsi, le tableau des moyennes mobiles \\( M \\) aura pour taille \\( n-k+1 \\).</p> <p>Question 1 : Calculer les tableaux de moyennes mobiles \\(M\\) pour le tableau T suivant :</p> <ul> <li>\\( T = [2, 4, 6, 11, 10, 12] \\)<ol> <li>pour \\( k = 3 \\)</li> <li>pour \\( k = 4 \\)</li> </ol> </li> </ul> <p>Question 2 : \u00c9crire en pseudocode simple un algorithme permettant de calculer la moyenne mobile d'un tableau \\( T[0..n-1] \\) avec une fen\u00eatre de taille \\( k \\).</p> <p>Question 3 : Ecrivez une fonction permettant de tester votre pseudo code.</p> <p>Question 4 : \u00c9tudier et exprimer la complexit\u00e9 temporelle de l'algorithme en fonction des variables \\( n \\) et \\( k \\).</p> <p>Question 5 (Bonus) : Proposer une am\u00e9lioration de l'algorithme pour r\u00e9duire sa complexit\u00e9 temporelle, en expliquant le principe et la complexit\u00e9 obtenue.</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#pour-aller-plus-loin-python","title":"Pour aller plus loin - python","text":"<p>En python, \u00e9tant donn\u00e9 unne fonction f, l'expression     </p> \\[ mini \\;=\\; \\min_{k \\le i &lt; n}\\, f(i) \\] <p>peut s'\u00e9crire</p> <pre><code>mini = min(f(i) for i in range(k,n))\n</code></pre> <p>Et l'expression suivante $$ imin^{\\star} \\; \\in \\; \\argmin_{k \\le {\\color{red}i} &lt; n}\\, f[i] $$</p> <p>peut s'\u00e9crire <pre><code>imin = min(range(k, n), key=f)\n</code></pre></p> <p>On essaie, quand la pratique et le langage utilis\u00e9 rend \u00e7a possible, de privil\u00e9gier ces \u00e9critures math\u00e9matiques afin de gagner en compacit\u00e9 dans les programmes, ce qui limite les erreurs potentielles, favorise la lisibilit\u00e9 du code, et conserve le code proche de sa d\u00e9finition rigoureuse.</p>"},{"location":"premi%C3%A8re/algorithmique/1.algo/#pour-aller-beaucoup-plus-loin-preuve-automatique","title":"Pour aller (beaucoup) plus loin - Preuve automatique","text":"<p>Il existe des langages con\u00e7us pour pour \u00e9crire des programmes corrects par construction.</p> <p>Par exemple, Why3 int\u00e8gre la preuve de correction totale en se servant de programmes \"prouveurs\".</p> <p>Ici, voici un programme \u00e9crit en Why3 version 1.8.0 qui permet de prouver la correction totale de l'algorithme argmin \u00e0 l'aide du prover alt-ergo version 2.6.0</p> <pre><code>use int.Int\nuse array.Array\nuse array.IntArraySorted\nuse array.ArrayPermut\nuse array.ArrayEq\nuse ref.Ref\n\nlet argmin (a: array int) (k: int) : (imin: int)\n  requires { length a &gt; 0 }\n  requires { 0 &lt;= k &lt; length a }\n  ensures  { k &lt;= imin &lt; length a }\n  ensures  { forall i. k &lt;= i &lt; length a -&gt; a[imin] &lt;= a[i] }\n=\n  let ref n = length a in\n  let ref imin = k in\n  for i = k+1 to n-1 do\n    invariant { k &lt;= imin &lt; i }\n    invariant { forall j. k &lt;= j &lt; i -&gt; a[imin] &lt;= a[j] }\n\n    if a[i] &lt; a[imin] then imin := i\n\n  done;\n  return imin\n</code></pre> <p>Lors de la v\u00e9rification, la console affiche</p> <pre><code>Prover result is: Valid (0.05s, 82 steps).\n</code></pre> <p>Ce qui nous indique que notre algo est totalement correct.</p> <p>Why3 et Alt-Ergo sont issus du travail de recherche du Laboratoire de M\u00e9thodes Formelles du CNRS. Le LMF est form\u00e9 du Laboratoire Sp\u00e9cification et V\u00e9rification (LSV, ENS Paris-Saclay, CNRS, Inria) et de l\u2019\u00e9quipe Vals du Laboratoire de Recherche en Informatique (LRI, Universit\u00e9 Paris-Saclay, CNRS, Inria, CentraleSup\u00e9lec) soit une centaine de personnes.</p>"},{"location":"premi%C3%A8re/algorithmique/2.tri_selection/","title":"Tri par S\u00e9lection","text":"<p>Trier</p> <p>Un tableau est dit tri\u00e9 lorsque ses \u00e9l\u00e9ments sont ordonn\u00e9s (du plus petit au plus grand si \u00e7a n'est pas pr\u00e9cis\u00e9).</p> <p>Un tableau dont les \u00e9l\u00e9ments ne sont pas ordonn\u00e9s n'est pas tri\u00e9. (\u00e7a peut para\u00eetre b\u00eate mais c'est important)</p> <p>Lorsqu'on trie un tableau T, le tableau r\u00e9sultat doit: - Etre tri\u00e9 - Etre une permutation du tableau initial</p> <p>Une permutation d'un tableau T est un tableau contenant exactement les m\u00eames \u00e9l\u00e9ments avec la m\u00eame multiplicit\u00e9, ind\u00e9pendamment de leur ordre.</p> <p>Par exemple:</p> <ul> <li>[1, 9, 7] est une premutation de [9, 1, 7]</li> <li>[2, 8, 7, 8] est une permutation de [8, 2, 8, 7]</li> </ul> <p>Il existe plusieurs m\u00e9thodes pour trier. Cette op\u00e9ration est fondamentale en informatique.</p> <p>Les m\u00e9thodes ci-dessous permettent de le faire \u00e0 la fa\u00e7on dont on peut trier un jeu de cartes.</p> <p>Il en existe d'autres bien plus performantes</p> <p>Il s'agit du probl\u00e8me SORTING pour lequel nous allons voir 2 algorithmes bien connu.</p>"},{"location":"premi%C3%A8re/algorithmique/2.tri_selection/#tri-par-selection_1","title":"Tri par s\u00e9lection","text":"<p>Algorithme imag\u00e9</p> <p>Je veux trier des cartes</p> <ul> <li>Dans ma main droite, j'ai l'ensemble des cartes. </li> <li>Je d\u00e9place successivement sur ma main gauche la plus petite carte de la main droite.</li> <li>A l'arriv\u00e9e, ma main gauche est tri\u00e9e et ma main droite est vide</li> </ul> <p></p> <p>L'invariant est ici compos\u00e9 de 3 propri\u00e9t\u00e9s:</p> <ol> <li>Les cartes de la main gauches sont toutes inf\u00e9rieures ou \u00e9gales \u00e0 celles de la main droite</li> <li>Les cartes de la main gauche sont tri\u00e9es</li> <li>Les cartes de la main gauche et de la main droite sont une permutation du tableau initial</li> </ol> <p>INITIALISATION L'invariant est vrai au d\u00e9but car :</p> <ol> <li> <p>Toutes les cartes de la main droite sont sup\u00e9rieures aux 0 cartes de ma main gauche. Cette derni\u00e8re affirmation \u00e0 premi\u00e8re vue \u00e9trange vient qu'en logique, c'est vrai parce que rien dans le vide ne permet de l'infirmer. De la m\u00eame mani\u00e8re, \"Tous les portables sont \u00e9teints dans la pi\u00e8ce\" est vrai m\u00eame s'il n'y a pas de portable dans la pi\u00e8ce. Les anglophones appellent \u00e7a une \"vacuous truth\", une v\u00e9rit\u00e9 \u00e9manant de l'incapacit\u00e9 du vide \u00e0 infirmer. (1)</p> </li> <li> <p>Ma main gauche est vide donc elle n'est pas d\u00e9sordonn\u00e9e. Elle est donc tri\u00e9e.</p> </li> <li> <p>Dans ma main droite, j'ai l'ensemble du jeu de cartes, ni plus ni moins,donc une permutation du jeu de cartes.</p> </li> </ol> <p>CONSERVATION DE L'INVARIANT A un moment quelconque de l'algorithme, imaginons l'invariant vrai.</p> <ol> <li>Les cartes de ma main gauche sont inf\u00e9rieures \u00e0 celles de la main droite</li> <li>La main gauche est tri\u00e9e</li> <li>L'ensemble des cartes en ma possession est une permutation du jeu de cartes</li> </ol> <p>Si je prends la carte de la main droite, par (1.), elle reste donc sup\u00e9rieure \u00e0 celles de la main gauche.</p> <p>Dans le processus, je ne perds ni ne gagne de cartes (3. reste vraie).</p> <p>De plus, les cartes de ma main droite sont encore sup\u00e9rieures ou \u00e9gales \u00e0 celles de la main gauche (1. reste vraie)</p> <p>De ce fait, si je la place sur ma main gauche tri\u00e9e, ma main gauche reste tri\u00e9e (2. reste vraie)</p> <p>Apr\u00e8s avoir appliqu\u00e9 une \u00e9tape de l'algorithme en supposant l'invariant vrai, on a donc prouv\u00e9 que l'invariant est conserv\u00e9.</p> <p>TERMINAISON</p> <p>La main droite perd exactement une carte par tour\u00a0; apr\u00e8s n tours, elle est vide. On ne peut plus d\u00e9placer de cartes. Donc l'algorithme se termine.</p> <p>L'invariant est vrai au d\u00e9part, et il est conserv\u00e9 \u00e0 chaque \u00e9tape quelconque de l'algorithme. C'est donc qu'il est aussi vrai \u00e0 la fin de l'algorithme.</p> <p>A la fin de l'algorithme, toutes les cartes sont dans la main gauche et l'invariant est vrai.</p> <p>C'est donc que ma main gauche contient une permutation tri\u00e9e du jeu de cartes.</p> <p>Impl\u00e9mentation d'apr\u00e8s l'exemple donn\u00e9</p> <p>Ecrire une fonction <code>tri_selection(main_gauche: list[int], main_droite: list[int])</code> qui applique cet algorithme.</p> <pre><code>def tri_selection(main_gauche: list[int], main_droite: list[int]):\n    \"\"\"\n    Applique le tri par s\u00e9lection tel que pr\u00e9sent\u00e9.\n\n    TANT QUE \"la main droite n'est pas vide\"\n       PRENDRE LE MINIMUM DE LA MAIN DROITE\n       L'AJOUTER A LA FIN DE LA MAIN GAUCHE\n\n    &gt;&gt;&gt; g = []\n    &gt;&gt;&gt; d = [5, 3, 9, 6]\n    &gt;&gt;&gt; tri_selection(g, d)\n    &gt;&gt;&gt; g\n    [3, 5, 6, 9]\n    &gt;&gt;&gt; d\n    []\n    \"\"\"\n</code></pre> <p>Nous allons maintenant faire exactement la m\u00eame chose, mais avec les notations usuelles.</p> <p>Algorithme usuel</p> <ul> <li>On dispose d'un tableau \\(T\\) de taille \\(n\\) not\u00e9 \\(T[0..n-1]\\) </li> <li>Pour \\(i\\) allant de \\(0\\) \u00e0 \\(\\color{red}n-2\\)<ul> <li>\\(\\displaystyle imin = \\argmin_{j \\in [i, n-1]} T[j]\\)</li> <li>\u00e9changer \\(T[i]\\) et \\(T[imin]\\)</li> </ul> </li> </ul> <p>Notez que nous avons d\u00e9j\u00e0 r\u00e9solu et \u00e9tudi\u00e9 le probl\u00e8me ARGMIN</p> <p>Notations</p> <ul> <li>\\(T[i..j]\\) repr\u00e9sente le sous-tableau de \\(T\\) de l'indice \\(i\\) \u00e0 l'indice \\(j\\) inclus.         - Si \\(i&gt;j\\), alors il s'agit du tableau vide.</li> <li>\\(T[i..j] \\le T[k..l]\\) signifie que toutes les valeurs du tableau de gauche sont inf\u00e9rieures ou \u00e9gales aux valeurs du tableau de droite</li> <li>\\(T[i] \\le T[j..k]\\) signifie que la valeur \\(T[i]\\) est inf\u00e9rieure ou \u00e9gale \u00e0 toutes les valeurs de \\(T[j..k]\\)</li> <li>\\(T[i..i]\\) repr\u00e9sente le sous-tableau \u00e0 1 \u00e9l\u00e9ment</li> <li>L'op\u00e9rateur + sur des tableaux est la concat\u00e9nation</li> </ul> <p>FORMULATION DE L'INVARIANT:</p> <p>On reprend l'invariant pr\u00e9c\u00e9dent avec les notations.</p> <p>Au d\u00e9but de chaque it\u00e9ration \\(i\\):</p> <ol> <li>\\(T[0..i-1] \\le T[i..n-1]\\)</li> <li>\\(T[0..i-1]\\) est tri\u00e9</li> <li>\\(T[0..n-1]\\) est une permutation du tableau initial</li> </ol> <p>INITIALISATION:</p> <p>Pour i=0:</p> <p>\\(T[0..i-1] = T[0..-1] = []\\)</p> <ol> <li>Tous les \u00e9l\u00e9ments de \\([]\\) sont inf\u00e9rieurs aux \u00e9l\u00e9ments de \\(T[0..n-1]\\) (Le tableau entier)</li> <li>\\(T[0..-1]\\) est le tableau vide. Il est tri\u00e9.</li> <li>\\(T[0..n-1]\\) est une permutation de lui-m\u00eame.</li> </ol> <p>L'invariant est donc vrai avant la premi\u00e8re it\u00e9ration.</p> <p>CONSERVATION</p> <p>On suppose l'invariant vrai avant l'it\u00e9ration \\(i\\):</p> Indice \\(0\\) \u2026 \\(i\u20111\\) \\(i\\) \u2026 \\(n\u20111\\) Valeur \\(T[0]\\) \u2026 \\(T[i\u20111]\\) \\(T[i]\\) \u2026 \\(T[n\u20111]\\) <ol> <li>\\(T[0..i-1] \\le T[i..n-1]\\)</li> <li>\\(T[0..i-1]\\) est tri\u00e9</li> <li>\\(T[0..n-1]\\) est une permutation du tableau initial</li> </ol> <p>On veut prouver que l'invariant est toujours vrai avant l'it\u00e9ration \\(i+1\\), donc qu'\u00e0 la fin de l'it\u00e9ration \\(i\\) transformant \\(T\\) en \\(T'\\):</p> <ul> <li>\\(T'[0..i] \\le T'[i+1..n-1]\\)</li> <li>\\(T'[0..i]\\) est tri\u00e9</li> <li>\\(T'[0..n-1]\\) reste une permutation de \\(T\\)</li> </ul> <p>A l'it\u00e9ration \\(i\\), on calcule \\(\\displaystyle imin = \\argmin_{k \\in \\![ i, n-1\\!]} T[k]\\)</p> <p>On a donc trouv\u00e9 \\(imin\\) tel qu'on peut d\u00e9composer le tableau en:</p> 0 \u2026 i\u20111 i i+1 \u2026 imin\u20111 imin imin+1 \u2026 n\u20111 T[0] \u2026 T[i\u20111] T[i] T[i+1] \u2026 T[imin\u20111] T[imin] T[imin+1] \u2026 T[n\u20111] <p>\\(T = T[0..i-1] + {\\color{red}T[i..i]} + T[i+1..imin-1] + {\\color{blue}T[imin..imin]} + T[imin+1..n-1]\\)</p> <p>Puis on intervertit \\(T[imin]\\) et \\(T[i]\\), et notre tableau final devient:</p> <p>\\(T' = \\underbrace{T[0..i-1] + {\\color{blue}T[imin..imin]}}_{\\large T'[0..i]} +  \\underbrace{T[i+1..imin-1] + {\\color{red}T[i..i]} + T[imin+1..n-1]}_{\\large T'[i+1..n-1]}\\)</p> <p>On note imm\u00e9diatement que (3.) est conserv\u00e9 car on ne fait que transposer 2 \u00e9l\u00e9ments de \\(T\\). \\(T'\\) reste donc une permutation de \\(T\\).</p> <p>Par d\u00e9finition de \\(imin\\), et sachant (1.)</p> <p>\\(T[0..i-1] \\le T[imin..imin] \\le T[i+1..imin-1] + T[imin+1..n-1]\\)</p> <p>Donc \\(T'[0..i] \\le T'[i+1..n-1]\\), et donc (1.) est conserv\u00e9.</p> <p>Mais \\(T[imin]\\) est aussi plus grand ou \u00e9gal aux \u00e9l\u00e9ments tri\u00e9s de \\(T[0..i-1]\\) car il appartient \u00e0 \\(T[i..n-1]\\). Donc en le rattachant \u00e0 \\(T[0..i-1]\\), on ne brise pas le tri. \\(T'[0..i]\\) est donc tri\u00e9 et (2.) est conserv\u00e9.</p> <p>L'invariant est donc conserv\u00e9.</p> <p>TERMINAISON</p> <p>A la fin de la derni\u00e8re it\u00e9ration pour \\(i=n-2\\), l'invariant est conserv\u00e9. Il est donc vrai pour \\(i=n-1\\)</p> <ol> <li>\\(T[0..n-2] \\le T[n-1..n-1]\\)</li> <li>\\(T[0..n-2]\\) est tri\u00e9</li> <li>\\(T[0..n-1]\\) est une permutation du tableau initial</li> </ol> <p>(1.) et (2.) impliquent que \\(T[0..n-1]\\) est tri\u00e9. (c'est pour \u00e7a que \u00e7a suffit d'aller jusqu'\u00e0 \\(n-2\\))</p> <p>(3.) implique que le tableau est une permutation du tableau initial.</p> <p>A la fin de l'ex\u00e9cution de l'algorithme le tableau est donc une permutation tri\u00e9e du tableau initial.</p> <p>L'algorithme est totalement correct.</p> <p>Complexit\u00e9</p> <p>Quelle est la complexit\u00e9 de l'algorithme de tri par insertion</p>"},{"location":"premi%C3%A8re/algorithmique/3.tri_insertion/","title":"Tri par insertion","text":"<p>Algorithme imag\u00e9</p> <p>Je veux trier des cartes</p> <ul> <li>Dans ma main gauche, j'ai une carte. </li> <li>Dans ma main droite, j'ai le reste des cartes.</li> <li>Je d\u00e9place successivement dans ma main gauche chaque carte de la main droite en l'ins\u00e9rant \u00e0 la bonne position pour que la main gauche soit tri\u00e9e.</li> <li>A l'arriv\u00e9e, ma main gauche est tri\u00e9e et ma main droite est vide</li> </ul> <p></p> <p>Autrement dit:</p> <pre><code>1. Pour i allant de 1 \u00e0 n-1 faire :\n2.      INSERER_BONNE_PLACE(T, i)\n3. Retourner T\n</code></pre> <p>L'algorithme <code>INSERER_BONNE_PLACE(T, i)</code> place correctement l'\u00e9l\u00e9ment \\(T[i]\\) dans le sous-tableau tri\u00e9 \\(T[0..i-1]\\) afin que \\(T[0..i]\\) soit tri\u00e9 et que le tableau r\u00e9sultat soit une permutation du tableau initial.</p> <p>Prouvons la correction du tri par insertion en supposant existant et totalement correct l'algorithme <code>INSERER_BONNE_PLACE</code>.</p> <p>FORMULATION DE L'INVARIANT</p> <p>L'invariant avant l'it\u00e9ration \\(i\\) est: </p> <ul> <li>\\(T[0..i-1]\\) est tri\u00e9</li> <li>\\(T[0..n-1]\\) est une permutation du tableau initial</li> </ul> <p>INITIALISATION Si le tableau est vide ou ne contient qu'un \u00e9l\u00e9ment, la boucle ne s'ex\u00e9cute pas et le tableau est inchang\u00e9. Donc l'algoritme termine correctement.</p> <p>Sinon, avant de rentrer la premi\u00e8re fois dans la boucle pour \\(i=1\\), \\(T[0]\\) est tri\u00e9 et T est une permutation de lui-m\u00eame, donc l'invariant est vrai au d\u00e9but.</p> <p>CONSERVATION</p> <p>Supposons l'invariant vrai au d\u00e9but de l'it\u00e9ration \\(i\\): \"\\(T[0..i-1]\\) est tri\u00e9\" (HYPOTHESE)</p> <p>Nous voulons montrer qu'\u00e0 l'issue de la boucle transformant \\(T\\) en \\(T'\\): - \\(T'[0..i]\\) est tri\u00e9 - \\(T'[0..n-1]\\) est une permutation du tableau initial</p> <p>Or <code>INSERER_BONNE_PLACE(T, i)</code> nous l'assure justement, c'est son exacte d\u00e9finition.</p> <p>L'invariant est donc conserv\u00e9.</p> <p>Terminaison L'algorithme se termine car c'est une boucle born\u00e9e sur un algorithme se terminant. A l'issue du programme, \\(i=n-1\\) et la conservation de l'invariant nous assure donc que \\(T[0..n-1]\\) sera tri\u00e9, et restera une permutation du tableau initial.</p> <p>Il nous faut maintenant cr\u00e9er l'algorithme <code>INSERER_BONNE_PLACE</code>.</p> <p>Ins\u00e9rer \u00e0 la bonne place</p> <p>Cr\u00e9er l'algorithme qui permette d'ins\u00e9rer un \u00e9l\u00e9ment d'un tableau \u00e0 la bonne place, en consid\u00e9rant que le sous tableau pr\u00e9c\u00e9dent soit tri\u00e9s.</p> <p>Par exemple pour un tableau tri\u00e9 jusqu'\u00e0 l'indice 2 inclus, voici ce que doit donner la s\u00e9quence suivante:</p> <ol> <li>\\(T=[1, 2, 3, 1.5, 0]\\)</li> <li>on ex\u00e9cute <code>INSERER_BONNE_PLACE(T, 3)</code></li> <li>on doit avoir \\(T=[1, 1.5, 2, 3, 0]\\)</li> <li>on ex\u00e9cute <code>INSERER_BONNE_PLACE(T, 4)</code></li> <li>on doit avoir \\(T=[0, 1, 1.5, 2, 3]\\)</li> </ol> <p>Indice: On utilisera un indice j, initialement valoris\u00e9 \u00e0 \\(j\u2190i\\) et on descendra progressivement jusqu'\u00e0 trouver la bonne place en d\u00e9calant les \u00e9l\u00e9ments vers la droite.</p> Solution <pre><code># Algorithme INSERER_BONNE_PLACE(T, i)\n1. a_deplacer \u2190 T[i]\n2. j \u2190 i\n3. TANT QUE j&gt;0 et T[j-1]&gt;a_deplacer\n4.    T[j-1] \u2190 T[j]\n5.    j \u2190 j-1\n6. T[j] = a_deplacer \n</code></pre> <p>Nous admettrons la correction de <code>inserer_bonne_place</code>.</p> <p>Complexit\u00e9</p> <ul> <li>Etudier la complexit\u00e9 de inserer_bonne_place</li> </ul>"},{"location":"premi%C3%A8re/algorithmique/4.dichotomie/","title":"Recherche dichotomique","text":"<p>Il s'agit ici de proposer un algorithme efficace pour le probl\u00e8me SEARCH sur un tableau tri\u00e9.</p>"},{"location":"premi%C3%A8re/algorithmique/4.dichotomie/#introduction","title":"Introduction","text":"<p>Plus ou moins</p> <p>R\u00e8gles: La machine doit deviner un nombre entre 0 et \\(n\\) que vous aurez choisi.</p> <p>Question: A votre avis, de quelle mani\u00e8re doit jouer l'ordinateur pour gagner le plus vite possible?</p> <p>Ecrire un programme qui:  - Demande au joueur:     <pre><code>Je vais essayer de deviner un entier compris entre 1 et n\nDonne moi la valeur de n et choisis un entier dans ta t\u00eate\n</code></pre></p> <ul> <li> <p>L'utilisateur entre par exemple 100.</p> </li> <li> <p>L'ordinateur boucle alors en affichant une proposition et en demandant (35 est un exemple de proposition de l'ordinateur):</p> <pre><code>35. Ton nombre est-il plus grand, moins grand, ou \u00e9gal? [+/-/=]\n</code></pre> </li> <li> <p>Ce \u00e0 quoi l'utilisateur r\u00e9pond par un des caract\u00e8res '+', '-' ou '='</p> </li> <li> <p>Le programme se termine lorsque l'ordinateur a trouv\u00e9 (l'utilisateur a r\u00e9pondu que c'\u00e9tait le bon nombre)</p> </li> </ul>"},{"location":"premi%C3%A8re/algorithmique/4.dichotomie/#recherche-dichotomique-sur-tableau-trie","title":"Recherche dichotomique sur tableau tri\u00e9","text":"<p>La recherche dichotomique s'inspire de la mani\u00e8re la plus efficace de jouer au \"plus ou moins\" en divisant l'intervalle de recherche par deux \u00e0 chaque tentative.</p> <p>En voici une Visualisation</p> <p>Puis, en voici l'algorithme:</p> <p>En premi\u00e8re lecture, ignorez les lignes 1 et 2. </p> <pre><code>**ENTR\u00c9E** \n- Un tableau d'entiers T[0..n-1]\n- Un entier \u00e0 trouver val\n**SORTIE** \nL'indice du premier \u00e9l\u00e9ment trouv\u00e9, None si la valeur n'appartient pas au tableau.\n\n# Algorithme DICHOTOMIE(T, val)\n1. SI n==0 OU T[0]&gt;val\n2.      RETOURNER None\n3. gauche \u2190 0\n4. droite \u2190 n-1\n5. TANT QUE gauche &lt;= droite\n6.      milieu \u2190 gauche + (droite - gauche)//2\n7.      SI T[milieu] = valeur\n8.          RETOURNER milieu\n9.      SINON SI T[milieu] &gt; valeur\n10.         droite \u2190 milieu - 1\n11.     SINON\n12.         gauche \u2190 milieu + 1\n13. RETOURNER None\n</code></pre> <p>Le variant de boucle est la quantit\u00e9 droite-gauche+1. Quand elle est \u00e9gale \u00e0 0, l'algorithme termine.</p> <p>L'invariant est la propri\u00e9t\u00e9 \"La valeur recherch\u00e9e est dans T[gauche..droite]\"</p> <p>INITIALISATION \u00e0 l'origine, \\(gauche=0\\) et \\(droite=n-1\\). La valeur recherch\u00e9e est bien dans T[gauche..droite]</p> <p>CONSERVATION</p> <p>Faisons l'hypoth\u00e8se que \"La valeur recherch\u00e9e est dans \\(T[gauche..droite]\\)\" \u00e0 l'entr\u00e9e d'une it\u00e9ration et v\u00e9rifions que c'est toujours vrai \u00e0 l'it\u00e9ration suivante.</p> <p>Nous commen\u00e7ons par calculer l'indice milieu de l'intervalle \\([gauche; droite]\\).</p> <p>Nous pouvons donc d\u00e9composer notre tableau ainsi:</p> \\[T[gauche..milieu-1] + T[milieu..milieu] + T[milieu+1..droite]\\] <p>Nous avons alors exactement 3 possibilit\u00e9s: - Si \\(T[milieu]\\) porte la valeur recherch\u00e9e, on retourne l'indice milieu et l'algorithme se termine correctement. - Sinon si \\(T[milieu]\\) est plus grand que la valeur recherch\u00e9e, vu que \\(T\\) est tri\u00e9, c'et que la valeur recherch\u00e9e est dans \\(T[gauche..milieu-1]\\) et justement, on valorise \\(droite\\) \u00e0 \\(milieu-1\\) pour la prochaine it\u00e9ration. - Sinon, c'est que la valeur recherch\u00e9e est dans \\(T[milieu+1 .. droite]\\) et justement, on valorise \\(gauche\\) \u00e0 \\(milieu+1\\) pour la prochaine it\u00e9ration</p> <p>Dans le premier cas, l'algorithme se termine correctement. Dans les cas o\u00f9 il se poursuit, l'invariant est conserv\u00e9.</p> <p>TERMINAISON 1. Dans le cas o\u00f9 la valeur est bien pr\u00e9sente dans le tableau:  Dans le pire des cas, la taille de l'intervalle \\([gauche;droite]\\) va \u00eatre divis\u00e9e par deux de mani\u00e8re continue jusqu'\u00e0 atteindre 1 et la conservation de l'invariant garantit que la valeur se trouvera dans \\(T[gauche;droite]\\), avec \\(gauche=droite=milieu\\). L'algorithme s'arr\u00eate donc bien en renvoyant \\(T[milieu]\\) (Note: la taille d'un intervalle d'entiers est le nombre d'entiers qu'il contient)</p> <ol> <li> <p>Dans le cas o\u00f9 la valeur n'est pas dans le tableau: La taille de l'intervalle \\([gauche;droite]\\) va \u00eatre divis\u00e9e par deux de mani\u00e8re continue jusqu'\u00e0 atteindre 1. Cependant, contrairement au cas pr\u00e9c\u00e9dent, l'indice \\(milieu\\) ne portera pas la valeur recherch\u00e9e. Ainsi, que la valeur recherch\u00e9e soit plus grande ou plus petite que \\(T[milieu]\\), on aura gauche&gt;droite et la boucle se terminera. L'algorithme renverra None.</p> </li> <li> <p>Dans le cas o\u00f9 la valeur est plus petite que le premier \u00e9l\u00e9ment du tableau: Ce cas est tra\u00eetre en impl\u00e9mentation, mais nous engage \u00e0 bien d\u00e9finir le domaine de valeurs de nos variables. On se trouvera \u00e0 la fin avec \\(milieu=0\\), et \\(T[milieu]&gt;valeur\\). On va donc ex\u00e9cuter \\(droite \u2190 milieu - 1\\), ce qui va positionner \\(milieu\\) \u00e0 \\(-1\\) C'est un probl\u00e8me car le domaine de valeurs d'un indice de tableau est un entier non sign\u00e9 (positif). Notez bien que les bidouilles d'indices n\u00e9gatifs sont propres \u00e0 python. Par exemple, Rust l\u00e8vera une erreur sur ce cas car il n'autorisera pas la variable droite \u00e0 prendre la valeur -1 attendu qu'elle est obligatoirement positive pour servir d'indice de tableau. C'est pour \u00e7a qu'existent les lignes 1 et 2. On commence par v\u00e9rifier que la valeur recherch\u00e9e n'est pas inf\u00e9rieure au premier \u00e9l\u00e9ment pour ne jamais tomber sur ce cas. On en profite aussi pour r\u00e9gler son compte au cas du tableau vide, car de la m\u00eame mani\u00e8re, droite ne peut pas valoir -1 en 4\u00e8me ligne.</p> </li> </ol> <p>Impl\u00e9mentation python</p> <p>Ecrire et tester une fonction <code>recherche_dicho(v: int, t: list[int]) -&gt; int|None</code> impl\u00e9mentant l'algorithme d\u00e9crit.</p>"},{"location":"premi%C3%A8re/algorithmique/4.dichotomie/#complexite","title":"Complexit\u00e9","text":"<p>On s'int\u00e9resse \u00e0 la phrase:</p> <p>\"Dans le pire des cas, la taille de l'intervalle \\([gauche;droite]\\) va \u00eatre divis\u00e9e par deux de mani\u00e8re continue jusqu'\u00e0 atteindre 1.\"</p> <p>Ce qui nous int\u00e9resse pour la complexit\u00e9, c'est ce nombre de divisions enti\u00e8res par 2, car toutes les op\u00e9rations au sein de la boucle sont en temps constant (Elles comptent donc pour 1)</p> <p>Il existe une fonction math\u00e9matique qui nous donne le nombre de fois qu'il faut diviser un nombre entier \\(n\\) par 2 pour obtenir 1. Il s'agit de la fonction logarithme entier de base 2. Il faut diviser \\(n\\) \\(\\lfloor \\log_2(n) \\rfloor\\) fois par 2 pour obtenir 1</p>"},{"location":"premi%C3%A8re/algorithmique/4.dichotomie/#pour-aller-plus-loin","title":"Pour aller plus loin","text":"<p>Etudiez l'algorithme alternatif propos\u00e9 ci-dessous. Notez qu'il ne poss\u00e8de pas de boucle:</p> <pre><code>**ENTR\u00c9E** \n- Un tableau d'entiers T[0..n-1]\n- Un entier \u00e0 trouver val\n- un indice de d\u00e9but de recherche gauche\n- un indice de fin de recherche droite\n**SORTIE** \nL'indice du premier \u00e9l\u00e9ment trouv\u00e9, None si la valeur n'appartient pas au tableau.\n\n# Algorithme DICHOTOMIE(T, val, gauche, droite)\n1. SI n==0 OU T[gauche]&gt;val OU gauche &gt; droite\n2.      RETOURNER None\n3. milieu \u2190 gauche + (droite - gauche)//2\n4. SI T[milieu] = valeur\n5.      RETOURNER milieu\n6. SINON SI T[milieu] &gt; valeur\n7.     RETOURNER DICHOTOMIE(T, val, gauche, milieu-1)\n8. SINON\n9.     RETOURNER DICHOTOMIE(T, val, milieu + 1, droite)\n</code></pre>"},{"location":"premi%C3%A8re/algorithmique/5.glouton/","title":"Algorithmes gloutons","text":""},{"location":"premi%C3%A8re/algorithmique/5.glouton/#systeme-monetaire","title":"Syst\u00e8me mon\u00e9taire","text":"<p>D\u00e9finition</p> <p>Un syst\u00e8me mon\u00e9taire est un tableau tri\u00e9 dans l'ordre croissant dont le premier \u00e9l\u00e9ment est 1. L'unit\u00e9 1 correspond \u00e0 la plus petite division du syst\u00e8me (pour le syst\u00e8me mon\u00e9taire euro, c'est le centime). R\u00e9aliser une somme dans un syst\u00e8me mon\u00e9taire, c'est trouver des pi\u00e8ces et des billets pour faire cette somme.</p> <p>R\u00e9alisation d'une somme</p> <p>Expliquer pourquoi une somme d'argent peut toujours \u00eatre r\u00e9alis\u00e9e dans un syst\u00e8me mon\u00e9taire.</p> <p>Le syst\u00e8me Euro</p> <p>Nous travaillerons avec ces syst\u00e8mes:</p> <ul> <li>Les Euros actuels (en centimes)</li> <li>L'ancien syst\u00e8me mon\u00e9taire du royaume uni (en pence) d\u00e9finitivement abandonn\u00e9 le lundi\u00a015\u00a0f\u00e9vrier\u00a01971, jour baptis\u00e9 Decimal\u00a0Day.<ul> <li>12 pence correspondaient \u00e0 une pi\u00e8ce de 1 shilling.</li> <li>24 pence correspondaient \u00e0 une pi\u00e8ce de 2 shilling.</li> <li>30 pence correspondait \u00e0 une pi\u00e8ce de 1 half-crown.</li> </ul> </li> </ul> <pre><code>EUROS = [1, 2, 5, 10, 20, 50, 1_00, 2_00, 5_00, 10_00, 20_00, 50_00]\nRU_VIEUX = [1, 3, 6, 12, 24, 30]\n</code></pre>"},{"location":"premi%C3%A8re/algorithmique/5.glouton/#le-probleme-du-rendu-de-monnaie-cmp","title":"Le probl\u00e8me du rendu de monnaie - CMP","text":"<p>D\u00e9finition</p> <p>Le probl\u00e8me CMP (Change-Making Problem) est celui de la r\u00e9alisation d'une somme mon\u00e9taire avec le nombre minimum de pi\u00e8ces (ou de billets). </p> <p>Avant que cet algorithme soit int\u00e9gr\u00e9 aux caisses enregistreuses, les caissi\u00e8res ex\u00e9cutaient tous les jours l'algorithme glouton permettant de rendre optimalement une somme d'argent avec le moins de pi\u00e8ces possibles.</p>"},{"location":"premi%C3%A8re/algorithmique/5.glouton/#algorithme-glouton","title":"Algorithme glouton","text":"<p>D\u00e9finition</p> <p>Un algorithme glouton est un proc\u00e9d\u00e9 qui, \u00e0 chaque \u00e9tape, choisit la d\u00e9cision localement optimale et ne la remet jamais en question.</p> <p>L'usage veut que le terme 'glouton' ne s'applique qu'aux probl\u00e8mes d'optimisation.</p> <p>Il est important de noter que, bien que les algorithmes gloutons soient simples et rapides, ils ne garantissent pas toujours la meilleure solution globale pour un probl\u00e8me d'optimisation donn\u00e9. Cependant, dans de nombreux cas, ils fournissent une solution approch\u00e9e suffisamment bonne dans un temps raisonnable.</p> <p>R\u00e9solution gloutonne du CMP</p> <p>Voici le choix optimal local par la m\u00e9thode gloutonne:</p> <p>Tant qu'on peut encore rendre, on rend toujours la plus grosse pi\u00e8ce qu'on peut rendre.</p> <p>Compl\u00e9tez la fonction suivante en cons\u00e9quence</p> <pre><code>SYSTEME = EUROS\n\ndef realiser_somme_glouton(somme: int, sys: list[int]) -&gt; list[int]:\n    \"\"\"\n    &gt;&gt;&gt; realiser_somme_glouton(237, EUROS)\n    [200, 20, 10, 5, 2]\n    \"\"\"\n    assert 1 in sys\n\n    res = []\n    while ...:\n        ...instructions...\n\n    return res\n</code></pre> <p>Optimal?</p> <p>Essayez de rendre 48 avec l'approche gloutonne dans le vieux syst\u00e8me du royaume-uni.</p> <ul> <li>La solution renvoy\u00e9e est-elle la solution optimale?</li> <li>Quelle est la solution optimale dans ce syst\u00e8me?</li> </ul> <p>Syst\u00e8me mon\u00e9taire canonique</p> <p>On appelle canonique un syst\u00e8me mon\u00e9taire si et seulement si l'approche gloutonne renvoie la d\u00e9composition minimum de toute somme. Le syst\u00e8me Euros est canonique. L'autre syst\u00e8me ne l'est pas (il suffisait d'un contre-exemple pour le prouver).</p> <p>Il existe des fa\u00e7ons de r\u00e9soudre CMP, que le syst\u00e8me soit canonique ou non, que nous verrons l'ann\u00e9e prochaine.</p> <p>TODO: Ajouter Fractional Knapsack (FKP)</p>"},{"location":"premi%C3%A8re/algorithmique/6.intro_recurrence/","title":"Introduction \u00e0 la r\u00e9currence","text":"<p>La preuve de correction partielle \u00e0 l'aide de l'invariant de boucle est appel\u00e9 un raisonnement inductif, ou r\u00e9current. C'est simple mais \u00e7a peut para\u00eetre abscons parce que c'est un peu plus long que ce dont vous avez l'habitude. Donc \u00e7a peut prendre un temps \u00e0 assimiler, c'est normal.</p> <p>Ce raisonnement en 3 \u00e9tapes sert \u00e0 montrer qu'une propri\u00e9t\u00e9 d\u00e9pendant d'un entier naturel est vraie tout le temps \u00e0 partir d'un entier de d\u00e9part.</p> <p>Prenons un exemple concret qui ne n\u00e9cessite que de savoir manipuler des expressions \u00e9l\u00e9mentaires.</p> <p>On veut montrer que la propri\u00e9t\u00e9 \\(P_n\\): \"La somme \\(S_n\\) des \\(n\\) premiers entiers impairs est \u00e9gale \u00e0 \\(n^2\\)\" est toujours vraie pour \\(n \\ge 1\\)</p>"},{"location":"premi%C3%A8re/algorithmique/6.intro_recurrence/#1-initialisation","title":"1. INITIALISATION","text":"<p> On veut montrer que c'est vrai au d\u00e9but </p> <p>Pour \\(n=1\\), \\(S_1 = 1 = 1^2\\) donc \\(P_1\\) est vraie Pour \\(n=2\\), \\(S_2 = 1 + 3 = 4 = 2^2\\) donc \\(P_2\\) est vraie Pour \\(n=3\\), \\(S_2 = 1 + 3 + 5 = 9 = 3^2\\) donc \\(P_3\\) est vraie</p> <p>C'est donc vrai au d\u00e9but. (en r\u00e9alit\u00e9, il ne suffit que de le montrer pour \\(n=1\\), mais le faire plusieurs fois permet de s'approprier un peu les propri\u00e9t\u00e9s qu'on manipule)</p> <p>Mais \u00e7a ne veut pas dire que \u00e7a sera toujorus vrai, et c'est justement \u00e7a qui nous occupe.</p>"},{"location":"premi%C3%A8re/algorithmique/6.intro_recurrence/#2-conservation-heredite","title":"2. CONSERVATION / H\u00e9r\u00e9dit\u00e9","text":"<p> <p>On veut montrer que si jamais \\(P_n\\) est vraie pour un \\(n\\) quelconque, alors \u00e7a implique automatiquement que \\(P_{n+1}\\) est vraie.</p> <p></p> <p>On va donc supposer que \\(P_n\\) est vraie pour un \\(n\\) quelconque.</p> <p>Donc que \\(S_n=1+3+....+(2n-1) = n^2\\)</p> <p>Ce qu'on veut d\u00e9montrer, c'est donc que sous cette hypoth\u00e8se on aura automatiquement \\(P_{n+1}\\) vraie. Donc que \\(S_{n+1} = (n+1)^2\\)</p> <p>Calculons donc \\(S_{n+1}\\), en se disant qu'on veut faire appara\u00eetre \\(S_n\\) pour pouvoir utiliser notre hypoth\u00e8se (sinon elle sert \u00e0 rien, c'est ridicule).</p> <p>\\(S_{n+1} = 1+...+(2n+1)\\) \\(S_{n+1} = 1+...+(2n-1)+(2n+1)\\) \\(S_{n+1} = S_n +(2n+1)\\)</p> <p>Or, \\(P_n\\) est Vraie par hypoth\u00e8se. Donc \\(S_n= n^2\\)</p> <p>\\(S_{n+1} = n^2 + 2n + 1\\)</p> <p>A partir du moment o\u00f9 on a r\u00e9ussi \u00e0 utiliser notre hypoth\u00e8se, on cherche \u00e0 retrouver l'\u00e9criture de ce qu'on veut d\u00e9montrer en bidouillant.</p> <p>En l'occurence, ici on reconna\u00eet une identit\u00e9 remarquable, donc:</p> <p>\\(S_{n+1} = (n+1)^2\\)</p> <p>C'est justement ce qu'on voulait d\u00e9montrer!</p> <p>On vient donc de prouver que si jamais \\(P_n\\) est vraie un jour, alors \\(P_{n+1}\\) elle n\u00e9cessairement vraie aussi</p>"},{"location":"premi%C3%A8re/algorithmique/6.intro_recurrence/#3-conclusion","title":"3. CONCLUSION","text":"<p>\\(P_1\\) est vraie. Donc n\u00e9cessairement, \\(P_2\\) est vraie. Donc n\u00e9cessairement, \\(P_3\\) est vraie. Donc n\u00e9cessairement, \\(P_4\\) est vraie, etc...</p> <p></p> <p>Il est important d'initialiser, car il faut que \u00e7a soit vrai au moins une fois pour que \u00e7a soit \"infiniment vrai\" par conservation/h\u00e9r\u00e9dit\u00e9.</p> <p>Si \\(P_1\\) est vraie et que \\(P_n \\implies P_{n+1}\\), alors \\(P_n\\) est vraie pour tout \\(n \\ge 1\\)</p> <p>Cette propri\u00e9t\u00e9 (qui se d\u00e9montre elle-m\u00eame gr\u00e2ce aux axi\u00f4mes fondamentaux des math\u00e9matiques) est au coeur du raisonnement.</p> <p>On peut donc affirmer le coeur l\u00e9ger que \"La somme \\(S_n\\) des \\(n\\) premiers entiers impairs est \u00e9gale \u00e0 \\(n^2\\) pour tout \\(n \\ge 1\\)\"</p> <p>Exercice</p> <p>D\u00e9montrer que \\(P_n\\) = \"La somme \\(S_n\\) des n premiers entiers est \u00e9gale \u00e0 \\(\\displaystyle \\frac{n(n+1)}{2}\\)\" est vraie pour n&gt;1\"</p> <p>Pour ce faire, compl\u00e9tez la d\u00e9monstration suivante:</p> <p>1. INITIALISATION</p> <p>Pour \\(n=1\\), \\(S_1 = \\dots\\)</p> <p>C'est donc vrai au d\u00e9but</p> <p>2. CONSERVATION</p> <p>On veut montrer que si jamais \\(P_n\\) est vraie pour un \\(n\\) quelconque, alors \u00e7a implique automatiquement que \\(P_{n+1}\\) est vraie.</p> <p>On va donc supposer que \\(P_n\\) est vraie pour un \\(n\\) quelconque.</p> <p>Donc que \\(S_n= \\dots\\dots\\dots\\dots\\dots\\dots\\)</p> <p>Ce qu'on veut d\u00e9montrer, c'est que sous cette hypoth\u00e8se, \\(P_{n+1}\\) est vraie.  Donc que \\(S_{n+1} = \\dots\\dots\\dots\\dots\\dots\\)</p> <p>Calculons donc \\(S_{n+1}\\) en faisant appar\u00e2itre \\(S_n\\)</p> <p>\\(S_{n+1} = \\dots\\dots\\dots\\dots\\dots\\dots\\)</p> \\[\\dots\\dots\\dots\\dots\\] <p>Or, \\(P_n\\) est Vraie par hypoth\u00e8se. Donc \\(\\displaystyle  S_n= \\frac{n(n+1)}{2}\\)</p> <p>\\(S_{n+1} = \\dots\\dots\\dots\\dots\\dots\\)</p> \\[\\dots\\dots\\dots\\dots\\] <p>C'est justement ce qu'on voulait d\u00e9montrer!</p> <p>On vient donc de prouver que si jamais \\(P_n\\) est vraie un jour, alors \\(P_{n+1}\\) est n\u00e9cessairement vraie aussi</p> <p>3. CONCLUSION</p> <p>\\(P_1\\) est vraie et pour tout \\(n\\), \\(P_n \\implies P_{n+1}\\)</p> <p>La somme \\(S_n\\) des \\(n\\) premiers entiers est donc \u00e9gale \u00e0 \\(\\displaystyle \\frac{n(n+1)}{2}\\) pour tout \\(n&gt;1\\).</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/","title":"Gestion des droits sous linux","text":""},{"location":"premi%C3%A8re/architecture/droits-linux/#1-les-droits-linux","title":"1. Les droits Linux","text":"<p>La gestion des droits sur linux fait partie des atouts qui ont forg\u00e9 la r\u00e9putation de linux. C'est clair, efficace, et simple.</p> <p>Chaque fichier ou dossier sous Linux est associ\u00e9 \u00e0 trois cat\u00e9gories d\u2019utilisateurs\u00a0:</p> <ol> <li>Utilisateur (Owner) : Le propri\u00e9taire du fichier ou dossier.</li> <li>Groupe (Group) : Le groupe auquel appartient ce fichier ou dossier.</li> <li>Autres (Others) : Tous les autres utilisateurs qui n\u2019appartiennent ni au groupe ni ne sont propri\u00e9taires du fichier.</li> </ol> <p>Pour chacune de ces cat\u00e9gories, il existe trois types de droits\u00a0:</p> <ul> <li>r (read)\u00a0: lecture</li> <li>w (write)\u00a0: \u00e9criture</li> <li>x (execute)\u00a0: ex\u00e9cution</li> </ul> <p>Cela se traduit dans les attributs d\u2019un fichier ou d\u2019un dossier sous la forme suivante (dans la sortie de <code>ls -l</code>) :</p> <pre><code>-rwxr-xr--\n</code></pre> <p>Chaque position a une signification\u00a0:</p> <ul> <li>Le premier caract\u00e8re (-, d, l, etc.) indique le type (fichier, dossier, lien, etc.).  </li> <li><code>-</code> : fichier</li> <li><code>d</code> : dossier (directory)</li> <li><code>l</code> : lien symbolique (link)</li> <li> <p>etc.</p> </li> <li> <p>Ensuite, il y a trois groupes de trois caract\u00e8res pour : <code>User</code> | <code>Group</code> | <code>Others</code>.</p> </li> <li><code>rwx</code> : (lecture, \u00e9criture, ex\u00e9cution) pour l\u2019utilisateur (le propri\u00e9taire).</li> <li><code>r-x</code> : (lecture, pas d\u2019\u00e9criture, ex\u00e9cution) pour le groupe.</li> <li><code>r--</code> : (lecture, pas d\u2019\u00e9criture, pas d\u2019ex\u00e9cution) pour les autres.</li> </ul> <p>Donc, dans cet exemple <code>-rwxr-xr--</code>, cela signifie : - Propri\u00e9taire : rwx \u2192 peut lire, \u00e9crire, ex\u00e9cuter - Groupe : r-x \u2192 peut lire, ex\u00e9cuter, mais ne peut pas \u00e9crire - Autres : r-- \u2192 peuvent uniquement lire</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#2-affichage-des-droits-avec-ls","title":"2. Affichage des droits avec <code>ls</code>","text":"<p>La commande <code>ls -l</code> (ou <code>ls -lh</code> pour avoir des tailles plus lisibles) est utilis\u00e9e pour afficher les d\u00e9tails des fichiers et r\u00e9pertoires, incluant les droits, l\u2019utilisateur propri\u00e9taire et le groupe. Par exemple :</p> <pre><code>ls -l\n</code></pre> <p>Retour possible :</p> <pre><code>drwxr-xr-x  2 alice   dev   4096 mar  1 10:00 dossier_test\n-rw-r--r--  1 alice   dev    234 mar  1 09:58 fichier1.txt\n-rwxr-xr--  1 bob     admin 8764 mar  1 09:59 script.sh\n</code></pre> <p>Ici\u00a0: - <code>d</code> au d\u00e9but de la ligne indique un dossier. - <code>-</code> au d\u00e9but de la ligne indique un fichier. - Les trois triplets de droits sont affich\u00e9s juste apr\u00e8s.</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#3-modification-des-droits-avec-chmod","title":"3. Modification des droits avec <code>chmod</code>","text":"<p>La commande <code>chmod</code> (change mode) permet de modifier les droits d\u2019un fichier ou dossier de deux fa\u00e7ons : notation symbolique ou notation octale.</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#31-notation-symbolique","title":"3.1. Notation symbolique","text":"<p>La forme g\u00e9n\u00e9rale est : <pre><code>chmod [qui][+/-/=][droit] fichier\n</code></pre> o\u00f9 : - <code>qui</code> peut \u00eatre :   - <code>u</code> = utilisateur (owner)   - <code>g</code> = groupe   - <code>o</code> = autres   - <code>a</code> = tous (<code>u</code>, <code>g</code>, et <code>o</code>) - <code>+</code> pour ajouter un droit, <code>-</code> pour retirer un droit, <code>=</code> pour fixer explicitement les droits (et enlever tout le reste). - <code>droit</code> peut \u00eatre : <code>r</code> (lecture), <code>w</code> (\u00e9criture), <code>x</code> (ex\u00e9cution).</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#exemple-1","title":"Exemple 1","text":"<p>Ajouter le droit d\u2019ex\u00e9cution pour le propri\u00e9taire (u) sur un fichier\u00a0: <pre><code>chmod u+x mon_script.sh\n</code></pre> D\u00e9sormais, le propri\u00e9taire peut ex\u00e9cuter le fichier <code>mon_script.sh</code>.</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#exemple-2","title":"Exemple 2","text":"<p>Retirer le droit d\u2019\u00e9criture pour le groupe\u00a0: <pre><code>chmod g-w mon_fichier.txt\n</code></pre></p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#exemple-3","title":"Exemple 3","text":"<p>Donner \u00e0 tous (<code>a</code>) uniquement la lecture (<code>r</code>), et rien d\u2019autre\u00a0: <pre><code>chmod a=r mon_fichier.txt\n</code></pre> Cela va remplacer tous les droits existants, pour tout le monde, par lecture seule.</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#32-notation-octale-ou-numerique","title":"3.2. Notation octale (ou num\u00e9rique)","text":"<p>On utilise trois chiffres correspondant respectivement aux droits de l\u2019utilisateur, du groupe et des autres. Chaque chiffre est la somme binaire de <code>r=4</code>, <code>w=2</code>, et <code>x=1</code>.</p> <ul> <li>4 = lecture (r)</li> <li>2 = \u00e9criture (w)</li> <li>1 = ex\u00e9cution (x)</li> </ul> <p>On additionne selon les droits voulus. Exemple :</p> <ul> <li>Lecture + \u00e9criture + ex\u00e9cution = <code>4 + 2 + 1 = 7</code></li> <li>Lecture + ex\u00e9cution = <code>4 + 1 = 5</code></li> <li>Lecture seule = <code>4</code></li> <li>Lecture + \u00e9criture = <code>4 + 2 = 6</code></li> <li>Ex\u00e9cution seule = <code>1</code></li> </ul> <p>Le pattern <code>chmod xyz fichier</code> indique que <code>x</code> s\u2019applique au propri\u00e9taire, <code>y</code> au groupe, <code>z</code> aux autres.</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#exemples-concrets","title":"Exemples concrets","text":"<ol> <li>Donner tous les droits au propri\u00e9taire, lecture et ex\u00e9cution au groupe et lecture seule aux autres\u00a0:    <pre><code>chmod 754 mon_script.sh\n</code></pre></li> <li>Propri\u00e9taire (u) \u2192 7 = rwx</li> <li>Groupe (g) \u2192 5 = r-x</li> <li> <p>Autres (o) \u2192 4 = r--</p> </li> <li> <p>Lire/\u00c9crire pour le propri\u00e9taire, rien pour le groupe et les autres\u00a0:    <pre><code>chmod 600 mon_fichier.txt\n</code></pre></p> </li> <li>Propri\u00e9taire \u2192 6 = rw-</li> <li>Groupe \u2192 0 = ---</li> <li> <p>Autres \u2192 0 = ---</p> </li> <li> <p>Tous droits pour le propri\u00e9taire, aucun droit pour les autres\u00a0:    <pre><code>chmod 700 dossier_test\n</code></pre></p> </li> <li>Propri\u00e9taire \u2192 7 = rwx</li> <li>Groupe \u2192 0 = ---</li> <li>Autres \u2192 0 = ---</li> </ol>"},{"location":"premi%C3%A8re/architecture/droits-linux/#4-exemples-concrets","title":"4. Exemples concrets","text":"<p>Imaginons que vous avez un fichier <code>exemple.sh</code> dont les droits sont :</p> <p><pre><code>ls -l exemple.sh\n</code></pre> Retour possible : <pre><code>-rw-r--r-- 1 alice dev  1234 mar 26 10:00 exemple.sh\n</code></pre></p> <ul> <li>Actuellement :  </li> <li>Propri\u00e9taire (alice) \u2192 rw-  </li> <li>Groupe (dev) \u2192 r--  </li> <li>Autres \u2192 r--  </li> </ul>"},{"location":"premi%C3%A8re/architecture/droits-linux/#41-rendre-ce-script-executable-pour-tout-le-monde-u-g-o","title":"4.1 Rendre ce script ex\u00e9cutable pour tout le monde (u, g, o)","text":""},{"location":"premi%C3%A8re/architecture/droits-linux/#methode-symbolique","title":"M\u00e9thode symbolique","text":"<p><pre><code>chmod a+x exemple.sh\n</code></pre> Apr\u00e8s v\u00e9rification <code>ls -l exemple.sh</code> : <pre><code>-rwxr-xr-x 1 alice dev  1234 mar 26 10:01 exemple.sh\n</code></pre> (Le script est d\u00e9sormais ex\u00e9cutable par tous.)</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#methode-octale","title":"M\u00e9thode octale","text":"<p><pre><code>chmod 755 exemple.sh\n</code></pre> Le r\u00e9sultat est le m\u00eame : - 7 (rwx) pour l\u2019utilisateur - 5 (r-x) pour le groupe - 5 (r-x) pour les autres</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#42-retirer-totalement-les-droits-pour-le-groupe-et-les-autres","title":"4.2 Retirer totalement les droits pour le groupe et les autres","text":"<p>Supposons qu\u2019on veuille rendre un fichier strictement priv\u00e9 pour l\u2019utilisateur propri\u00e9taire, avec lecture et \u00e9criture seulement (pas besoin d\u2019ex\u00e9cution). On veut donc <code>rw</code> pour le propri\u00e9taire, et rien pour les autres :</p> <p><pre><code>chmod 600 exemple.sh\n</code></pre> Cela signifie : - Propri\u00e9taire \u2192 6 (rw-) - Groupe \u2192 0 (---) - Autres \u2192 0 (---)</p>"},{"location":"premi%C3%A8re/architecture/droits-linux/#6-resume","title":"6. R\u00e9sum\u00e9","text":"<ol> <li>Visualiser les droits : <code>ls -l</code></li> <li>Notation symbolique (<code>chmod u+w</code>, <code>chmod g-x</code>, etc.) ou notation octale (<code>chmod 755</code>, <code>chmod 600</code>, etc.) pour d\u00e9finir/modifier les droits.</li> <li>Retenez la correspondance :</li> <li>r = 4</li> <li>w = 2</li> <li>x = 1</li> <li>Combinez pour obtenir un chiffre par cat\u00e9gorie (propri\u00e9taire | groupe | autres).</li> </ol> <p>En ma\u00eetrisant ces commandes et cette logique, vous pouvez g\u00e9rer simplement les droits des fichiers et dossiers sous Linux.</p>"},{"location":"premi%C3%A8re/architecture/os/","title":"Syst\u00e8mes d'exploitation","text":"<p>EN CONSTRUCTION</p> <p>Essayer avec http://ftp.debian.org/debian/dists/stable/main/installer-amd64/current/images/netboot/mini.iso</p>"},{"location":"premi%C3%A8re/architecture/os/#introduction","title":"Introduction","text":"<p>Un syst\u00e8me d\u2019exploitation est un logiciel essentiel qui g\u00e8re l\u2019ensemble des ressources d\u2019un ordinateur (processeur, m\u00e9moire, stockage) et permet aux utilisateurs d\u2019interagir avec la machine. Il assure le bon fonctionnement des applications, la s\u00e9curit\u00e9, et la gestion efficace des t\u00e2ches. Dans ce chapitre, nous aborderons ses principales fonctions et d\u00e9couvrirons les types de syst\u00e8mes d\u2019exploitation courants.</p>"},{"location":"premi%C3%A8re/architecture/os/#demarrage-de-lordinateur","title":"D\u00e9marrage de l'ordinateur:","text":"<p>Lorsque vous d\u00e9marrez un ordinateur, son unique objectif est de charger le syst\u00e8me d'exploitation.</p> <p>Ceci peut se d\u00e9couper en 4 \u00e9tapes:</p> <ol> <li> <p>Alimentation et auto-test mat\u00e9riel (POST) : </p> <ul> <li>L'ordinateur s'allume, et le BIOS (Basic Input/Output System) ou UEFI (Unified Extensible Firmware Interface) effectue un Power-On Self-Test (POST). Ce test v\u00e9rifie les composants mat\u00e9riels essentiels (m\u00e9moire, processeur, carte graphique, etc.) pour s'assurer qu'ils fonctionnent correctement.</li> </ul> </li> <li> <p>Chargement du BIOS/UEFI :</p> <ul> <li>Le BIOS ou UEFI initialise le mat\u00e9riel de base, en activant la m\u00e9moire et les p\u00e9riph\u00e9riques n\u00e9cessaires pour lancer le syst\u00e8me d'exploitation. Il identifie \u00e9galement le p\u00e9riph\u00e9rique de d\u00e9marrage (disque dur, SSD, cl\u00e9 USB) o\u00f9 est install\u00e9 l'OS.</li> </ul> </li> <li> <p>Chargement du chargeur d'amor\u00e7age (Bootloader) :</p> <ul> <li>Une fois le p\u00e9riph\u00e9rique de d\u00e9marrage identifi\u00e9, le BIOS ou UEFI passe le contr\u00f4le au chargeur d'amor\u00e7age, souvent GRUB pour Linux ou Bootmgr pour Windows. Le bootloader est un petit programme qui charge le noyau du syst\u00e8me d'exploitation en m\u00e9moire.</li> </ul> </li> <li> <p>Chargement du noyau : </p> <ul> <li>Le chargeur d'amor\u00e7age charge ensuite le noyau du syst\u00e8me d'exploitation en m\u00e9moire et lui passe le contr\u00f4le. Le noyau initialise les fonctions essentielles : gestion de la m\u00e9moire, cr\u00e9ation de processus initiaux, et prise en charge des pilotes mat\u00e9riels de base.</li> </ul> </li> </ol> <p>A partir de ce moment, c'est le syst\u00e8me d'exploitation qui va prendre la main et servir \u00e0 faire le lien entre le mat\u00e9riel et les applications.</p> <pre><code>graph TD\n    A[D\u00e9marrage de l'ordinateur] --&gt; B[POST -&gt; Power-On Self-Test]\n    B --&gt; C[Chargement du BIOS/UEFI]\n    C --&gt; D[Identification du p\u00e9riph\u00e9rique&lt;br&gt;de d\u00e9marrage]\n    D --&gt; E[Chargement du chargeur&lt;br&gt;d'amor\u00e7age -&gt; Bootloader]\n    E --&gt; F[Chargement du noyau&lt;br&gt;du syst\u00e8me d'exploitation]</code></pre>"},{"location":"premi%C3%A8re/architecture/os/#a-quoi-sert-un-systeme-dexploitation","title":"A quoi sert un syst\u00e8me d'exploitation","text":"<p>Visionnez cette vid\u00e9o, et r\u00e9sumez la en une introduction et 3 parties. Elle constitue le minimum que vous devez savoir sur les syst\u00e8mes d'exploitation.</p> <p>https://eylenburg.github.io/os_familytree.htm Il existe une multitude de syst\u00e8mes d'exploitation, comme en t\u00e9moigne la page suivante: https://eylenburg.github.io/os_familytree.htm</p>"},{"location":"premi%C3%A8re/architecture/os/#interagir-avec-le-systeme-dexploitation","title":"Interagir avec le syst\u00e8me d'exploitation","text":"<p>Un syst\u00e8me d'exploitation ne n\u00e9cessite pas forc\u00e9ment une interface graphique avanc\u00e9e comme celle de Windows. Certains OS, notamment les syst\u00e8mes utilis\u00e9s sur des serveurs, des appareils embarqu\u00e9s (comme ceux dans les routeurs ou appareils industriels) ou dans des environnements professionnels, fonctionnent uniquement avec une interface en ligne de commande (CLI). Ces OS, comme certaines versions de Linux, offrent un contr\u00f4le pr\u00e9cis des fonctions syst\u00e8me sans n\u00e9cessiter d'interface visuelle.</p> <p>L'absence d'interface graphique permet souvent de r\u00e9duire l'utilisation des ressources (comme la m\u00e9moire et le processeur) et d'am\u00e9liorer la stabilit\u00e9 et la s\u00e9curit\u00e9, ce qui est essentiel dans les environnements o\u00f9 chaque ressource est pr\u00e9cieuse, o\u00f9 l'efficacit\u00e9 est prioritaire.</p> <p>Lorsque le syst\u00e8me d'exploitation n'a pas d'interface graphique, l'interaction se fait via une interface en ligne de commande (CLI = Command Line Interface). Dans ce type d\u2019interface, l\u2019utilisateur entre des commandes textuelles dans un terminal pour ex\u00e9cuter des actions, comme la gestion de fichiers, le contr\u00f4le des processus, ou la configuration du r\u00e9seau.</p> <p>L\u2019utilisateur doit conna\u00eetre des commandes sp\u00e9cifiques, comme celles utilis\u00e9es sous Linux (par exemple, ls pour lister les fichiers, cd pour changer de r\u00e9pertoire, ou top pour surveiller les processus en cours). Ces commandes permettent une interaction directe avec le syst\u00e8me, souvent de mani\u00e8re plus rapide et pr\u00e9cise que par une interface graphique.</p> <p>Dans un syst\u00e8me d'exploitation avec une interface graphique avanc\u00e9e, il est toujours possible d'acc\u00e9der au CLI via un terminal.</p> <p>Par exemple pour windows:</p> <p></p>"},{"location":"premi%C3%A8re/architecture/os/#tp-installation-dun-systeme-dexploitation-dans-une-machine-virtuelle","title":"TP Installation d'un syst\u00e8me d'exploitation dans une machine virtuelle.","text":"<p>Nous allons installer un syst\u00e8me d'exploitation bas\u00e9 sur le noyau linux: Alpine. Cette installation est plus technique en comparaison \u00e0 une installation d'un Full Linux, qui se fait en quelques clicks avec des questions compr\u00e9hensibles par le commun des mortels.</p> <p>Mais: - Ca vous habitue \u00e0 la ligne de commande - On voit bien toutes les \u00e9tapes - Les ordinateurs du lyc\u00e9e ne sont pas assez puissants</p> <p>Pour cette activit\u00e9, il faut utiliser le moins possible de RAM. Donc on n'ouvre rien qui n'est pas en lien direct avec l'activit\u00e9 (genre pronote...).</p> <p>Tout se fera dans le m\u00eame r\u00e9pertoire de MSYS2</p> <p>Pr\u00e9paration</p> <ul> <li>Tout se fait dans le m\u00eame r\u00e9pertoire MSYS2 MINGW64 (chercher avec la loupe de windows)</li> <li>Ex\u00e9cutez <code>pacman -Syu</code> de mani\u00e8re r\u00e9p\u00e9titive jusqu'\u00e0 ce que le message \"there is nothing to do\" apparaisse.<ul> <li>Ceci sert \u00e0 mettre \u00e0 jour MSYS2.</li> <li>Le terminal peut demander \u00e0 \u00eatre fermer, il faut le faire et relancer MINGW64</li> </ul> </li> <li>Installer qemu, le gestionnaire de machines virtuelles, en ex\u00e9cutant cette commande: <code>pacman -S mingw-w64-x86_64-qemu</code></li> <li>T\u00e9l\u00e9charger le disque d'installation d'alpine: <code>wget https://dl-cdn.alpinelinux.org/alpine/v3.21/releases/x86_64/alpine-virt-3.21.3-x86_64.iso</code></li> </ul> <ol> <li> <p>Cr\u00e9er un disque dur virtuel de 5Go pour le brancher \u00e0 notre PC virtuel. <code>qemu-img create -f qcow2 disquedur.qcow2 5G</code></p> </li> <li> <p>On d\u00e9marre une machine virtuelle. Un ordinateur dans votre ordinateur. Ici on lui donne comme disque dur le disque virtuel qu'on vient de cr\u00e9er, on y ins\u00e8re le cd-rom d'installation du syst\u00e8me d'exploitation, et on lui demande de booter sur le cdrom. On l'autorise \u00e0 utiliser 512M de RAM sur la machine physique. on lui branche notre disque (hda) de 5G. Les autres options sont des options pour la gestion du r\u00e9seau. <code>qemu-system-x86_64 -boot d -cdrom alpine-virt-3.21.3-x86_64.iso -hda disquedur.qcow2 -m 256 -net nic -net user</code></p> </li> <li> <p>Apr\u00e8s avoir boot\u00e9, le syst\u00e8me demande de vous logger, entrez \"root\" et validez avec la touche entr\u00e9e. L'utilisateur root est le superutilisateur. Il a le droit de tout faire.</p> </li> <li> <p>Le clavier n'est pas en fran\u00e7ais, mais \u00e7a sera bient\u00f4t le cas. On lance l'installation en tapant: <code>setup-alpine</code>, puis entr\u00e9e.</p> </li> </ol> <p></p> <ol> <li>R\u00e9pondez aux questions comme sur l'image suivante (quand je n'ai rien mis, j'ai juste appuy\u00e9 sur entr\u00e9e. pour le mot de passe, mettez root): </li> </ol> <p></p> <p>Sur l'image suivante, \u00e0 la fin, on voit qu'il nous demande sur quel disque dur on veut installer alpine. On va lui dire de l'installer sur le disque qu'on a cr\u00e9\u00e9. On voit ici que le \"QEMU DRIVE\" est sda. On entre donc sda.</p> <p></p> <p></p> <ul> <li> <p>On valide l'installation en entrant y  (si vous ne mettez pas y, \u00e7a s'arr\u00eate et vous devez tout recommencer)</p> </li> <li> <p>Le syst\u00e8me d'exploitation est install\u00e9, et il nous demande de red\u00e9marrer.</p> </li> <li> <p>On entre cette commande pour arr\u00eater l'ordinateur: <code>doas poweroff</code></p> <ul> <li>La commande doas nous permet sous alpine d'ex\u00e9cuter une commande comme si on \u00e9tait le super utilisateur (si on y a droit)</li> <li>Dans d'autres distributions linux, on recontre commun\u00e9ment la commande <code>sudo</code></li> </ul> </li> </ul> <p>Commande pour d\u00e9marrer l'ordinateur virtuel</p> <ul> <li> <p>D\u00e8s que vous voulez d\u00e9marrer cet ordinateur, entrez: <code>qemu-system-x86_64 -hda disquedur.qcow2 -m 256 -nic user,ipv6=off,hostfwd=tcp::22022-:22</code></p> </li> <li> <p>D\u00e8s que vous voudrez l'arr\u00eater, entrez: <code>doas poweroff</code></p> </li> </ul> <p>Interface graphique de l'OS</p> <p>Un OS dispose habituellement d'une interface graphique, comme windows. Sous linux, vous avez m\u00eame l'embarras du choix. On n'en ajoutera pas car \u00e7a prend trop d'espace disque et que les ordis ne sont pas assez puissants pour faire tourner 2 OS, mais voici ce que \u00e7a peut donner. </p> <ul> <li>Chez vous, si vous avez beaucoup de RAM, vous pouvez attribuer plus de m\u00e9moire \u00e0 la machine virtuelle en mettant par exemple 2G \u00e0 la place de 256.</li> <li>Vous pouvez ainsi installer un environnement dektop en ex\u00e9cutant la commande <code>setup-desktop</code> et en choisissant <code>xfce</code> (le plus l\u00e9ger, les autres demandent beaucoup de RAM)</li> <li>En \u00e9teignant, puis rallumant la machine, vous aurez un environnement graphique plus l\u00e9ger, mais similaire \u00e0 windows.</li> </ul>"},{"location":"premi%C3%A8re/architecture/os/#manipulations","title":"Manipulations","text":"<p>Exercice d\u00e9brouille</p> <ul> <li>Mettre \u00e0 jour alpine<ul> <li><code>doas apk update</code> fait \u00e9tat des nouvelles versions de composants disponibles</li> <li><code>doas apk upgrade</code> applique les mises \u00e0 jour disponibles</li> </ul> </li> <li>Installer python et nano (Un \u00e9diteur de texte pour CLI)<ul> <li><code>doas apk add nano python3</code></li> </ul> </li> <li>Ecrire un script python simple<ul> <li>cr\u00e9er un fichier test.py</li> <li>Ce programme affiche \"Voici un entier al\u00e9atoire: 6\", o\u00f9 6 est un exemple</li> <li>La premi\u00e8re ligne de code doit \u00eatre <code>#! /usr/bin/python</code> qui indique au syst\u00e8me qu'il faut envoyer le contenu du fichier \u00e0 l'ex\u00e9cutale python pour ex\u00e9cution.</li> </ul> </li> <li>Ex\u00e9cuter le script python<ul> <li><code>./test.py</code> demande l'ex\u00e9cution du fichier python</li> <li>Vous rencontrez un probl\u00e8me. L'utilisateur courant n'a pas le droit d'ex\u00e9cuter ce fichier.</li> <li>Trouvez un moyen de rendre le fichier ex\u00e9cutable par l'utilisateur courant.</li> </ul> </li> </ul>"},{"location":"premi%C3%A8re/architecture/os/#naviguer-dans-le-systeme-de-fichiers","title":"Naviguer dans le syst\u00e8me de fichiers","text":""},{"location":"premi%C3%A8re/architecture/os/#1-chemin-absolu","title":"1. Chemin absolu","text":"<ul> <li> <p>D\u00e9finition : un chemin absolu commence toujours par la racine <code>/</code> et indique l\u2019emplacement exact d\u2019un fichier ou r\u00e9pertoire dans l\u2019arborescence, depuis la racine jusqu\u2019au r\u00e9pertoire/fichier cibl\u00e9.</p> </li> <li> <p>Exemple :   <pre><code>cd /home/alice/Documents\n</code></pre>   Ce chemin part de <code>/</code> (racine), puis va dans <code>home</code>, puis <code>alice</code>, puis <code>Documents</code>.   Peu importe d\u2019o\u00f9 vous partez, vous atterrirez exactement dans <code>/home/alice/Documents</code>.</p> </li> </ul>"},{"location":"premi%C3%A8re/architecture/os/#2-chemin-relatif","title":"2. Chemin relatif","text":"<ul> <li> <p>D\u00e9finition : un chemin relatif ne commence pas par <code>/</code> et indique l\u2019emplacement d\u2019un r\u00e9pertoire ou fichier par rapport au r\u00e9pertoire courant (celui o\u00f9 vous vous trouvez d\u00e9j\u00e0).</p> </li> <li> <p>Exemples :</p> </li> <li> <p>Si vous \u00eates d\u00e9j\u00e0 dans <code>/home/alice</code>, alors :      <pre><code>cd Documents\n</code></pre>      vous am\u00e8ne dans <code>/home/alice/Documents</code>.</p> </li> <li> <p>S\u2019il faut monter d\u2019un r\u00e9pertoire avant d\u2019aller ailleurs, on utilise <code>..</code> pour d\u00e9signer le parent :      <pre><code>cd ../Bob\n</code></pre>      si vous \u00eates dans <code>/home/alice</code>, <code>cd ../Bob</code> vous am\u00e8ne dans <code>/home/Bob</code>.</p> </li> </ul>"},{"location":"premi%C3%A8re/architecture/os/#3-bien-savoir-que","title":"3. Bien savoir que:","text":"<ul> <li><code>.</code> d\u00e9signe le r\u00e9pertoire courant (rarement n\u00e9cessaire avec <code>cd</code>, mais on peut l\u2019utiliser dans d\u2019autres commandes).</li> <li><code>..</code> d\u00e9signe le r\u00e9pertoire parent (celui qui contient le r\u00e9pertoire courant).</li> <li>Un chemin absolu fonctionne o\u00f9 que vous soyez.</li> <li>Un chemin relatif d\u00e9pend de votre emplacement actuel (<code>pwd</code> pour savoir o\u00f9 vous \u00eates).</li> </ul>"},{"location":"premi%C3%A8re/architecture/os/#exemple-de-navigation","title":"Exemple de navigation","text":"<ol> <li> <p>Position de d\u00e9part :    Vous \u00eates dans <code>/home/alice</code>.    <pre><code>pwd\n# /home/alice\n</code></pre></p> </li> <li> <p>Aller dans <code>Documents</code> (chemin relatif) :    <pre><code>cd Documents\npwd\n# /home/alice/Documents\n</code></pre></p> </li> <li> <p>Revenir au r\u00e9pertoire parent (chemin relatif avec <code>..</code>) :    <pre><code>cd ..\npwd\n# /home/alice\n</code></pre></p> </li> <li> <p>Aller directement \u00e0 <code>/etc</code> (chemin absolu) :    <pre><code>cd /etc\npwd\n# /etc\n</code></pre></p> </li> </ol> <p>En r\u00e9sum\u00e9 : - Chemin absolu : commence par <code>/</code> et d\u00e9crit l\u2019itin\u00e9raire complet depuis la racine. - Chemin relatif : d\u00e9pend du r\u00e9pertoire courant et ne commence pas par <code>/</code>. - Utilisez <code>cd</code> pour naviguer facilement en combinant <code>..</code> (parent) et les noms de dossiers.</p>"},{"location":"premi%C3%A8re/architecture/os/#les-commandes-linux-de-base","title":"les commandes Linux de base","text":"<p>Cette vid\u00e9o les r\u00e9sume. Elle dure 5h mais dispose d'un sommaire.</p> <p>Exercice</p> <ul> <li>Cr\u00e9ez un fichier arbo.sh</li> <li>Editez ce fichier pour qu'il comporte toutes les commandes n\u00e9cessaires \u00e0 la cr\u00e9ation de l'arborescence suivante.<ul> <li>1 commande par ligne</li> </ul> </li> <li>Ex\u00e9cutez le fichier arbo.sh et v\u00e9rifiez que l'arborescence a bien \u00e9t\u00e9 cr\u00e9\u00e9e.</li> </ul> <p></p> <p>Questions</p> <p>Ces questions couvrent les bases de la navigation, la manipulation de fichiers et dossiers, la gestion des droits, la recherche de fichiers, et quelques notions de redirection et de processus. Elles permettent d\u00e9j\u00e0 de se familiariser avec l\u2019essentiel de la ligne de commande sous Linux.</p> <ol> <li>Navigation et gestion des r\u00e9pertoires :<ul> <li>Quelle est la diff\u00e9rence entre <code>cd /home</code> et <code>cd home</code> (sans le /) ?  </li> <li>Quelle commande permet d\u2019afficher le r\u00e9pertoire courant (l\u00e0 o\u00f9 vous \u00eates) ?  </li> <li>Comment revenir au r\u00e9pertoire parent avec la commande <code>cd</code> ?</li> </ul> </li> <li>Listing et informations sur les fichiers :<ul> <li>\u00c0 quoi sert la commande <code>ls</code> ? Citez deux options utiles de <code>ls</code>.  </li> <li>Quelle diff\u00e9rence y a-t-il entre <code>ls</code> et <code>ls -l</code> ?</li> </ul> </li> <li>Cr\u00e9ation et suppression de fichiers/r\u00e9pertoires :<ul> <li>Comment cr\u00e9er un fichier vide ? (Donnez deux m\u00e9thodes possibles)  </li> <li>Quelle commande utilise-t-on pour supprimer un r\u00e9pertoire vide ? Et pour un r\u00e9pertoire non vide ?</li> </ul> </li> <li>Copie et d\u00e9placement :<ul> <li>Comment copier un fichier <code>source.txt</code> en <code>destination.txt</code> depuis la ligne de commande ?  </li> <li>Comment d\u00e9placer (ou renommer) un fichier <code>test.txt</code> en <code>test2.txt</code> ?</li> </ul> </li> <li>Recherche de texte :<ul> <li>Quelle commande peut-on utiliser pour rechercher un mot cl\u00e9 dans un fichier texte ?  </li> <li>Comment rechercher le terme <code>linux</code> dans tous les fichiers du r\u00e9pertoire courant ?</li> </ul> </li> <li>Permissions et propri\u00e9t\u00e9s des fichiers :<ul> <li>Comment afficher les droits de fichier et le propri\u00e9taire/groupe d\u2019un fichier ou r\u00e9pertoire ?  </li> <li>Que signifie <code>rwxr-xr--</code> (dans l\u2019ordre : propri\u00e9taire, groupe, autres) ?  </li> <li>\u00c0 quoi sert la commande <code>chmod</code> ? Donnez un exemple simple d\u2019utilisation.</li> </ul> </li> <li>Recherche et localisation de fichiers :<ul> <li>Comment chercher un fichier nomm\u00e9 <code>notes.txt</code> dans l\u2019arborescence \u00e0 partir du r\u00e9pertoire courant ?  </li> <li>Quelle commande (ou quelles options) permet de trouver des fichiers selon leur nom ou d\u2019autres crit\u00e8res (taille, type, etc.) ?</li> </ul> </li> <li>Affichage et manipulation du contenu des fichiers :<ul> <li>Quelle commande permet d\u2019afficher le contenu d\u2019un fichier texte directement dans le terminal ?  </li> <li>Comment afficher les premi\u00e8res lignes d\u2019un fichier ? Les derni\u00e8res ?</li> </ul> </li> <li>Redirection et pipes :<ul> <li>Que fait <code>&gt;</code> apr\u00e8s une commande (par exemple <code>ls &gt; liste.txt</code>) ?  </li> <li>\u00c0 quoi sert le caract\u00e8re <code>|</code> (pipe) ? Donnez un exemple simple.</li> </ul> </li> <li>Informations syst\u00e8me et processus :<ul> <li>Quelle commande affiche des informations sur la m\u00e9moire et les processus en temps r\u00e9el ?  </li> <li>Comment lister les processus en cours d\u2019ex\u00e9cution dans le terminal ?</li> </ul> </li> </ol>"},{"location":"premi%C3%A8re/logique/","title":"Logique","text":""},{"location":"premi%C3%A8re/logique/#histoire","title":"Histoire","text":"<p>En 1703, Gottfried Wilhelm Leibniz fut le premier occidental \u00e0 formaliser un syst\u00e8me d\u2019op\u00e9rations \u00e0 partir de 0 et de 1, le binaire, dans son article \u201dExplication de l\u2019Arithm\u00e9tique Binaire\u201d. On retrouve des traces de pr\u00e9c\u00e9dentes tentatives en Chine dans le Yi Jing, le livre des mutations, au 9\u00e8me si\u00e8cle avant notre \u00e8re. </p> <p>Les nombres binaires \u00e9taient au centre de la th\u00e9ologie de Leibniz. Il croyait que les nombres binaires \u00e9taient symboliques de l\u2019id\u00e9e chr\u00e9tienne de creatio ex ni-hilo ou de cr\u00e9ation \u00e0 partir de rien. Leibniz essayait de trouver un syst\u00e8me qui convertisse les d\u00e9clarations verbales de la logique en un syst\u00e8me purement math\u00e9matique.</p> <p></p> <p>A partir de 1847, George Boole propose un mode de calcul permettant de traduire des raisonnements logiques par des op\u00e9rations math\u00e9matiques. Il cr\u00e9\u00e9 ainsi une branche des math\u00e9matiques qui d\u00e9finit des op\u00e9rations dans un ensemble qui ne contient que 2 \u00e9l\u00e9ments.</p> <p></p> <p>En 1938, Claude Shannon prouve que des circuits \u00e9lectroniques peuvent r\u00e9soudre tous les probl\u00e8mes que la logique de Boole peut r\u00e9soudre.</p> <p></p> <p>Avec les travaux d'Alan Turing de 1936, ceci constitue le fondement de ce qui deviendra l\u2019informatique.</p>"},{"location":"premi%C3%A8re/logique/#les-booleens","title":"Les bool\u00e9ens","text":"<p>Les bool\u00e9ens sont au nombre de 2 : au choix, \\(\\{ Vrai, Faux\\}\\) ou \\(\\{0, 1\\}\\).</p> <p>On peut utiliser l\u2019une ou l\u2019autre des repr\u00e9sentations, c\u2019est justement le principe de mod\u00e9lisation.</p> <p>D\u2019ailleurs, en python, ces 2 op\u00e9rations valent True:</p> <pre><code>0 == False\n1 == True\n</code></pre>"},{"location":"premi%C3%A8re/logique/#les-operateurs-logiques","title":"Les op\u00e9rateurs logiques","text":""},{"location":"premi%C3%A8re/logique/#et","title":"ET","text":"<p>R\u00e9pond \u00e0 la question \u201dEst-ce que les 2 sont vrais ?\u201d</p> <p>Exemple : Pour qu'une lampe s'allume dans un circuit de s\u00e9curit\u00e9, il faut que l'interrupteur ET la porte soient ferm\u00e9s.</p> <p>Si l'interrupteur est ON (ferm\u00e9) ET la porte est ferm\u00e9e, alors la lampe s'allume.</p> <p>Si l\u2019un des deux (ou les deux) est ouvert, la lampe reste \u00e9teinte.</p>"},{"location":"premi%C3%A8re/logique/#ou-inclusif","title":"OU (inclusif)","text":"<p>R\u00e9pond \u00e0 la question \u201dEst-ce qu\u2019au moins un des deux est vrai ?\u201d</p> <p>Pour qu'une alarme se d\u00e9clenche, il suffit que l\u2019une des conditions suivantes soit vraie : une fen\u00eatre OU une porte est ouverte. Si la fen\u00eatre est ouverte, l\u2019alarme sonne. Si la porte est ouverte, l\u2019alarme sonne. Si les deux sont ouvertes, l\u2019alarme sonne \u00e9galement. Si les deux sont ferm\u00e9es, l\u2019alarme ne sonne pas.</p>"},{"location":"premi%C3%A8re/logique/#non","title":"NON","text":"<p>R\u00e9pond \u00e0 la question \u201dEst-ce que c\u2019est Faux ?\u201d</p> <p>Imaginons une porte avec un voyant lumineux. Si la porte est ferm\u00e9e, le voyant lumineux est \u00e9teint. Si la porte est ouverte, le voyant lumineux s\u2019allume. En logique, cela revient \u00e0 dire : si la porte est NON ferm\u00e9e, alors le voyant est allum\u00e9.</p>"},{"location":"premi%C3%A8re/logique/#ou-exclusif","title":"OU EXCLUSIF","text":"<p>R\u00e9pond \u00e0 la question \u201dEst-ce que les deux sont diff\u00e9rents?\u201d</p> <p>Imaginons deux interrupteurs pour une lampe : un interrupteur \u00e0 l\u2019entr\u00e9e et un autre pr\u00e8s du lit. La lampe s\u2019allume seulement si les interrupteurs ne sont pas dans la m\u00eame position.</p> <ul> <li>Si les deux interrupteurs sont en position OFF ou les deux en position ON, la lampe reste \u00e9teinte.</li> <li>Si un interrupteur est ON et l\u2019autre est OFF, alors la lampe s\u2019allume.</li> </ul> <p>Il existe d'autres op\u00e9rateurs, mais qui peuvent \u00eatre construits \u00e0 partir des pr\u00e9c\u00e9dents. D'ailleurs, il ne suffit que de 2 op\u00e9rateurs pour construire tous les autres.</p>"},{"location":"premi%C3%A8re/logique/#tables-de-verite","title":"Tables de v\u00e9rit\u00e9","text":"<p>Dans une table de v\u00e9rit\u00e9, on \u00e9num\u00e8re toutes les combinaisons possibles de vrais et de faux avec les variables en entr\u00e9e (ici a et b), puis on r\u00e9pond \u00e0 la question pos\u00e9e.</p>"},{"location":"premi%C3%A8re/logique/#table-non","title":"Table NON","text":"<p>\"NON a\" renvoie le \"contraire\" de a.</p> a \\(\\bar{a}\\) 0 1 1 0"},{"location":"premi%C3%A8re/logique/#table-et","title":"Table ET","text":"<p>La table de v\u00e9rit\u00e9 donne toutes les possibilit\u00e9s de r\u00e9sultats.</p> <p>\\(a.b\\) ne r\u00e9pond Vrai que lorsque les deux sont vrais.</p> \\(a\\) \\(b\\) \\(a.b\\) 0 0 0 0 1 0 1 0 0 1 1 1"},{"location":"premi%C3%A8re/logique/#table-ou","title":"Table OU","text":"\\(a\\) \\(b\\) \\(a+b\\) 0 0 0 0 1 1 1 0 1 1 1 1"},{"location":"premi%C3%A8re/logique/#table-ou-exclusif","title":"Table OU EXCLUSIF","text":"<p>\\(a\\oplus b\\) n'est vrai que lorsque les deux sont diff\u00e9rents.</p> \\(a\\) \\(b\\) \\(a\\oplus b\\) 0 0 0 0 1 1 1 0 1 1 1 0"},{"location":"premi%C3%A8re/logique/#tables-de-verite-dexpressions","title":"Tables de v\u00e9rit\u00e9 d'expressions","text":"<p>Lorsqu'on demande d'\u00e9tablir la table de v\u00e9rit\u00e9 d'une expression bool\u00e9enne, on commence par \u00e9crire toutes les combinaisons possibles de 0 et de 1, puis on d\u00e9compose l'expression pour trouver progressivement le r\u00e9sultat.</p> <p>Afin de montrer que deux expressions logiques sont \u00e9quivalentes, on peut dresser la table de l'une et de l'autre, et conclure selon qu'elles ont la m\u00eame table de v\u00e9rit\u00e9 ou non.</p> <p>Lois de de Morgan</p> <p>1- Dresser la table de v\u00e9rit\u00e9 de \\(\\overline{a+b}\\) ainsi que de  \\(\\bar{a}.\\bar{b}\\)</p> \\(a\\) \\(b\\) \\(a+b\\) \\(\\color{red}\\overline{a+b}\\) \\(\\bar{a}\\) \\(\\bar{b}\\) \\(\\color{red}\\bar{a}.\\bar{b}\\) 0 0 0 1 1 0 1 1 <p>2- Conclure sur une \u00e9galit\u00e9</p> <p>3- Montrer que  \\(\\overline{a.b} = \\bar{a}+\\bar{b}\\)</p> <p>Ces \u00e9galit\u00e9s \u00e0 conna\u00eetre sont connues sous le nom de lois de de Morgan</p> <p>Propri\u00e9t\u00e9s de base</p> <p>Que valent les expressions suivantes?</p> <ol> <li>\\(1+a\\)</li> <li>\\(1.a\\)</li> <li>\\(0+a\\)</li> <li>\\(0.a\\)</li> <li>\\(a.\\bar{a}\\)</li> <li>\\(a+\\bar{a}\\)</li> </ol>"},{"location":"premi%C3%A8re/logique/#un-peu-delectronique","title":"Un peu d'\u00e9lectronique","text":""},{"location":"premi%C3%A8re/logique/#le-transistor","title":"Le transistor","text":"<p>Le fonctionnement d'un ordinateur r\u00e9side presque essentiellement sur un composant invent\u00e9 en 1947 et qui ne cesse de se perfectionner et de se miniaturiser encore aujourd'hui: le transistor.</p> <p>Il existe des transistors de diverses technologies. Ici je vous pr\u00e9sente le PNP.</p> <p>C'est un composant \u00e9lectronique dot\u00e9 de 3 pattes:</p> <ul> <li>(C) Le collecteur</li> <li>(B) La base</li> <li>L'\u00e9metteur</li> </ul> <p>Voici son symbole \u00e9lectrique et ce \u00e0 quoi \u00e7a ressemble: </p> <p>L'objet n'est pas ici d'\u00eatre expert en transistors mais de saisir un de ses usages fondamentaux: L'interrupteur command\u00e9.</p> <p>Si la tension \u00e0 la base n\u2019est pas suffisamment forte, le courant entre le collecteur et l\u2019\u00e9metteur est coup\u00e9.</p>"},{"location":"premi%C3%A8re/logique/#une-operation-logique-avec-des-transistors-et","title":"Une op\u00e9ration logique avec des transistors : ET","text":"<p>La LED ne s\u2019allumera que si la tension est suffisante \u00e0 la base de Q1 et de Q2. Si l\u2019une ou l\u2019autre des bases n\u2019est pas aliment\u00e9e, le courant est coup\u00e9 et la LED s\u2019\u00e9teint.</p>"},{"location":"premi%C3%A8re/logique/#portes-et-circuits-logiques","title":"Portes et Circuits logiques","text":"<p>Le circuit \u00e9lecttronique pr\u00e9c\u00e9dent se r\u00e9sume enti\u00e8rement \u00e0 la porte logique ET suivante, suivie des repr\u00e9sentations d'autres portes.</p> <p></p> <p>Interrupteurs et lampe</p> <p>On donne le circuit logique suivant avec les interrupteurs a (en haut) et b (en bas). L'interrupteur est \u00e0 1 s'il est ferm\u00e9.</p> <p></p> <p>On note la lampe S. La lampe est \u00e0 1 si elle est allum\u00e9e.</p> <ul> <li>Exprimez S en fonction de a et de b.</li> <li>Etudiez la table de v\u00e9rit\u00e9 de S</li> <li>Proposez une simplification drastique de ce circuit.</li> </ul> <p>Porte NAND</p> <p>La porte NAND r\u00e9alise l'op\u00e9ration NON(A ET B), i.e. \\(\\overline{a.b}\\)</p> <ul> <li>Dressez la table de v\u00e9rit\u00e9 de la porte NAND </li> </ul> <p>Voici son comment elle est repr\u00e9sent\u00e9e sur un circuit: </p> <p></p> <p>Turing Complete</p> <p>Ces exercices sont les premiers niveaux d'un jeu nomm\u00e9 \"turing complete\". Ce jeu, partant de la simple porte NAND, vous emm\u00e8ne jsuqu'\u00e0 construire un ordinateur entier.</p> <p>Au d\u00e9but des exercices, seule la porte NAND est utilisable. A chaque fois que vous arrivez \u00e0 cr\u00e9er une nouvelle porte, elle devient utilisable.</p> <p>R\u00e9alisez chacun de ces exercices les uns sous les autres dans l'interface suivante et sauvegardez votre travail avec le bouton \"t\u00e9l\u00e9charger le circuit\".</p> <ul> <li>Cr\u00e9er une porte NOT. Seule porte autoris\u00e9e: NAND</li> <li>Cr\u00e9er une porte AND</li> <li>Cr\u00e9er une porte OR</li> <li>Cr\u00e9er une porte NOR</li> <li>Cr\u00e9er une porte XOR</li> </ul> <p>Pourquoi appelle-t-on une porte NAND une porte universelle?</p> <p> </p>"},{"location":"premi%C3%A8re/logique/#circuit-demi-additionneur","title":"Circuit demi-additionneur","text":"<p>Ce circuit prend 2 bits en entr\u00e9e et les additionne, comme s'il s'agissait d'entiers binaires dont on pose l'addition.</p> <p>Le circuit prend en entr\u00e9e deux bits \\(a\\) et \\(b\\). Il renvoie la somme \\(S\\), ainsi que la retenue \\(C_{out}\\)</p> <p>Ainsi, on peut directement construire la table de v\u00e9rit\u00e9 du circuit r\u00e9sultant:</p> \\(a\\) \\(b\\) \\(S\\) \\(C_{out}\\) Commentaire 0 0 0 0 0+0=0 et je retiens 0 0 1 1 0 0+1=1 et je retiens 0 1 0 1 0 1+0=1 et je retiens 0 1 1 0 1 1+1=0 et je retiens 1 <ul> <li>En observant la colonne \\(s\\), on reconna\u00eet la table de v\u00e9rit\u00e9 de la porte XOR.</li> <li>En observant la colonne \\(C_{out}\\), on reconna\u00eet la table de v\u00e9rit\u00e9 de la porte AND.</li> </ul> <p>R\u00e9alisation du demi-additionneur</p> <p>R\u00e9alisez le circuit demi-additionneur dans l'interface et t\u00e9l\u00e9chargez le r\u00e9sultat.</p>"},{"location":"premi%C3%A8re/logique/#circuit-additionneur-complet-full-adder","title":"Circuit additionneur complet (Full Adder)","text":"<p>Le circuite additionneur prend en entr\u00e9e deux bits \\(a\\) et \\(b\\) ainsi qu'une retenue \\(C_{in}\\).</p> <p>Il \u00e9met 2 informations en sortie, la somme obtenue \\(S\\), ainsi que la retenue \\(C_{out}\\)</p> <p>Full-Adder</p> <ul> <li>Compl\u00e9tez la table de v\u00e9rit\u00e9 suivante pour l'additionneur complet.</li> </ul> \\(a\\) \\(b\\) \\(C_{in}\\) \\(S\\) \\(C_{out}\\) Commentaire 0 0 0 0 0 0+0+0=0 et je retiens 0 0 0 1 0 1 0 0 1 1 1 0 0 1 0 1 1 1 0 1 1 1 <ul> <li>Montrer que \\(S = a \\oplus b \\oplus C_{in}\\)</li> <li>Montrer que \\(C_{out} = (a \\oplus b) . C_{in} + a . b\\)</li> <li>R\u00e9alisez alors le circuit de l'additionneur complet et sauvegardez-le.</li> </ul> <p>Additionneur 4 bits</p> <p>Un additionneur 4 bits est compos\u00e9 d'un Half-Adder et de 3 Full-Adders en cha\u00eene. Le but est d'additionner le nombre form\u00e9 par les bits de la premi\u00e8re colonne avec le nombre form\u00e9 par les bits de la deuxi\u00e8me colonne.</p> <p>Les composants d'affichage en bas vous permettent de visualiser sous forme d\u00e9cimale chaque nombre, et il y en a aussi un pour le r\u00e9sultat.</p> <p>R\u00e9alisez ce circuit et sauvegardez-le</p> <p> </p>"},{"location":"premi%C3%A8re/prog/exercices/","title":"Exercices Algorithmique","text":""},{"location":"premi%C3%A8re/prog/exercices/#accumulation-types-primitifs","title":"Accumulation - types primitifs","text":"<p>Mode op\u00e9ratoire</p> <ul> <li>Cr\u00e9ez un fichier exos_accumulation.py</li> </ul> <p>Attention</p> <p>En informatique, on ne met jamais d'espace ni de caract\u00e8re sp\u00e9cial (accents, etc) dans un nom de fichier ou de r\u00e9pertoire.</p> <p>Pour chacun de ces exercices, il s'agit :</p> <ul> <li>d'initialiser une variable r\u00e9sultat</li> <li>de le remplir \u00e0 l'aide d'un parcours d'it\u00e9rable</li> <li>de renvoyer le r\u00e9sultat</li> </ul> <p>Cette mani\u00e8re de faire est extr\u00eamement fr\u00e9quente et constitue la base de ce que vous devez savoir faire en algorithmique. On dit qu'on accumule progressivement dans le r\u00e9sultat afin de pouvoir le renvoyer. La premi\u00e8re \u00e9tape est toujours de bien mod\u00e9liser le probl\u00e8me en \u00e9crivant une signature de fonction appropri\u00e9e, avec des noms de fonction et de param\u00e8tres choisis judicieusement pour qu'ils soient \u00e0 la fois \u00e9vocateurs de ce qu'ils repr\u00e9sentent, ni trop courts, ni trop longs.</p> <p>La premi\u00e8re chose \u00e0 consid\u00e9rer lorsqu'on travaille sur une variable est toujours: \"de quelle type est-elle?\" La r\u00e9ponse nous informe sur ce qu'on peut faire ou pas avec cette variable d'apr\u00e8s le cours. Ca devient naturel et instantan\u00e9 avec de la pratique, mais pour l'instant, vous devez faire l'effort d'y penser.</p> <p>Toute fonction devra \u00eatre test\u00e9e.</p> <p>Somme des entiers</p> <p>\u00c9crire et tester une fonction qui renvoie la somme des nombres entiers de 1 jusque n.</p> <p>Produit des entiers &gt; 0</p> <p>\u00c9crire et tester une fonction qui renvoie le produit des nombres entiers de 1 jusque n.</p> <p>On appelle ce nombre \\(n!\\) qui se lit \"n factorielle\", avec \\(0! = 1\\)</p> <p>Nombre de voyelles</p> <p>\u00c9crire une fonction qui lit une cha\u00eene de caract\u00e8res et affiche le nombre de voyelles pr\u00e9sentes dans cette cha\u00eene.</p> <p>Inverser</p> <p>Ecrire une fonction qui renvoie les caract\u00e8res d'une cha\u00eene de caract\u00e8res dans l'autre sens. inverser(\"banane\") renvoie \"enanab\".</p> <p>1 sur 2</p> <p>Ecrire une fonction qui prend une cha\u00eene de caract\u00e8re en param\u00e8tre. Elle renvoie une cha\u00eene de caract\u00e8res o\u00f9 seulement 1 caract\u00e8re sur 2 est pr\u00e9sent.</p> <p>contient</p> <p>Ecrire une fonction qui renvoie True si une cha\u00eene contient un caract\u00e8re, False sinon. On n'utilisera pas l'op\u00e9rateur <code>in</code>.</p> <p>Nombre d'occurences</p> <p>\u00c9crire une fonction qui prend en param\u00e8tres une cha\u00eene de caract\u00e8re et un caract\u00e8re et renvoie le nombre de fois o\u00f9 le caract\u00e8re appara\u00eet dans la cha\u00eene de caract\u00e8re.</p> <p>Take</p> <p>Ecrire une fonction qui renvoie les n premiers caract\u00e8res d'une cha\u00eene de caract\u00e8res. Si n est sup\u00e9rieur au nombre de caract\u00e8res, renvoyer la cha\u00eene de caract\u00e8res enti\u00e8re.</p> <p>Drop</p> <p>Ecrire une fonction qui renvoie une cha\u00eene amput\u00e9e de ses n premiers caract\u00e8res. Si n est sup\u00e9rieur au nombre de caract\u00e8re, renvoyer la cha\u00eene vide.</p>"},{"location":"premi%C3%A8re/prog/exercices/#listes","title":"Listes","text":"<p>Somme</p> <p>Ecrire et tester une fonction <code>somme</code> qui prend en param\u00e8tres une liste de floats et qui renvoie leur somme.</p> <p>Moyenne</p> <p>Ecrire et tester une fonction <code>moyenne</code> qui prend en param\u00e8tres ue liste de floats et qui renvoie leur moyenne.</p> <p>Minimum</p> <p>Ecrire et tester une fonction <code>minimum</code> qui prend en param\u00e8tres une liste d'entiers et qui renvoie le minimum.</p> <p>Il faut initialiser le minimum au premier \u00e9l\u00e9ment de la liste, et pour chaque \u00e9l\u00e9ment parcouru, mettre \u00e0 jour le minimum si c'est n\u00e9cessaire.</p> <p>Maximum</p> <p>Ecrire et tester une fonction <code>maximum</code> qui prend en param\u00e8tres une liste d'entiers et qui renvoie le minimum, sur le m\u00eame principe.</p> <p>Indice Minimum</p> <p>Ecrire et tester une fonction <code>i_minimum</code> qui prend en param\u00e8tres une liste d'entiers et qui renvoie l'index du minimum.</p> <p>Il faut initialiser le minimum au premier \u00e9l\u00e9ment de la liste, et pour chaque \u00e9l\u00e9ment parcouru, mettre \u00e0 jour le minimum si c'est n\u00e9cessaire.</p> <p>Indice Minimum \u00e0 partir de</p> <p>Ecrire et tester une fonction <code>i_minimum_partiel</code> qui prend en param\u00e8tres une liste d'entiers et un indice i_dep et qui renvoie l'index du minimum \u00e0 partir de l'indice i_dep.</p> <p>Tri</p> <p>Le probl\u00e8me du tri est fondamental en informatique. Beaucoup d'algorithmes commencent par trier les donn\u00e9es afin de pouvoir utiliser des techniques efficaces.</p> <p>Si on ne pr\u00e9cise pas l'ordre du tri, on parle de tri par ordre croissant.</p> <p>Une liste est tri\u00e9e si chaque \u00e9l\u00e9ment est plus grand que le precedent.</p> <p>Ecrire et tester une fonction <code>est_triee(lst: list[int]) -&gt; bool</code> qui prend en param\u00e8tres une liste et qui renvoie True si la liste est tri\u00e9e, False sinon.</p> <p>Echanger</p> <p>Ecrire et tester une fonction <code>echange(lst: list[int], i: int, j: int)</code> qui prend en param\u00e8tres une liste et deux indices et qui echange les valeurs des deux indices.</p> <p>Suite de syracuse</p> <p>On part d'un nombre entier \\(a&gt;0\\). Si \\(a\\) est pair, on le divise par 2 pour obtenir la prochaine valeur Si \\(a\\) est impair, on le multiplie par 3 et on ajoute 1 pour obtenir la prochaine valeur.</p> <p>Voici les diff\u00e9rentes valeurs prises, en prenant au d\u00e9part \\(a=15\\)</p> <p></p> <ul> <li> <p>\u00c9crire la suite de nombres correspondante pour \\(a=7\\).</p> </li> <li> <p>\u00c9crire une fonction <code>syracuse(a: int, n: int)</code> qui affiche les n premiers nombres de la suite pour le nombre de d\u00e9part a.</p> </li> <li> <p>Modifier la fonction pour qu'elle renvoie la liste des n premiers nombres de la suite.</p> </li> <li> <p>Modifier la fonction en <code>syracuse(a: int)-&gt; list[int]</code> pour qu'elle s'arr\u00eate d'alimenter la liste r\u00e9sultat d\u00e8s que la nouvelle valeur est 1. Testez pour a=15 et a=7. Les questions suivantes portent sur cette suite g\u00e9n\u00e9r\u00e9e se terminant par 1.</p> </li> </ul> <p>Pour un nombre de d\u00e9part a, on appelle \"temps de vol\" de la suite l'indice du dernier \u00e9l\u00e9ment de la liste.</p> <ul> <li>Quel est le temps de vol pour \\(a=15\\)? Pour \\(a=7\\)?</li> </ul> <p>On appelle altitude maximum de la suite la valeur maximum de la suite d'entier.</p> <ul> <li>Quelle est l'altitude pour \\(a=15\\)? Pour \\(a = 7\\)?</li> <li>\u00c9crire les fonctions <code>temps_de_vol(a: int) -&gt; int</code> et <code>altitude_max(a: int) -&gt; int</code>.</li> </ul> <p>Recherche: </p> <ul> <li>Qu'est-ce que la conjecture de Collatz? A-t-elle \u00e9t\u00e9 prouv\u00e9e?</li> <li>Qui est Paul Erd\u0151s? </li> <li>Il a prononc\u00e9 une phrase c\u00e9l\u00e8bre sur la conjecture de Collatz. Laquelle?</li> </ul> <p>Recherche sur le tri</p> <p>A l'aide des fonctions <code>i_miniminium_partiel</code> et <code>echanger</code>, imaginer une fonction <code>tri_selection(lst: list[int])</code> qui trie en place une liste dans l'ordre croissant.</p> <pre><code>def tri_selection(lst: list[int]):\n    for i in range(0, len(lst)-1):\n        ...\n        ...\n</code></pre> <ul> <li>Etudier ce qu'il se passe si on essaye de trier la liste vide</li> <li>Etudier ce qu'il se passe si on essaye de trier une liste \u00e0 1 \u00e9l\u00e9ment</li> </ul> <p>Compression par diff\u00e9rence</p> <p>Le codage par diff\u00e9rence (delta encoding en anglais) permet de compresser un tableau de donn\u00e9es en indiquant pour chaque donn\u00e9e, sa diff\u00e9rence avec la pr\u00e9c\u00e9dente (plut\u00f4t que la donn\u00e9e elle-m\u00eame). On se retrouve alors avec un tableau de donn\u00e9es assez petites n\u00e9cessitant moins de place en m\u00e9moire. Cette m\u00e9thode se r\u00e9v\u00e8le efficace lorsque les valeurs cons\u00e9cutives sont proches.</p> <p>Programmer la fonction <code>compresse</code> qui prend en param\u00e8tre un tableau non vide de nombres entiers et qui renvoie un tableau contenant les valeurs enti\u00e8res compress\u00e9es \u00e0 l\u2019aide cette technique.</p> <p>Exemples:</p> <pre><code>&gt;&gt;&gt; compresse([1000, 800, 802, 1000, 1003])\n[1000, -200, 2, 198, 3]\n&gt;&gt;&gt; compresse([42])\n[42] \n</code></pre> <p>D\u00e9compression</p> <p>Ecrivez une fonction <code>decompresse</code> qui d\u00e9compresse un tableau de donn\u00e9es compress\u00e9e par la m\u00e9thode pr\u00e9c\u00e9dente</p> <p>Exemples :</p> <pre><code>&gt;&gt;&gt; decompresse([1000, -200, 2, 198, 3])\n[1000, 800, 802, 1000, 1003]\n\n&gt;&gt;&gt; decompresse([42])\n[42] \n</code></pre> <p>ADN</p> <p>On donne la s\u00e9quence de nul\u00e9otide d'un brin de l'ADN sous la forme d'une cha\u00eene de caract\u00e8res. Ecrivez une fonction <code>complementaire</code> qui renvoie la sequence du brin complementaire sachant que:</p> <ul> <li>le complementaire de A est T</li> <li>le complementaire de G est C</li> <li>le complementaire de T est A</li> <li>le complementaire de C est G</li> </ul> <p>Exemple:</p> <pre><code>&gt;&gt;&gt;complementaire(\"ATTTCCGGTAAACATGT\")\n'TAAAGGCCATTTGTACA'\n</code></pre>"},{"location":"premi%C3%A8re/prog/exercices/#dictionnaires","title":"Dictionnaires","text":""},{"location":"premi%C3%A8re/prog/exercices/#traitement-des-donnees-en-table","title":"Traitement des donn\u00e9es en table","text":"<p>Exercices</p> <p>Pour chacun d'exercices suivant, on attend qu'une fonction soit \u00e9crite et test\u00e9e.</p> <p>Notes d'une classe</p> <p>Un dictionnaire notes contient les noms des \u00e9l\u00e8ves en cl\u00e9s et leurs moyennes en valeurs.</p> <pre><code>    notes = {'Alice': 15, 'Bob': 12, 'Clara': 17, 'David': 10}\n</code></pre> <ol> <li> <p>\u00c9crire une fonction <code>rapport_moyenne</code> qui prend en param\u00e8tre un dictionnaire et affiche la moyenne de chaque \u00e9l\u00e8ve sous la forme : \"Alice a une moyenne de 15.\". Ajouter un commentaire selon la moyenne : \"Excellent\" pour une moyenne \u2265 16, \"Bien\" pour une moyenne entre 12 et 15 inclus, et \"\u00c0 am\u00e9liorer\" pour une moyenne &lt; 12.</p> </li> <li> <p>\u00c9crire une fonction ajouter_eleve(notes: dict, nom: str, moyenne: float) qui ajoute un nouvel \u00e9l\u00e8ve au dictionnaire.</p> </li> <li> <p>\u00c9crire une fonction modifier_moyenne(notes: dict, nom: str, nouvelle_moyenne: float) qui modifie la moyenne d'un \u00e9l\u00e8ve.</p> </li> <li> <p>\u00c9crire une fonction <code>eleves_mention(notes: dict, seuil: float) -&gt; list[str]</code> qui renvoie la liste des \u00e9l\u00e8ves ayant une moyenne \u2265 seuil.</p> </li> </ol> <p>Gestion des biblioth\u00e8ques</p> <p>Un dictionnaire bibliotheques contient plusieurs biblioth\u00e8ques.</p> <pre><code>    bibliotheques = {\n        'biblio1': {'nom': 'Biblioth\u00e8que Centrale', 'ville': 'Paris', 'livres': 30000},\n        'biblio2': {'nom': 'M\u00e9diath\u00e8que', 'ville': 'Lyon', 'livres': 15000},\n        'biblio3': {'nom': 'Biblioth\u00e8que Universitaire', 'ville': 'Marseille', 'livres': 50000}\n    }\n</code></pre> <ol> <li> <p>\u00c9crire une fonction afficher_bibliotheques qui affiche les informations sous la forme : \"Biblioth\u00e8que Centrale \u00e0 Paris : 30000 livres.\".</p> </li> <li> <p>\u00c9crire une fonction ajouter_bibliotheque qui ajoute une nouvelle biblioth\u00e8que au dictionnaire.</p> </li> <li> <p>\u00c9crire une fonction plus_grande_bibliotheque qui renvoie la biblioth\u00e8que ayant le plus de livres.</p> </li> <li> <p>\u00c9crire une fonction total_livres qui calcule et renvoie le nombre total de livres.</p> </li> </ol> <p>Gestion d'employ\u00e9s</p> <p>Un dictionnaire employes contient les informations des employ\u00e9s.</p> <pre><code>    employes = {\n        'emp1': {'nom': 'Alice', 'poste': 'D\u00e9veloppeur', 'salaire': 3500},\n        'emp2': {'nom': 'Bob', 'poste': 'Designer', 'salaire': 3000},\n        'emp3': {'nom': 'Clara', 'poste': 'Chef de projet', 'salaire': 5000}\n    }\n</code></pre> <ol> <li> <p>\u00c9crire une fonction afficher_employes qui affiche les informations sous la forme : \"Alice est D\u00e9veloppeur et gagne 3500 euros.\".</p> </li> <li> <p>\u00c9crire une fonction ajouter_employe qui ajoute un nouvel employ\u00e9 au dictionnaire.</p> </li> <li> <p>\u00c9crire une fonction augmenter_salaires qui augmente tous les salaires d'un pourcentage donn\u00e9 en param\u00e8tres.</p> </li> <li> <p>\u00c9crire une fonction employe_salaire_max qui renvoie l'employ\u00e9 ayant le salaire le plus \u00e9lev\u00e9.</p> </li> </ol> <p>Analyse de performances d'athl\u00e8tes</p> <p>Un dictionnaire athletes permet de suivre les performances.</p> <pre><code>    athletes = {\n        'Pierre': {'sport': 'marathon', 'temps': [2.15, 2.18, 2.16]},\n        'Sophie': {'sport': 'marathon', 'temps': [2.20, 2.22, 2.19]}\n    }\n</code></pre> <p>\u00c9crire les fonctions suivantes :</p> <ol> <li>calculer_moyenne_performances qui calcule la moyenne des performances</li> <li>meilleur_temps qui trouve l'athl\u00e8te avec le meilleur temps pour un sport donn\u00e9</li> <li>progression_athlete qui calcule la progression entre les performances</li> <li>ajouter_performance qui ajoute une nouvelle performance</li> </ol> <p>Voitures - compr\u00e9hension</p> <pre><code>voitures = [\n    {\"marque\": \"Toyota\", \"modele\": \"Corolla\", \"annee\": 2020, \"kilometrage\": 20000},\n    {\"marque\": \"Ford\", \"modele\": \"Mustang\", \"annee\": 1968, \"kilometrage\": 120000},\n    {\"marque\": \"Tesla\", \"modele\": \"Model 3\", \"annee\": 2021, \"kilometrage\": 15000},\n    {\"marque\": \"Renault\", \"modele\": \"Clio\", \"annee\": 2019, \"kilometrage\": 40000},\n    {\"marque\": \"BMW\", \"modele\": \"X5\", \"annee\": 2022, \"kilometrage\": 10000},\n]\n</code></pre> <ol> <li>Quel est le type de la variable voitures?</li> <li>Combien y-a-t-il de voitures?</li> <li>Donner la liste des marques.</li> <li>Donner la liste des voitures (<code>list[dict]</code>), mais seulement avec la marque et le mod\u00e8le.</li> <li>Quelles sont les voitures ayant un kilom\u00e9trage inf\u00e9rieur \u00e0 25000 km?</li> <li>Ecrire une fonction <code>get_marque(voiture: dict) -&gt; str</code> qui renvoie la marque d'une voiture.</li> <li>D\u00e9crire, apr\u00e8s l'avoir test\u00e9, ce que fait l'instruction <code>sorted(voitures, key=get_marque)</code></li> <li>Ecrire une fonction <code>get_annee(voiture: dict) -&gt; int</code> qui renvoie l'ann\u00e9e d'une voiture.</li> <li>D\u00e9crire, apr\u00e8s l'avoir test\u00e9, ce que fait l'instruction <code>min(voitures, key=get_annee)</code></li> <li>Quelle est la voiture ayant le plus grand kilom\u00e9trage?</li> <li>Trier les voitures en fonction de leur kilom\u00e9trage.</li> </ol>"},{"location":"premi%C3%A8re/prog/listes/","title":"Le type list (et tuple)","text":"<p>Qu'est-ce qu'une liste?</p> <p>C'est un type de donn\u00e9e qui permet de stocker plusieurs informations de n'importe quel type.</p> <p>En Python, on peut cr\u00e9er une liste en utilisant des crochets.</p> <p>Par exemple, la liste <code>[1, 2, 3]</code> contient trois entiers, <code>1</code>, <code>2</code> et <code>3</code>.</p> <p>Une liste est mutable, ce qui signifie qu'on peut modifier son contenu une fois qu'elle est cr\u00e9\u00e9e.</p> <p>Une liste est une s\u00e9quence</p> <p>Une liste est une s\u00e9quence, comme les <code>str</code>. Tout ce qui a \u00e9t\u00e9 vu pour les str est aussi vrai pour les listes. (sauf les m\u00e9thodes sp\u00e9cifiques aux chaines de caract\u00e8re, comme is_alpha, etc...)</p> <p>Le premier indice d'une s\u00e9quence de taille \\(n\\) est 0, le deuxieme est 1, ... , et le dernier est \\(n-1\\).</p> <p>Cr\u00e9ation d'une liste</p> <p><pre><code>ma_liste = [1, 2, 3]\n</code></pre> Ici, la liste <code>ma_liste</code> contient trois \u00e9l\u00e9ments, <code>1</code>, <code>2</code> et <code>3</code>.</p> <p>Acc\u00e8s aux \u00e9l\u00e9ments d'une liste - Identique aux str</p> <p><pre><code>ma_liste = [\"ok\", \"ko\", \"truc\"]\nprint(ma_liste[0])  # Affiche ok\nprint(ma_liste[1])  # Affiche ko\nprint(ma_liste[2])  # Affiche truc  \n</code></pre> Ici, nous accedons aux \u00e9l\u00e9ments de la liste <code>ma_liste</code> en utilisant des indices.</p> <p><code>t[i]</code> est l'element num\u00e9ro <code>i</code> de la liste <code>t</code>.</p> <p>Modifier les \u00e9l\u00e9ments d'une liste</p> <p>On ne pouvait pas faire ceci avec les str car ils sont immuables. <pre><code>ma_liste = [1, 2, 3]\nma_liste[0] = 4\nprint(ma_liste)  # Affiche [4, 2, 3]\n\nma_liste[-1] = 42\nprint(ma_liste)  # Affiche [4, 2, 42]\n\nma_liste[3] = 77 # IndexError: list assignment index out of range\n</code></pre></p> <p>Concat\u00e9ner des listes</p> <p><pre><code>liste1 = [1, 2, 3]\nliste2 = [4, 5, 6]\nliste1 = liste1 + liste2\n</code></pre> Ici, nous concat\u00e9nons les listes <code>liste1</code> et <code>liste2</code>.</p> <p>Cette syntaxe ne veut pas dire qu'on modifie la liste contenue dans la variable <code>liste1</code>, ni qu'on lui ajoute des \u00e9l\u00e9ments. Ce qu'il se passe r\u00e9ellement, c'est que <code>liste1 + liste2</code> est calcul\u00e9, puis la valuer de la variable <code>liste1</code> est remplac\u00e9e par cette nouvelle liste.</p> <p>On souhaite b\u00e9n\u00e9ficier du caract\u00e8re mutable des listes, afin de ne pas avoir \u00e0 recr\u00e9er l'int\u00e9gralit\u00e9 en m\u00e9moire \u00e0 chaque fois.</p> <p>Pour ceci on dispose de m\u00e9thodes dites \"en place\", qui modifient directement la liste sans passer par une cr\u00e9ation de nouvelle liste en m\u00e9moire. Ici la m\u00e9thode extend.</p> <pre><code>ma_liste = [1, 2, 3]\nma_liste.extend([4, 5, 6])       # la m\u00e9thode extend ne renvoie rien (None)\nprint(ma_liste)  # Affiche [1, 2, 3, 4, 5, 6]\n</code></pre> <p>Ici, ma_liste a \u00e9t\u00e9 modifi\u00e9e directement en m\u00e9moire, sans avoir recours \u00e0 un calcul interm\u00e9diaire.</p> <p>Ajouter un \u00e9l\u00e9ment \u00e0 une liste</p> <p>La m\u00e9thode append est utilis\u00e9e pour ajouter un \u00e9l\u00e9ment en fin de liste.</p> <pre><code>ma_liste = [1, 2, 3]\nma_liste.append(4)             # la m\u00e9thode append ne renvoie rien (None)\nprint(ma_liste)  # Affiche [1, 2, 3, 4]\n</code></pre> <p>Attention \u00e0 ne pas confondre</p> <p>Il est tr\u00e8s important de bien diff\u00e9rencier ajouter un \u00e9l\u00e9ment (append) et concat\u00e9ner une liste \u00e0 une autre liste (extend)</p> <p>Fonctions g\u00e9n\u00e9riques aux s\u00e9quences</p> <p>Avec les tuples, on peut utiliser toutes les fonctionns disponibles pour les s\u00e9quences, comme <code>len()</code>.</p> <pre><code>lst = [1, 4, 2]  # tuple de taille 3\nprint(len(lst))  # Affiche 3\n</code></pre> <p>Parcourir une liste</p> <p>Une liste est une s\u00e9quence, tout comme unn str. Les algorithmes sont strictement identiques.</p> <p>Parcours par \u00e9l\u00e9ment: <pre><code>liste1 = [2, 9, 3]\nfor element in liste1:\n    print(element)\n</code></pre></p> <p>Ici, nous it\u00e9rons sur tous les \u00e9l\u00e9ments de la liste <code>liste1</code> et affichons chacun d'entre eux successivement.</p> <p>Parcours par indice:</p> <p><pre><code>liste1 = [1, 2, 3]\nfor i in range(len(liste1)):\n    print(liste1[i])\n</code></pre> Ici, nous it\u00e9rons sur tous les indices de la liste <code>liste1</code> et affichons chacun d'entre eux successivement.</p> <p>Algo - Accumulation</p> <p>Le principe d'accumulation est identique.</p> <p>Construire la liste des carr\u00e9s des n premiers entiers</p> <pre><code>res = []  # Liste vide\nn = 5\nfor i in range(n):\n    res.append(i**2)\nprint(res) # Affiche [0, 1, 4, 9, 16]\n</code></pre> <p>Les tuples</p> <p>C'est aussi une collection d'\u00e9l\u00e9ments, comme les listes:</p> <pre><code>t = (\"ok\", 2, \"bidule\")\nprint(t[0])  # Affiche ok\nprint(t[1])  # Affiche 2\nprint(t[2])  # Affiche bidule\nprint(t[3])  # IndexError\n</code></pre> <p>Les tuples sont, comme les str, immuables. On ne peut pas les modifier une fois cr\u00e9\u00e9s.</p> <p>Il faut consid\u00e9rer qu'on peut faire exactement la m\u00eame chose avec des tuples qu'avec des str, sauf qu'au lieu de caract\u00e8res, on manipule des valeurs de n'importe quel type.</p> <p>La seule particularit\u00e9 est le tuple \u00e0 un seul \u00e9l\u00e9ment, qui se termine par une virgule, pour ne pas le confondre avec des expressions arithm\u00e9tiques:</p> <pre><code>t = (1,)\nprint(t[0])  # Affiche 1\n\nt = (1)\nprint(t[0]) # Erreur, car t est l'int 1\n</code></pre> <p>Tuple ou liste?</p> <p>En Python, les tuples et les listes sont des structures de donn\u00e9es qui permettent de stocker plusieurs \u00e9l\u00e9ments dans une seule variable, mais ils ont des cas d'utilisation diff\u00e9rents en fonction de leurs propri\u00e9t\u00e9s.</p>"},{"location":"premi%C3%A8re/prog/listes/#les-tuples","title":"Les tuples","text":"<ul> <li>Immutables : Une fois cr\u00e9\u00e9s, leurs \u00e9l\u00e9ments ne peuvent pas \u00eatre modifi\u00e9s.</li> <li>Usage typique : Utilis\u00e9s pour repr\u00e9senter des collections de donn\u00e9es qui ne doivent pas changer, comme :</li> <li>Les coordonn\u00e9es (x, y, z).</li> <li>Les retours de fonction contenant plusieurs valeurs.</li> <li>Des ensembles de donn\u00e9es \"constantes\" (par exemple, des jours de la semaine).</li> <li>Performance : Plus rapides que les listes pour certaines op\u00e9rations, en raison de leur immutabilit\u00e9.</li> <li>Syntaxe : Les tuples sont d\u00e9finis avec des parenth\u00e8ses, par exemple : <code>mon_tuple = (1, 2, 3)</code>.</li> </ul>"},{"location":"premi%C3%A8re/prog/listes/#les-listes","title":"Les listes","text":"<ul> <li>Mutables : Leurs \u00e9l\u00e9ments peuvent \u00eatre ajout\u00e9s, modifi\u00e9s ou supprim\u00e9s apr\u00e8s leur cr\u00e9ation.</li> <li>Usage typique : Utilis\u00e9es pour des collections de donn\u00e9es qui doivent \u00eatre modifi\u00e9es, comme :</li> <li>Une liste de t\u00e2ches ou de noms d'utilisateurs.</li> <li>Des donn\u00e9es \u00e0 trier, filtrer ou parcourir.</li> <li>Des structures dynamiques qui \u00e9voluent au cours de l'ex\u00e9cution du programme.</li> <li>Performance : Plus flexibles que les tuples, mais l\u00e9g\u00e8rement plus lentes pour certaines op\u00e9rations en raison de leur mutabilit\u00e9.</li> <li>Syntaxe : Les listes sont d\u00e9finies avec des crochets, par exemple : <code>ma_liste = [1, 2, 3]</code>.</li> </ul>"},{"location":"premi%C3%A8re/prog/listes/#choisir-entre-tuple-et-liste","title":"Choisir entre tuple et liste","text":"<ul> <li>Si vous avez besoin d'une structure fixe ou d'un contenu non modifiable, utilisez un tuple.</li> <li>Si vous avez besoin d'une structure modulable ou de donn\u00e9es dynamiques, optez pour une liste.</li> </ul>"},{"location":"premi%C3%A8re/prog/scope/","title":"Port\u00e9e des variables (scope)","text":""},{"location":"premi%C3%A8re/prog/scope/#1-quest-ce-que-la-portee-scope","title":"1. Qu\u2019est-ce que la port\u00e9e (scope) ?","text":"<p>La port\u00e9e d\u2019une variable d\u00e9termine les parties du code o\u00f9 cette variable est accessible. En Python, on distingue principalement:</p> <ol> <li>Port\u00e9e locale : Les variables d\u00e9clar\u00e9es \u00e0 l\u2019int\u00e9rieur d\u2019une fonction, accessibles uniquement dans cette fonction.  </li> <li>Port\u00e9e globale : Les variables d\u00e9clar\u00e9es en dehors de toute fonction (au niveau du module, par exemple). Elles sont accessibles partout dans le module.</li> </ol>"},{"location":"premi%C3%A8re/prog/scope/#2-variables-locales","title":"2. Variables locales","text":"<p>Une variable locale est cr\u00e9\u00e9e et utilis\u00e9e \u00e0 l\u2019int\u00e9rieur d\u2019une fonction. Elle n\u2019existe qu\u2019au moment de l\u2019ex\u00e9cution de la fonction et n\u2019est pas accessible en dehors.</p> <pre><code>def ma_fonction():\n    x = 10  # Variable locale \"x\"\n    print(\"Dans la fonction, x =\", x)\n\nma_fonction()\n\nprint(x)  # Erreur, car x n'existe pas en dehors de la fonction\n</code></pre> <p>Dans cet exemple : - <code>x</code> est cr\u00e9\u00e9e \u00e0 l\u2019appel de <code>ma_fonction()</code>. - Apr\u00e8s la fin de <code>ma_fonction()</code>, <code>x</code> est d\u00e9truite et n\u2019est plus accessible.</p>"},{"location":"premi%C3%A8re/prog/scope/#3-variables-globales","title":"3. Variables globales","text":"<p>Une variable globale est d\u00e9finie au niveau du script, en dehors de toute fonction. Elle est donc potentiellement accessible dans tout le script, y compris dans les fonctions (sous certaines conditions, comme on va le voir).</p> <pre><code>a = 5  # Variable globale\n\ndef afficher_a():\n    print(\"Dans la fonction, a =\", a)\n\nafficher_a()\nprint(\"En dehors de la fonction, a =\", a)\n</code></pre> <ul> <li>Ici, <code>a</code> est globale et peut \u00eatre lue depuis <code>afficher_a()</code>.  </li> <li>Il n\u2019y a pas de conflit particulier parce qu\u2019on se contente de lire la valeur.</li> </ul>"},{"location":"premi%C3%A8re/prog/scope/#31-modifier-une-variable-globale-dans-une-fonction","title":"3.1. Modifier une variable globale dans une fonction","text":"<p>Si l\u2019on veut assigner (modifier) la variable globale depuis l\u2019int\u00e9rieur d\u2019une fonction, il faut d\u00e9clarer cette variable comme <code>global</code> dans la fonction. Sinon, Python cr\u00e9era par d\u00e9faut une variable locale du m\u00eame nom.</p> <pre><code>x = 10  # Variable globale\n\ndef incrementer_x():\n    global x\n    x = x + 1  # Modification de la variable globale\n\nprint(\"Avant :\", x)\nincrementer_x()\nprint(\"Apr\u00e8s :\", x)\n</code></pre> <ul> <li>Sans le mot-cl\u00e9 <code>global</code>, l\u2019affectation <code>x = x + 1</code> \u00e0 l\u2019int\u00e9rieur de la fonction cr\u00e9erait une nouvelle variable locale <code>x</code>, et la variable globale <code>x</code> ne serait pas modifi\u00e9e, comme le montre ce code.</li> </ul> <pre><code>x = 10  # Variable globale\n\ndef incrementer_x():\n    x = x + 1  \n    # La variable globale est lue, python lui additionne 1 et cr\u00e9\u00e9 une variable LOCALE du me\u00eame nom. La valeur de la varaible GLOBALE n'est pas modifi\u00e9e.\n\nprint(\"Avant :\", x)\nincrementer_x()\nprint(\"Apr\u00e8s :\", x)\n</code></pre>"},{"location":"premi%C3%A8re/prog/scope/#4-bonnes-pratiques","title":"4. Bonnes pratiques","text":"<p>En r\u00e9alit\u00e9, vous d\u00e9couvrirez des mani\u00e8res de programmer qui nous permettent de ne pas avoir recours \u00e0 des variables globales. Si elles paraissent pratiques de prime abord, elles complexifient le code \u00e0 mesure qu'il prend en taille.</p>"},{"location":"premi%C3%A8re/prog/scope/#5-petits-exemples","title":"5. Petits exemples","text":""},{"location":"premi%C3%A8re/prog/scope/#exemple-1-lecture-dune-variable-globale-sans-la-modifier","title":"Exemple 1 : Lecture d\u2019une variable globale sans la modifier","text":"<pre><code>titre = \"Introduction \u00e0 Python\"\n\ndef afficher_titre():\n    print(\"Titre :\", titre)\n\nafficher_titre()  # Utilise la variable globale titre\n</code></pre>"},{"location":"premi%C3%A8re/prog/scope/#exemple-2-conflit-de-nommage-globallocal","title":"Exemple 2 : Conflit de nommage global/local","text":"<pre><code>compteur = 0\n\ndef incrementer_compteur():\n    compteur = 5  # Cette affectation cr\u00e9e une variable locale \"compteur\"\n    print(\"Dans la fonction, compteur =\", compteur)\n\nincrementer_compteur()\nprint(\"Global, compteur =\", compteur)  # Valeur inchang\u00e9e (0)\n</code></pre> <p>Ici, la variable globale <code>compteur</code> n\u2019est pas modifi\u00e9e par la fonction, car Python a cr\u00e9\u00e9 une variable locale du m\u00eame nom.</p>"},{"location":"premi%C3%A8re/prog/scope/#6-exercices-pratiques","title":"6. Exercices pratiques","text":""},{"location":"premi%C3%A8re/prog/scope/#exercice-1","title":"Exercice 1","text":"<pre><code># 1. D\u00e9clare une variable globale \"stock\" (par exemple stock = 10).\n# 2. \u00c9cris une fonction \"acheter_un_produit()\" qui r\u00e9duit la variable \"stock\" de 1\n#    et affiche \"Achat effectu\u00e9, stock = &lt;valeur&gt;\".\n# 3. Appelle la fonction plusieurs fois et v\u00e9rifie la valeur de \"stock\".\n\n# Compl\u00e8te le code ci-dessous :\nstock = ...\n\ndef acheter_un_produit():\n    # D\u00e9clare si besoin la variable globale\n    # Diminue stock de 1 et affiche la valeur\n    ...\n\nacheter_un_produit()\nacheter_un_produit()\nprint(stock)  # Quelle est la valeur ?\n</code></pre>"},{"location":"premi%C3%A8re/prog/scope/#exercice-2","title":"Exercice 2","text":"<pre><code># \u00c9cris un programme avec :\n# - Une variable globale \"message\" = \"Bonjour tout le monde !\"\n# - Une fonction \"afficher_local()\" qui d\u00e9finit une variable locale \"message\" = \"Salut !\"\n#   et l'affiche, puis affiche la variable globale \"message\".\n#\n# Ex\u00e9cute la fonction et analyse la sortie. Quelles valeurs sont affich\u00e9es ?\n# Essaie ensuite d'utiliser la variable locale en dehors de la fonction : que se passe-t-il ?\n\nmessage = ...\n\ndef afficher_local():\n    message = ...\n    print(\"message local =\", message)\n    # Comment acc\u00e9der \u00e0 la variable globale \"message\" ? Pistes :\n    # 1) Ne pas faire 'message = ...' (car \u00e7a cache la globale)\n    # 2) Ou utiliser un autre nom\n    # 3) Ou le mot-cl\u00e9 'global' si tu veux vraiment la modifier\n\n    print(\"message global =\", ...)\n\nafficher_local()\n# print(message local) # Qu'arrive-t-il si on essaie d'afficher la variable locale ?\n</code></pre>"},{"location":"premi%C3%A8re/prog/scope/#7-synthese","title":"7. Synth\u00e8se","text":"<ul> <li>Les variables locales existent uniquement dans le bloc (souvent une fonction) o\u00f9 elles sont d\u00e9finies.  </li> <li>Les variables globales sont accessibles dans tout le module, mais sont seulement modifiables dans une fonction si on utilise le mot-cl\u00e9 <code>global</code>.</li> </ul>"},{"location":"premi%C3%A8re/prog/scope/#pour-aller-plus-loin","title":"Pour aller plus loin","text":"<p>Le m\u00e9canisme de port\u00e9e des variables est simple en python, mais il pr\u00e9figure des m\u00e9canismes plus complexes,  comme dans l'exemple suivant en rust, o\u00f9 on se rend compte que m\u00eame \u00e0 l'int\u00e9rieur d'une fonction, il faut tenir compte de la port\u00e9e des variables.</p> <pre><code>fn main() {\n    let x = 10;\n    println!(\"Au d\u00e9but, x = {}\", x);\n\n    for i in 0..3 {\n        // \u00c0 chaque it\u00e9ration de la boucle, on d\u00e9finit une nouvelle variable \"x\" propre au scope de la boucle.\n        let x = x + i;\n        println!(\"It\u00e9ration {}, x = {}\", i, x);\n    }\n\n    // Apr\u00e8s la boucle, la variable \"x\" est toujours celle d\u00e9finie hors de la boucle\n    println!(\"Apr\u00e8s la boucle, x = {}\", x);\n}\n</code></pre> <p>L'affichage du code pr\u00e9c\u00e9dent est: </p> <pre><code>Au d\u00e9but, x = 10\nIt\u00e9ration 0, x = 10\nIt\u00e9ration 1, x = 11\nIt\u00e9ration 2, x = 12\nApr\u00e8s la boucle, x = 10\n</code></pre> <p>En Rust, pour simuler le comportement de python avec les variables locales et globales, on est oblig\u00e9 de d\u00e9clarer explicitement qu'on veut \u00e9crire du code non s\u00e9curis\u00e9.</p> <pre><code>static mut COMPTEUR: i32 = 0;\n\nfn incrementer() {\n    unsafe {\n        COMPTEUR += 1;\n        println!(\"Compteur global : {}\", COMPTEUR);\n    }\n}\n\nfn main() {\n    incrementer(); // 1\n    incrementer(); // 2\n\n    // En dehors de la zone unsafe, on ne peut pas acc\u00e9der directement \u00e0 GLOBAL_COUNTER\n}\n</code></pre> <p>Fun Fact</p> <p>Diverses agences (notamment la NSA, en novembre 2022) ont publi\u00e9 des recommandations visant \u00e0 favoriser l\u2019usage de langages \u201cmemory-safe\u201d,  (comme Rust) lorsqu\u2019un nouveau projet s\u2019y pr\u00eate. En d\u2019autres termes, des organes gouvernementaux am\u00e9ricains encouragent plus fortement l\u2019usage de langages offrant une meilleure s\u00fbret\u00e9 m\u00e9moire, car de nombreuses failles proviennent de bugs de gestion de m\u00e9moire (buffer overflows, use-after-free, etc.) dans des logiciels \u00e9crits en C ou C++.</p> <p>Microsoft a r\u00e9guli\u00e8rement communiqu\u00e9 qu\u2019environ 70\u202f% des failles critiques de s\u00e9curit\u00e9 recens\u00e9es dans ses produits r\u00e9sultaient de probl\u00e8mes  de gestion de m\u00e9moire. Google a indiqu\u00e9 des chiffres similaires pour certaines de ses applications critiques (Chrome, par exemple), soulignant  que 70\u202f% des vuln\u00e9rabilit\u00e9s s\u00e9rieuses venaient \u00e9galement de cette cat\u00e9gorie.</p> <p>Si vous voulez continuer en informatique, il sera important de comprendre C, car il est proche du processeur. Cependant, il sera important de ne pas l'utiliser et de privil\u00e9gier des langages memory safe comme Rust (tout aussi performant). Quelle que soit la performance d'un d\u00e9veloppeur en langage C, il peut toujours faire une \u00e9tourderie. </p> <p>Il faut bien comprendre qu'une mauvaise gestion de m\u00e9moire, m\u00eame ponctuelle, ne provoque pas d'erreur dans le code,  mais elle provoque des failles critiques qui permettent \u00e0 une personne malveillante de prendre le contr\u00f4le du syst\u00e8me entier.</p> <p>Loi de Murphy: \"La probabilit\u00e9 que quelque chose arrive est inversement proportionnelle \u00e0 sa d\u00e9sirabilit\u00e9\".</p>"},{"location":"premi%C3%A8re/prog/strings/","title":"Cha\u00eenes de caract\u00e8res (str)","text":"<p>Les cha\u00eenes de caract\u00e8res (strings, ou <code>str</code>) en Python sont des s\u00e9quences immuables de caract\u00e8res utilis\u00e9es pour manipuler du texte.</p>"},{"location":"premi%C3%A8re/prog/strings/#creation-dune-chaine","title":"Cr\u00e9ation d'une cha\u00eene","text":"<ul> <li>Les cha\u00eenes peuvent \u00eatre entour\u00e9es de guillemets simples (<code>'</code>) ou doubles (<code>\"</code>).   <pre><code>s1 = 'Hello'\ns2 = \"World\"\n</code></pre></li> <li>Pour des cha\u00eenes multi-lignes, utilisez des triples guillemets.   <pre><code>s3 = \"\"\"Ceci\nest une cha\u00eene multi-lignes.\"\"\"\n</code></pre></li> </ul>"},{"location":"premi%C3%A8re/prog/strings/#proprietes-principales","title":"Propri\u00e9t\u00e9s principales","text":"<ul> <li>Immutabilit\u00e9 : Une cha\u00eene ne peut pas \u00eatre modifi\u00e9e apr\u00e8s sa cr\u00e9ation. Toute op\u00e9ration qui semble \"modifier\" une cha\u00eene retourne une nouvelle cha\u00eene.</li> <li>Indexation : Les caract\u00e8res sont accessibles via leur position (index).   <pre><code>s = \"Python\"\nprint(s[0])   # 'P'\nprint(s[2])   # 't'\nprint(s[-1])  # 'n' (index n\u00e9gatif pour acc\u00e9der \u00e0 la fin)\nprint(s[12])  # IndexError\n</code></pre></li> </ul>"},{"location":"premi%C3%A8re/prog/strings/#operations-courantes","title":"Op\u00e9rations courantes","text":"<ol> <li> <p>Concat\u00e9nation et r\u00e9p\u00e9tition :    <pre><code>s1 = \"Hello\"\ns2 = \"World\"\nprint(s1 + \" \" + s2)  # 'Hello World'\nprint(s1 * 3)  # 'HelloHelloHello'\n</code></pre></p> </li> <li> <p>Slicing (super pratique) : Extraire une sous-cha\u00eene.    <pre><code>s = \"Python\"\nprint(s[1:4])  # 'yth' (index 1 \u00e0 3)\nprint(s[:3])   # 'Pyt' (d\u00e9but \u00e0 index 2)\nprint(s[3:])   # 'hon' (index 3 \u00e0 la fin)\n</code></pre></p> </li> <li> <p>Longueur :    <pre><code>print(len(\"Hello\"))  # 5\n</code></pre></p> </li> <li> <p>Appartenance :    <pre><code>print('P' in \"Python\")  # True\nprint('z' not in \"Python\")  # True\n</code></pre></p> </li> </ol>"},{"location":"premi%C3%A8re/prog/strings/#formattage-de-chaines-avec-des-f-strings","title":"Formattage de cha\u00eenes avec des <code>f-strings</code>","text":"<pre><code>name = \"Alice\"\nage = 25\nprint(f\"Je m'appelle {name} et j'ai {age} ans.\")  # 'Je m'appelle Alice et j'ai 25 ans.'\n</code></pre>"},{"location":"premi%C3%A8re/prog/strings/#quelques-methodes-utiles-specifiques-aux-str-ne-pas-apprendre-par-coeur","title":"Quelques m\u00e9thodes utiles sp\u00e9cifiques aux str (ne pas apprendre par coeur)","text":"<p>Les cha\u00eenes disposent de nombreuses m\u00e9thodes int\u00e9gr\u00e9es utiles comme par exemple:    </p> <ul> <li> <p>Manipulation : <pre><code>s = \"  Python  \"\nprint(s.lower())  # '  python  '\nprint(s.upper())  # '  PYTHON  '\nprint(s.strip())  # 'Python' (supprime les espaces)\nprint(s.replace(\"Py\", \"My\"))  # '  Mython  '\n</code></pre></p> </li> <li> <p>Test de contenu :   <pre><code>s = \"123\"\nprint(s.isdigit())  # True\nprint(\"abc\".isalpha())  # True\nprint(\"abc123\".isalnum())  # True\n</code></pre></p> </li> </ul>"},{"location":"premi%C3%A8re/reseau/bit-alterne/","title":"Le protocole du bit altern\u00e9","text":"<p>Comme nous l'avons vu pr\u00e9c\u00e9demment, la couche 3 permet de couper les trames en paquets avant d'\u00eatre envoy\u00e9e. Ces paquets seront reconstitu\u00e9s ensuite par le r\u00e9cepteur.</p> <p>Voyons comment peut se d\u00e9rouler na\u00efvement un transport dans un monde parfait.</p> <p>Nous repr\u00e9sentons l'\u00e9metteur ainsi que le r\u00e9cepteur \u00e0 l'aide d'un automate.</p> <p>Ici, l'\u00e9metteur n'a qu'un \u00e9tat, l'\u00e9tat 0. D\u00e8s qu'il re\u00e7oit unn message, il l'envoie. De m\u00eame, le r\u00e9cepteur n'a qu'un \u00e9tat, l'\u00e9tat 0. Il attend en permanence un message. Ces diagrammes n'incluent volontairement pas ce qu'on fait des messages re\u00e7us.</p> <p>\\(m\\) d\u00e9signe un message quelconque. \\(!m\\) vaut dire \"envoyer m\".</p> <pre><code>sequenceDiagram\n    participant Emetteur\n    participant Recepteur\n\n    Emetteur-&gt;&gt;Recepteur: M1\n    Emetteur-&gt;&gt;Recepteur: M2\n    Emetteur-&gt;&gt;Recepteur: M3\n    Note over Recepteur: Les messages sont re\u00e7us les uns apr\u00e8s les autres</code></pre> <p>Cependant, de multiples raisons peuvent faire su'un message peut \u00eatre perdu</p> <p>Comment les messages peuvent-ils se perdre?</p> <ol> <li> <p>Perte Physique : Dans un r\u00e9seau, les donn\u00e9es sont transmises via des ondes radio, des fils \u00e9lectriques, ou des fibres optiques. Des perturbations physiques peuvent provoquer une perte :</p> </li> <li> <p>Interf\u00e9rences : Dans une connexion sans fil, des interf\u00e9rences (par ex., un four \u00e0 micro-ondes ou d'autres r\u00e9seaux Wi-Fi) peuvent corrompre les donn\u00e9es. Le bruit \u00e9lectromagn\u00e9tique peut affecter les c\u00e2bles ou les signaux optiques, surtout sur de longues distances.</p> </li> <li> <p>D\u00e9faillance mat\u00e9rielle : Une carte r\u00e9seau d\u00e9fectueuse ou un routeur mal configur\u00e9 peut ne pas transmettre correctement les paquets.</p> </li> <li> <p>Saturation ou Congestion du R\u00e9seau: Si une liaison r\u00e9seau est surcharg\u00e9e : En cas de saturatin d'un routeur, les paquets exc\u00e9dentaires sount souvent abandonn\u00e9s.</p> </li> </ol> <p>Cette liste est non-exhaustive</p> <p>En cas de probl\u00e8me de communication, on pourrait se retrouver dans cette situation:</p> <pre><code>sequenceDiagram\n    participant Emetteur\n    participant Obstacle\n    participant Recepteur    \n\n    Emetteur-&gt;&gt;Recepteur: M1    \n    Emetteur-&gt;&gt;Obstacle: M2 \n    Emetteur-&gt;&gt;Recepteur: M3\n    Note over Recepteur: Le r\u00e9cepteur n'a re\u00e7u &lt;br&gt;que les paquets M1 et M3</code></pre> <p>Il faut trouver une solution afin de garantir la fiabilit\u00e9 de la communication. Pour ce fair on introduit les ACK (acknowledgement). Ce sont des messages envoy\u00e9s par le r\u00e9ceptuer \u00e0 l'\u00e9metteur afin qu'il sache que le message est bien arriv\u00e9.</p> <pre><code>sequenceDiagram\n    participant Emetteur\n    participant R\u00e9cepteur    \n\n    Emetteur-&gt;&gt;R\u00e9cepteur: M1    \n    R\u00e9cepteur-&gt;&gt;Emetteur: ACK1    \n    Emetteur-&gt;&gt;R\u00e9cepteur: M2 \n    R\u00e9cepteur-&gt;&gt;Emetteur: ACK2 \n    Emetteur-&gt;&gt;R\u00e9cepteur: M3\n    R\u00e9cepteur-&gt;&gt;Emetteur: ACK3    </code></pre> <p>En cas d'obstacle, l'\u00e9metteur ne re\u00e7oit pas l'ACK et renvoie le message.</p> <pre><code>sequenceDiagram\n    participant Emetteur\n    participant Obstacle\n    participant R\u00e9cepteur    \n\n    Emetteur-&gt;&gt;R\u00e9cepteur: M1    \n    R\u00e9cepteur-&gt;&gt;Emetteur: ACK1    \n    Emetteur-&gt;&gt;Obstacle: M2\n    note over Emetteur: R\u00e9cepteur ne re\u00e7oit pas l'ACK. &lt;br&gt;Il renvoie le message \n    Emetteur-&gt;&gt;R\u00e9cepteur: M2\n    R\u00e9cepteur-&gt;&gt;Emetteur: ACK2</code></pre> <p>Voil\u00e0 qui semble r\u00e9soudre notre probl\u00e8me, mais... Si jamais c'est l'ACK qui se perd, que se passe-t-il?</p> <pre><code>sequenceDiagram\n    participant Emetteur\n    participant Obstacle\n    participant R\u00e9cepteur\n\n    Emetteur-&gt;&gt;R\u00e9cepteur: M1    \n    R\u00e9cepteur-&gt;&gt;Emetteur: ACK1    \n    Emetteur-&gt;&gt;R\u00e9cepteur: M2\n    R\u00e9cepteur-&gt;&gt;Obstacle: ACK1    \n    note over Emetteur: R\u00e9cepteur ne re\u00e7oit pas l'ACK. &lt;br&gt;Il renvoie le message\n    Emetteur-&gt;&gt;R\u00e9cepteur: M2\n    R\u00e9cepteur-&gt;&gt;Emetteur: ACK2\n    note over R\u00e9cepteur: R\u00e9cepteur a re\u00e7u 2 fois M2!</code></pre> <p>Et c'est \u00e0 ce moment pr\u00e9cis que vient \u00e0 notre rescousse le protocole du bit altern\u00e9. Ne jetons pas le b\u00e9b\u00e9 avec l'eau du bain, gardons les ACK, mais ajoutons-y une petite subtilit\u00e9: Les messages, ainsi que les ACK correspondants, porteront un bit qui changera \u00e0 chaque fois qu'un nouveau message est envoy\u00e9.</p> <p></p>"},{"location":"projets/intro-pyxel/","title":"Introduction \u00e0 pyxel - POO","text":"<p>L'objectif est de cr\u00e9er une classe Pixel capable de se dessiner et de se d\u00e9placer en fonction de son vecteur directionnel (dx, dy). Nous utiliserons \u00e9galement une classe App pour g\u00e9rer l'application et les \u00e9v\u00e9nements utilisateur, permettant de d\u00e9placer le pixel.</p> <pre><code>import pyxel as px\n\nclass Pixel:\n    def __init__(self, x:float, y: float, dx: float=0, dy:float=0, color:float=0):\n        \"\"\"\n        Initialise un pixel avec une position (x, y), un vecteur directeur (dx, dy) et une couleur.\n        \"\"\"\n        self.x = x\n        self.y = y\n        self.dx = dx\n        self.dy = dy\n        self.color = color\n\n    def update(self):\n        \"\"\"\n        Le pyxel se d\u00e9place toujours de son vecteur directeur\n        \"\"\"\n        pass\n\n\n    def draw(self):\n        \"\"\"\n        Dessine le pixel sur l'\u00e9cran.\n        \"\"\"\n        px.pset(int(self.x), int(self.y), self.color)\n\n\nclass Jeu:\n    def __init__(self):\n        \"\"\"\n        Un jeu g\u00e8re un Pixel.\n        \"\"\"\n        self.pixel = Pixel(px.width/2, px.height/2)\n\n    def update(self):\n        \"\"\"\n        G\u00e8re les \u00e9v\u00e9nements utilisateur pour d\u00e9placer le pixel.\n        \"\"\"\n        # Modification du vecteur directeur selon les touches fl\u00e9ch\u00e9es\n        if px.btn(px.KEY_RIGHT):\n            self.pixel.dx += 1\n        elif px.btn(px.KEY_LEFT):\n            self.pixel.dx -= 1\n        if px.btn(px.KEY_DOWN):\n            self.pixel.dy += 1\n        elif px.btn(px.KEY_UP):\n            self.pixel.dy -= 1\n\n        # Le jeu demande au pixel de se mettre \u00e0 jour\n        self.pixel.update()\n\n    def draw(self):\n        \"\"\"\n        Efface l'\u00e9cran et dessine le pixel.\n        \"\"\"\n        # Remplir l'\u00e9cran en noir\n        px.cls(0)\n        # Le jeu demande au pixel de se dessiner\n        self.pixel.draw()\n\n\nif __name__ == \"__main__\":\n    # D\u00e9marre l'application\n    pyxel.init(30, 30, title=\"Pixel en Mouvement\", fps = 10)\n    appli = Jeu()\n    pyxel.run(appli.update, appli.draw)\n</code></pre> <p>Exercices de base</p> <ol> <li>Compl\u00e9tez la m\u00e9thode update de la classe Pixel (2 lignes). Testez</li> <li>Modifiez le framerate. Testez</li> <li>Remplacez le 3\u00e8me if de la m\u00e9thode update par un elif. Analysez la diff\u00e9rence. R\u00e9tablissez le if</li> <li>Modifiez la m\u00e9thode update pour que le pixel s'arr\u00eate lorsqu'on l\u00e2che les touches.</li> <li>Le jeu g\u00e8re maintenant un groupe de Pixels. A chaque fois que l'utilisateur appuie sur la barre espace, un nouveau Pixel spawn al\u00e9atoirement avec une couleur al\u00e9atoire. Lorsque l'utilisateur utilise les fl\u00e8ches, tous les pixels bougent dans la direction donn\u00e9e. Dans Jeu:<ul> <li>Modifier la m\u00e9thode <code>__init__</code></li> <li>Ecrire une m\u00e9thode <code>spawn_pixel(self)</code></li> <li>modifier les m\u00e9thodes <code>update</code> et <code>draw</code> en cons\u00e9quence.</li> </ul> </li> <li>Un pixel ne doit pas bouger s'il d\u00e9passe de l'\u00e9cran.<ul> <li>Modifiez la classe Pixel pour tenir compte de cette informations. </li> </ul> </li> <li>Espace torique: Un pixel peut d\u00e9passer un bord mais il r\u00e9appara\u00eet au bord oppos\u00e9 (ce qui fait de l'espace de jeu un espace sans bord)<ul> <li>Modifiez la classe Pixel pour tenir compte de cette informations.</li> </ul> </li> <li>Lorsqu'on appuie sur la touche \"p\", un pixel al\u00e9atoire est supprim\u00e9.</li> </ol> <p>Remplacer un pixel par un sprite</p> <ol> <li>T\u00e9l\u00e9chargez le fichier 1.pyxres sur le site de la nuit du code<ul> <li>Il s'agit d'un fichier contenant des ressources visuelles et sonores.</li> <li>Placez le dans le m\u00eame r\u00e9pertoire que votre fichier python.</li> <li>Pyxel vient avec un \u00e9diteur de ressources. Pour visualiser les ressources du jeu, ex\u00e9cutez la commande suivante dans un terminal:     <code>pyxel edit 2.pyxres</code></li> <li>N'h\u00e9sitez pas \u00e0 bidouiller, vous ne pouvez rien casser, au pire vous pourrez ret\u00e9l\u00e9charger le fichier.</li> </ul> </li> <li>A la place d'un simple pixel, on veut maintenant utiliser un sprite<ul> <li>Pour le faire, il faut d'abord charger ce fichier dans le code juste avant de d\u00e9marrer le jeu:     <code>px.load(\"2.pyxres\")</code></li> <li>Ensuite il faut dessiner le sprite que vous aurez choisi au lieu de simplement remplir un pixel. Il n'y a qu'une ligne de code \u00e0 modifier. Je vous laisse la trouver en explorant la documentation de pyxel.</li> </ul> </li> </ol>"},{"location":"projets/jeudelavie/","title":"The Game Of Life","text":"<p>Un automate cellulaire est constitu\u00e9 d\u2019une grille r\u00e9guli\u00e8re de cellules \u00e9tant chacune dans un \u00e9tat (parmi un nombre fini d\u2019\u00e9tats possibles), et d\u2019une r\u00e8gle d\u2019\u00e9volution locale et synchrone : \u00e0 chaque \u00e9tape de temps (discret), l\u2019\u00e9tat de chaque cellule est mis \u00e0 jour en fonction de l\u2019\u00e9tat de ses voisines (et du sien).</p> <p>Pourquoi?</p> <p>Pourquoi \u00e7a int\u00e9resse certains scientifiques? Parce qu'ils cherchent \u00e0 savoir comment des structures parfois tr\u00e8s complexes \u00e9mergent d'un syst\u00e8me de r\u00e8gles extr\u00eamement simples. On dit qu'ils travaillent sur l'\u00e9mergence. Ca en int\u00e9resse d'autres juste parce qu'ils trouvent \u00e7a fascinant.</p> <p>Le math\u00e9maticien John Conway a d\u00e9fini en 1970 un automate cellulaire particulier qu\u2019il a nomm\u00e9 \u00ab jeu de la vie \u00bb. </p> <p>Il s\u2019agit d\u2019un automate dont la grille est une grille bi-dimensionnelle infinie, et chaque cellule peut prendre deux \u00e9tats 0 ou 1 (qu\u2019on appelle habituellement \u00ab \u00e9tat mort \u00bb et \u00ab \u00e9tat vivant \u00bb). Les voisines d\u2019une cellule sont les huit cellules qui l\u2019entourent.</p> <p>Qui de mieux que John Conway pour vous pr\u00e9senter son jeu:</p> <p>Tip</p> <ul> <li>Une cellule vivante au temps t meurt au temps t + 1 si elle n\u2019est entour\u00e9e que de 0 ou 1 cellule vivante (isolement), ou si elle est entour\u00e9e d\u2019au moins 4 cellules vivantes (surpopulation). Elle survit dans les autres cas.</li> <li>Une cellule morte au temps t devient vivante au temps t + 1 si elle est entour\u00e9e d\u2019exactement 3 cellules vivantes (naissance). Elle reste morte sinon.</li> </ul> <p>Ces r\u00e8gles sont illustr\u00e9es par la figure suivante.</p> <p></p>"},{"location":"projets/jeudelavie/#simulation-du-jeu-de-la-vie","title":"Simulation du jeu de la vie","text":"<p>Pour pouvoir repr\u00e9senter de mani\u00e8re finie le jeu de la vie, on modifie son comportement pour en faire un tore</p> <p>Au lieu d\u2019\u00eatre une grille infinie, c\u2019est une grille k \u00d7 k dont la colonne de gauche est voisine de la colonne de droite, et la ligne du haut voisine de la ligne du bas. De cette mani\u00e8re, la grille n\u2019a pas de bord et toute cellule poss\u00e8de exactement 8 voisines. On peut repr\u00e9senter une grille par une matrice (tableau bi-dimensionnel) de taille \\(k\u00d7k\\), o\u00f9 0 repr\u00e9sente l\u2019\u00e9tat mort et 1 l\u2019\u00e9tat vivant. La repr\u00e9sentation de la grille en Python sera une liste de listes. La num\u00e9rotation des lignes et des colonnes de la matrice ira de 0 \u00e0 (k \u2212 1).</p> <p>Repr\u00e9sentation de la grille</p> <ol> <li> <p>On consid\u00e8re une grille de taille 4. Donner la repr\u00e9sentation matricielle des deux configurations suivantes, et donner les configurations obtenues au temps t + 1 et t + 2 pour chacune. Que remarque-t-on ?</p> <p></p> </li> <li> <p>Dans la grille de taille 4, quelles sont les coordonn\u00e9es des cellules voisines de (1, 1) ? Et celles des voisines de (0, 3) ?</p> </li> <li> <p>Compl\u00e9tez les fonctions creer_grille et draw afin d'afficher une grille.</p> <pre><code>import pyxel as px\n\nVIVANTE = 1\nMORTE = 0\nTAILLE = 5\n\ntype grille = list[list[int]]\n\ndef creer_grille(k: int) -&gt; grille:\n    '''Renvoie une grille de taille k construite al\u00e9atoirement'''\n    pass\n\ndef update():\n    '''Remplace la grille par la prochaine grille'''\n    global g\n    pass\n\ndef draw():\n    '''Dessine la grille'''\n    global g\n    pass\n\npx.init(TAILLE, TAILLE, title=\"Game Of Life\")\ng = creer_grille(TAILLE)\npx.run(update, draw)\n</code></pre> </li> </ol> <p>\u00c9volution de la grille</p> <p>L'objectif ici est de ne pas s'attaquer directement \u00e0 la cr\u00e9ation de la prochaine grille, mais de se constituer des outils \u00e9l\u00e9mentaires qui vont nous permettre progressivement d'atteindre notre but.</p> <ol> <li>Donnez la matrice des nombres de voisines de la grille donn\u00e9e dans le code. Donner l'\u00e9tat suivant de la grille donn\u00e9e dans le code. Cette grille pourra vous servir de test pour vos fonctions.</li> <li>Ecrire une fonction <code>est_vivante(i: int, j: int, g: grille) -&gt; bool</code></li> <li>\u00c9crire les fonctions <code>ind_suiv</code> et <code>ind_prec</code> prenant en param\u00e8tre un indice de ligne ou de colonne et renvoient l\u2019indice de la ligne ou colonne suivante (resp. pr\u00e9c\u00e9dente) dans la grille. Attention, il faut tenir compte du caract\u00e8re torique de la grille.</li> <li> <p>\u00c9crire une fonction <code>nb_voisines_vivantes(i: int, j: int, g: grille)-&gt; int</code> qui prend en entr\u00e9e une grille et une cellule de la grille repr\u00e9sent\u00e9e par ses coordonn\u00e9es \\((i, j)\\), et renvoie le nombre de cellules vivantes autour de la cellule \\((i,j)\\).</p> </li> <li> <p>\u00c9crire une fonction <code>etat_suivant(i: int, j: int, g: grille) -&gt; int</code> qui renvoie le prochain \u00e9tat de la cellule \\((i,j)\\) en fonction des r\u00e8gles du jeu.</p> </li> <li> <p>\u00c9crire une fonction <code>grille_suivante(g:grille) -&gt; grille</code> qui prend en entr\u00e9e une grille et renvoie la prochaine grille \u00e0 afficher. Cette fonction devra faire une ligne (en compr\u00e9hension).</p> </li> <li> <p>Il ne vous reste plus maintenant qu'\u00e0 \u00e9crire une seule ligne de code pour voir se d\u00e9rouler sous vos yeux \u00e9bahis, le jeu de la vie.</p> </li> </ol> <p>Calculabilit\u00e9</p> <p>Le jeu de la vie est Turing-Complet. Tout algorithme peut y \u00eatre impl\u00e9ment\u00e9 (\u00e7a peut se d\u00e9montrer par exemple en exhibant en son sein une porte ET et une porte NON). Par cons\u00e9quent, il est impossible de pr\u00e9dire le comportement asymptotique de toute grille donn\u00e9e. </p> <p></p> <p></p>"},{"location":"projets/mastermind/","title":"MasterMind","text":""},{"location":"projets/mastermind/#prelude","title":"Pr\u00e9lude","text":"<p>Se familiariser avec les r\u00e8gles du mastermind.</p>"},{"location":"projets/mastermind/#modelisation","title":"Mod\u00e9lisation","text":"<p>On utilise une cha\u00eene de caract\u00e8res pour repr\u00e9senter les couleurs \u00e0 deviner. Sur l'image suivante, \"OVJB\" est la s\u00e9quence de couleurs \u00e0 trouver.</p> <p></p> <p>Question</p> <p>Ecrire une fonction <code>genere_sequence(n: int, couleurs: str) -&gt; str</code> qui renvoie une s\u00e9quence de n couleurs al\u00e9atoirement choisies parmi les couleurs contenues dans la cha\u00eene de caract\u00e8res couleurs.</p> <p>Question</p> <p>Ecrire une fonction <code>affiche_sequence(s: str)</code> qui affiche la s\u00e9quence s dans le terminal. On pourra utiliser le module colorama afin de permettre un affichage color\u00e9 dans le terminal.</p> <p>Question</p> <p>Ecrire une fonction <code>compare_sequences(s1: str, s2: str) -&gt; str</code>. Cette fonction renvoie une str contenant le nombre de couleurs correctement plac\u00e9es et le nombre de couleurs mal plac\u00e9es. Par exemple, si <code>s1 = \"OVJB\"</code> et que <code>s2 = \"VOJA\"</code> alors la fonction renvoie \"21\", \u00e0 savoir 2 mal plac\u00e9s et 1 correctement plac\u00e9.</p> <p>Question</p> <p>Ecrire une fonction <code>tour_de_jeu(s: str)</code> qui demande une s\u00e9quence au joueur pour la s\u00e9quence \u00e0 deviner <code>s</code> et qui renvoie la str renvoy\u00e9e par <code>compare_sequences</code>.</p> <p>Question</p> <p>En vous inspirant de la boucle principale du pendu, compl\u00e9tez le jeu de mastermind.</p>"},{"location":"projets/musique/","title":"Cr\u00e9er un clavier musical","text":""},{"location":"projets/musique/#objectif","title":"Objectif:","text":"<ul> <li>Apprendre \u00e0 g\u00e9rer les \u00e9v\u00e8nements utilisateurs pour construire une interface homme/machine.</li> <li>Utiliser des modules.</li> <li>Utiliser des variables globales. </li> <li>Utiliser des dictionnaires.</li> <li>D\u00e9couvrir que m\u00eame la musique a un standard de repr\u00e9sentation informatique mondial, le MIDI.</li> </ul>"},{"location":"projets/musique/#un-peu-de-theorie","title":"Un peu de th\u00e9orie","text":"<p>Kurt G\u00f6del a montr\u00e9 qu\u2019il est possible d\u2019associer \u00e0 toute formule, \u00e0 tout \u00e9nonc\u00e9, voire \u00e0 toute d\u00e9monstration, un nombre entier unique. L\u2019argument repose sur le fait que tout symbole et toute suite de symboles peuvent \u00eatre encod\u00e9s num\u00e9riquement (par exemple sous forme binaire), permettant ainsi de \u00ab\u202ftraduire\u202f\u00bb n\u2019importe quel objet formel en un entier.</p> <p>En informatique, tout objet manipulable (texte, image, son, vid\u00e9o, programme, etc.) est de fait une suite finie de bits.</p> <p>Or, une suite finie de bits peut \u00eatre vue comme la repr\u00e9sentation binaire d\u2019un entier naturel.</p> <p>Tout objet formel est repr\u00e9sentable par un entier naturel.  C'est un principe fondamental et omnipr\u00e9sent de la science informatique.</p>"},{"location":"projets/musique/#le-midi","title":"Le MIDI","text":"<p>La norme MIDI (Musical Instrument Digital Interface) est un protocole de communication entre instruments \u00e9lectroniques, ordinateurs, logiciels de musique, etc.</p> <p>Au lieu d\u2019envoyer une repr\u00e9sentationn d'ondes sonores, les instruments MIDI envoient des messages (ex.\u202f: \u00ab\u202fNote ON\u202f\u00bb, \u00ab\u202fNote OFF\u202f\u00bb, \u00ab\u202fProgram Change\u202f\u00bb, etc.) qui d\u00e9crivent quelle note jouer, \u00e0 quel moment, avec quelle intensit\u00e9, et une kyrielle d'autres param\u00e8tres encore.</p> <p>Par exemple, un message \u00ab\u202fNote ON\u202f\u00bb se compose de trois octets :</p> <ul> <li>L\u2019identifiant du message et du canal (un nombre),</li> <li>Le num\u00e9ro de la note (un nombre, de 0 \u00e0 127),</li> <li>La v\u00e9locit\u00e9 (un nombre, de 0 \u00e0 127).</li> </ul> <p>Ainsi, m\u00eame pour d\u00e9crire la dur\u00e9e, la hauteur d\u2019une note ou le changement d\u2019instrument, tout se fait par des nombres (g\u00e9n\u00e9ralement compris entre 0 et 127 dans le MIDI basique)</p> <p>Ces messages seront interpr\u00e9t\u00e9s au final par un synth\u00e9tiseur de sons qui dispose d'une banque de sons, o\u00f9 chaque instrument a \u00e9t\u00e9 \u00e9chantillon\u00e9 pour produire les sons voulus au gr\u00e9 des messages re\u00e7us.</p> <p>Certains instruments disposent d'un synth\u00e9tiseur int\u00e9gr\u00e9. C'est le cas des claviers num\u00e9riques du type clavinova, par exemple, mais le principe est le m\u00eame. Parmis moultes configurations techniques possibles, sur une sc\u00e8ne de concert de haut niveau technique, le musicien qui joue du synth\u00e9tiseur peut n'envoyer que des signaux MIDI \u00e0 la r\u00e9gie. La r\u00e9gie, elle, peut aussi envoyer des messages MIDI \u00e0 son instrument (pour d\u00e9clencher des s\u00e9quences automatiques, changer la configuration \u00e0 la place du musicien), et la g\u00e9n\u00e9ration du son se fait en r\u00e9gie avec ce qu'on appelle un rack de sons. Le musicien peut alors entendre le son produit gr\u00e2ce aux wedges (oreillettes ou haut parleur de sc\u00e8ne). Nous touchons ici \u00e0 ce qui est un m\u00e9tier en soi.</p>"},{"location":"projets/musique/#setup-python","title":"Setup python","text":"<p>Dans votre environnement conda: <pre><code>conda install mido pygame\npip install pynput pyttsx3\n</code></pre></p> <ul> <li> <p>installer pygame permet de s'affranchir de pas mal de configuration MIDI sur l'ordinateur.</p> </li> <li> <p>mido permet \u00e0 python de conna\u00eetre et de donner \u00e0 l'utilisateur la possibilit\u00e9 de manipuler de la musique selon le standard MIDI.</p> </li> <li> <p>pynput sert \u00e0 capturer les \u00e9v\u00e8nements utilisateurs (clavier et souris)</p> </li> <li> <p>pyttsx3 est un module de synth\u00e8se vocale.</p> </li> </ul>"},{"location":"projets/musique/#setup-vscode","title":"Setup VSCode","text":"<p>Mise en place des fichiers: Vous avez \u00e0 disposition 3 fichiers:</p> <ul> <li>evenements.py<ul> <li>Ce fichier contient des fonctions pour \u00e9couter les \u00e9v\u00e8nements du clavier.</li> </ul> </li> <li>midiutils.py<ul> <li>Ce fichier contient des fonctions pour jouer de la musique.</li> </ul> </li> <li>synthese.py<ul> <li>Ce fichier sert \u00e0 faire de la synth\u00e8se de... \ud83e\udd14</li> </ul> </li> </ul> <p>Actions</p> <ul> <li>Cr\u00e9ez un r\u00e9pertoire projet_musique dans votre r\u00e9pertoire NSI</li> <li>Mettez-y les trois fichiers python. Il ne faut pas les modifier</li> <li>Ouvrez le r\u00e9pertoire du projet dans VSCode</li> <li>Cr\u00e9ez-y un fichier clavier.py . Ce qui est demand\u00e9 se fera dans ce fichier.</li> <li>Ouvrez le dans VSCode.</li> </ul>"},{"location":"projets/musique/#code-de-depart","title":"Code de d\u00e9part","text":"<p>Voici le code initial du fichier clavier.py que vous venez de cr\u00e9er. Il ne permet pas encore de produire de la musique, juste de g\u00e9rer les \u00e9v\u00e8nements clavier/souris.</p> <pre><code>import evenements\nimport logging\nfrom logging import info\n\ndef appuie_touche(key: evenements.Key):\n    info(f'Touche {repr(key.char)} appuy\u00e9e')\n\ndef relache_touche(key: evenements.Key):\n    info(f'Touche {key} rel\u00e2ch\u00e9e')\n\ndef click(x: int, y: int, bouton: evenements.Button, etat: bool):\n    if bouton == evenements.Button.left:\n        info(f\"{x=}, {y=}, {bouton=}, {etat=}\")\n    elif bouton == evenements.Button.right:\n        info(\"click droit\")\n    elif bouton == evenements.Button.middle:\n        info(\"molette\")\n\ndef bouge(x,y):\n    # pass veut dire: \"ne rien faire\".\n    pass\n\ndef main():\n    \"\"\" Fonction principale \n    Python reste \u00e0 cette ligne jusqu'\u00e0 la fin du programme.\n    On indique \u00e0 python qu'il faut ex\u00e9cuter:\n    - appuie_touche lorsqu'une touche est appuy\u00e9e\n    - relache_touche lorsqu'une touche est relach\u00e9e\n    - click quand un bouton de souris est cliqu\u00e9e\n    - bouge lorsque la souris est boug\u00e9e.\n    \"\"\"\n    evenements.demarre_listeners(appuie_touche, relache_touche, click, bouge, None)\n\nif __name__ == \"__main__\":\n    logging.basicConfig(level=logging.INFO)\n    #Pour supprimer les infos de log dans la console, vous pouvez utiliser NOTSET \u00e0 la place de INFO.\n    #Pour voir des informations suppl\u00e9mentaires de log dans la console, vous pouvez utiliser DEBUG \u00e0 la place de INFO.\n\n    main()\n</code></pre> <p>Exercices</p> <ul> <li>Trouvez un moyen d'afficher \"click gauche\" lorsqu'on clique sur le bouton gauche de la souris.</li> <li>Trouvez un moyen d'afficher les coordonn\u00e9es de la souris lorsqu'on la bouge.</li> </ul>"},{"location":"projets/musique/#cours","title":"Cours","text":"<p>Modules</p> <p>Quand on <code>import evenements</code>, python va voir s'il existe un fichier qui s'appelle evenements.py dans le r\u00e9pertoire. Oui, on en a mis un. Elle va donc rendre accessible \u00e0 votre programme toutes les fonctions et les variables contenues dedans. Par exemple, maintenant qu'on a import\u00e9 le module evenements, on peut acc\u00e9der \u00e0 sa fonction demarre_listeners en \u00e9crivant <code>evenements.demarre_listeners(....)</code></p> <p>Listeners - programmation \u00e9v\u00e8nementielle</p> <p>Un \u00e9couteur d'\u00e9v\u00e8nement (on dira listener) est une boucle infinie qui v\u00e9rifie qu'un \u00e9v\u00e9nement se produit. Quand l'\u00e9v\u00e9nement \u00e9cout\u00e9 se produit, alors la boucle lance la fonction associ\u00e9e, qu'on appelle un callback. </p> <p>On peut \u00e9couter les \u00e9v\u00e9nements se produisant sur les p\u00e9riph\u00e9riques de l'ordinateur: l'\u00e9cran tactile, la souris, le clavier...</p> <p>L'\u00e9v\u00e9nement peut \u00eatre un clic souris, le mouvement de la souris, une touche du clavier enfonc\u00e9e, rel\u00e2ch\u00e9e, la modification d'un fichier sur le disque dur, le branchement d'un mat\u00e9riel USB...</p> <p>A vous de d\u00e9cider du contenu de vos callback en fonction du comportement que vous** d\u00e9sirez quand un utilisateur d\u00e9clenche un \u00e9v\u00e8nement.</p> <p>Exercice</p> <p>Modifiez le callback appuie_touche pour que, lorsqu'on enfonce la touche \"s\", le programme affiche \"Exercice r\u00e9ussi :)\"</p> <p>A partir de maintenant, vous avez presque tout ce qu'il vous faut pour \u00e9crire une application d'espionnage r\u00e9pandue qu'on appelle un keylogger. Il ne vous manque plus qu'\u00e0 savoir communiquer avec des p\u00e9riph\u00e9riques de stockage ou transfert de donn\u00e9es. MAIS Se rend coupable de l\u2019infraction pr\u00e9vue \u00e0 l\u2019article 323-1 du code p\u00e9nal la personne qui, sachant qu\u2019elle n\u2019y est pas autoris\u00e9e, acc\u00e8de \u00e0 l\u2019insu des victimes, \u00e0 un syst\u00e8me de traitement automatis\u00e9 de donn\u00e9e. La cour de cassation fait explicitement r\u00e9f\u00e9rence \u00e0 des keyloggers dans des arr\u00eats. Les peines sont tr\u00e8s lourdes \u00e9tant donn\u00e9 les cons\u00e9quences (industrialisation de r\u00e9cup\u00e9ration de mots de passes (bancaires...), porte ouverte \u00e0 l'usurpation d'identit\u00e9, atteinte \u00e0 la vie priv\u00e9e... floril\u00e8ge).</p>"},{"location":"projets/musique/#jouer-des-notes-de-musique","title":"Jouer des notes de musique","text":"<p>Le module midiutils comporte des fonctions Midi (Musical Instrument Digital Interface, standard international en musique) qui permettent (entre autre) de jouer des notes de musique, et d'arr\u00eater des notes de musique. Comme lorsqu'on appuie sur une touche de piano (Message MIDI note_on) et qu'on rel\u00e2che une touche de piano (Message MIDI note_off).</p> <p>Les num\u00e9ros MIDI d'instruments sont disponibles en annexe. Les num\u00e9ros MIDI des notes de musique sont en annexe.</p> <p>Vous pouvez, gr\u00e2ce \u00e0 un bool\u00e9en, dire que vous voulez jouer une percussion, auquel cas, les notes \u00e0 jouer/rel\u00e2cher pour les diverses percussions sont aussi en annexe.</p> <p>Adaptation du code</p> <p>Modifiez la fonction main ainsi.</p> <pre><code>def main():\n    midiutils.debut_environnement_sonore()\n    # D\u00e9marrage de la boucle principale\n    evenements.demarre_listeners(appuie_touche, relache_touche, click, bouge, None)\n    # Sortie de la boucle principale\n    midiutils.fin_environnement_sonore()\n</code></pre> <p>Lancez le programme. Il vous demande de choisir quel synth\u00e9tiseur utiliser s'il en existe plusieurs. Choisissez celui de windows le cas \u00e9ch\u00e9ant.</p> <p>Prise en main</p> <p>Apportez des modifications au bon endroit du code pour que:</p> <ul> <li>lorsqu'on appuie sur la touche \"a\", la note LA 440 soit jou\u00e9.</li> <li>lorsqu'on rel\u00e2che la touche \"a\", cette m\u00eame note soit rel\u00e2ch\u00e9e.</li> <li>lorsqu'on appuie sur la touche \"&lt;\", une percussion pr\u00e9cise soit jou\u00e9e (de votre choix).</li> <li>lorsqu'on rel\u00e2che la touche \"&lt;\", cette m\u00eame percussion est rel\u00e2ch\u00e9e.</li> </ul>"},{"location":"projets/musique/#creer-un-clavier-complet","title":"Cr\u00e9er un clavier complet","text":""},{"location":"projets/musique/#objectif_1","title":"Objectif","text":"<p>Transformer votre clavier en instrument.</p>"},{"location":"projets/musique/#specifications-fonctionnelles","title":"Sp\u00e9cifications fonctionnelles","text":"<p>Chaque partie de votre clavier doit \u00eatre s\u00e9par\u00e9 sur ce mode:</p> <p></p> <ul> <li>Les touches bleues servent \u00e0 jouer des percussions.</li> <li>Les touches vertes servent \u00e0 jouer un instrument particulier.</li> <li>2 touches oranges servent \u00e0 changer d'instrument (instrument suivant, instrument pr\u00e9c\u00e9dent).</li> <li>2 touches oranges servent \u00e0 modifier la v\u00e9locit\u00e9 (+, -).</li> <li>Une touche orange sert \u00e0 jouer une m\u00e9lodie stock\u00e9e dans une liste.</li> <li>Le mouvement de la souris sert \u00e0 modifier le pitchwheel</li> </ul> <p>Si vous n'avez pas de clavier avec pav\u00e9 num\u00e9rique chez vous, ne faites pas le bloc rose. Il est cependant int\u00e9ressant \u00e0 faire dans le sens o\u00f9 il va vous obliger \u00e0 fouiller un peu sur la fa\u00e7on dont sont repr\u00e9sent\u00e9es ces touches.</p>"},{"location":"projets/musique/#specifications-techniques","title":"Sp\u00e9cifications techniques","text":"<ul> <li> <p>Vous devrez associer \u00e0 des touches du clavier un num\u00e9ro de note.</p> <ul> <li>A cette fin, vous travaillerez avec des dictionnaires en variables globales, un pour chaque bloc de touches.</li> </ul> </li> <li> <p>Vous aurez un num\u00e9ro d' <code>instrument_courant</code> en variable globale.</p> </li> <li> <p>Utiliser la fonction \"dire\" du module</p> </li> </ul>"},{"location":"projets/musique/#annexes","title":"Annexes","text":""},{"location":"projets/musique/#notes-midi","title":"Notes MIDI","text":""},{"location":"projets/musique/#percussions-midi","title":"Percussions MIDI","text":""},{"location":"projets/musique/#instruments-midi","title":"Instruments MIDI","text":"<p>Attention</p> <p>Les num\u00e9ros que vous voyez sont ceux que les musiciens voient dans leurs outils. Dans le code, la num\u00e9rotation commence \u00e0 0, pas \u00e0 1.</p> Num\u00e9ro Instrument GM (en fran\u00e7ais) 1 Piano acoustique (grand) 2 Piano acoustique brillant 3 Piano \u00e9lectrique (grand) 4 Piano bar (honky-tonk) 5 Piano \u00e9lectrique 1 6 Piano \u00e9lectrique 2 7 Clavecin 8 Clavinet 9 C\u00e9lesta 10 Glockenspiel 11 Bo\u00eete \u00e0 musique 12 Vibraphone 13 Marimba 14 Xylophone 15 Cloches tubulaires 16 Dulcimer 17 Orgue \u00e0 tirettes 18 Orgue percussif 19 Orgue rock 20 Orgue d\u2019\u00e9glise 21 Orgue \u00e0 anche 22 Accord\u00e9on 23 Harmonica 24 Accord\u00e9on tango 25 Guitare acoustique (cordes nylon) 26 Guitare acoustique (cordes acier) 27 Guitare \u00e9lectrique (jazz) 28 Guitare \u00e9lectrique (clean) 29 Guitare \u00e9lectrique (\u00e9touff\u00e9e) 30 Guitare satur\u00e9e (overdriven) 31 Guitare distorsion 32 Harmoniques de guitare 33 Basse acoustique 34 Basse \u00e9lectrique (doigt) 35 Basse \u00e9lectrique (m\u00e9diator) 36 Basse sans frette (fretless) 37 Slap basse 1 38 Slap basse 2 39 Basse synth\u00e9 1 40 Basse synth\u00e9 2 41 Violon 42 Alto 43 Violoncelle 44 Contrebasse 45 Cordes tremolo 46 Cordes pizzicato 47 Harpe orchestrale 48 Timbales 49 Ensemble de cordes 1 50 Ensemble de cordes 2 51 Cordes synth\u00e9tiques 1 52 Cordes synth\u00e9tiques 2 53 Ch\u0153ur \u00ab Aahs \u00bb 54 Voix \u00ab Oohs \u00bb 55 Voix synth\u00e9tique 56 Coup d\u2019orchestre 57 Trompette 58 Trombone 59 Tuba 60 Trompette bouch\u00e9e 61 Cor d\u2019harmonie 62 Section de cuivres 63 Cuivres synth\u00e9tiques 1 64 Cuivres synth\u00e9tiques 2 65 Saxophone soprano 66 Saxophone alto 67 Saxophone t\u00e9nor 68 Saxophone baryton 69 Hautbois 70 Cor anglais 71 Basson 72 Clarinette 73 Piccolo 74 Fl\u00fbte 75 Fl\u00fbte \u00e0 bec 76 Fl\u00fbte de Pan 77 Bouteille souffl\u00e9e (blown bottle) 78 Shakuhachi 79 Sifflet 80 Ocarina 81 Lead 1 (carr\u00e9) 82 Lead 2 (dent de scie) 83 Lead 3 (calliope) 84 Lead 4 (chiff) 85 Lead 5 (charang) 86 Lead 6 (voix) 87 Lead 7 (quintes) 88 Lead 8 (basse + lead) 89 Pad 1 (new age) 90 Pad 2 (chaud) 91 Pad 3 (polysynth\u00e9) 92 Pad 4 (ch\u0153ur) 93 Pad 5 (archet) 94 Pad 6 (m\u00e9tallique) 95 Pad 7 (halo) 96 Pad 8 (balayage) 97 FX 1 (pluie) 98 FX 2 (bande-son) 99 FX 3 (cristal) 100 FX 4 (atmosph\u00e8re) 101 FX 5 (brillance) 102 FX 6 (gobelins) 103 FX 7 (\u00e9chos) 104 FX 8 (science-fiction) 105 Sitar 106 Banjo 107 Shamisen 108 Koto 109 Kalimba 110 Cornemuse 111 Vi\u00e8le (fiddle) 112 Shanai 113 Grelots (Tinkle Bell) 114 Agogo 115 Steel Drums (tambours m\u00e9talliques) 116 Woodblock (bloc de bois) 117 Tambour taiko 118 Tom m\u00e9lodique 119 Tambour synth\u00e9tique 120 Cymbale invers\u00e9e 121 Bruit de frettes de guitare 122 Bruit de souffle 123 Bruit de bord de mer 124 Chant d\u2019oiseau 125 Sonnerie de t\u00e9l\u00e9phone 126 H\u00e9licopt\u00e8re 127 Applaudissements 128 Coup de feu"},{"location":"projets/othello/","title":"Othello","text":"<p>Il s'agit ici de construire un jeu d'Othello, ou Reversi.</p> <p>Je vous laisse vous documenter sur ce jeu et y jouer afin de vous en approprier les r\u00e8gles.</p>"},{"location":"projets/othello/#code-python-de-depart","title":"Code python de d\u00e9part","text":"<pre><code>VIDE = 0\nBLANC = 1   # joueur 1\nNOIR = 2    # joueur 2\n\ntype grille = list[list[int]]\ntype coup = tuple[int, int]\n\ndef autre(joueur: int) -&gt; int:\n    \"\"\"\n    Retourne l'autre joueur\n    \"\"\"\n    assert joueur in (1,2), \"Seuls les joueurs 1 et 2 sont possibles\"\n    return 3-joueur\n\ndef peut_jouer(c: coup, joueur: int, g: grille) -&gt; bool:\n    \"\"\"Cette fonction a besoin d'exister pour l'affichage.\n    Vous l'\u00e9crirez en chemin \"\"\"\n    return False\n\ndef show(joueur: int, g: grille):\n    \"\"\"\n    Affiche la grille g, le joueur allant jouer \u00e9tant donn\u00e9\n    \"\"\"\n    print( \"\".join(f\"   {j}\" for j in range(8)))\n    print(\" \u250c\u2500\u2500\u2500\"+ 7*\"\u252c\u2500\u2500\u2500\" +\"\u2510\")\n    for i in range(8):\n        print(f\"{i}\u2502\", end=\"\")\n        for j in range(8):\n            if g[i][j]==NOIR:\n                print(\" \u25cb \", end=\"\u2502\")\n            elif g[i][j]==BLANC:\n                print(\" \u25cf \", end=\"\u2502\")\n            elif peut_jouer((i,j), joueur, g):\n                print(\" . \", end=\"\u2502\")\n            else:\n                print(\"   \", end=\"\u2502\")\n        print()\n        if i == 7:\n            print(\" \u2514\u2500\u2500\u2500\"+ 7*\"\u2534\u2500\u2500\u2500\" +\"\u2518\")\n        else:\n            print(\" \u251c\u2500\u2500\u2500\"+ 7*\"\u253c\u2500\u2500\u2500\" +\"\u2524\")\n    print(f\"C'est le tour du joueur {joueur}\")\n</code></pre>"},{"location":"projets/othello/#ecriture-progressive-des-fonctions-necessaires","title":"Ecriture progressive des fonctions n\u00e9cessaires","text":"<p>1. Poser un pion</p> <p>Ecrire <code>poser_pion(c: coup, joueur: int, g: grille)</code></p> <p>Cette fonction modifie en place la grille g sachant que le joueur donn\u00e9 a jou\u00e9 le coup c. Trivial</p> <p>2. Cr\u00e9er la grille</p> <p>Ecrire <code>creer_grille() -&gt; grille</code></p> <p>Cette fonction initialise la grille \u00e0 un d\u00e9but de partie.</p> <p><code>show(1, creer_grille())</code> doit afficher ceci:</p> <p></p> <p>3. Pouvoir jouer</p> <p>Ecrire <code>peut_jouer(c: coup, joueur: int, g: grille) -&gt; bool</code></p> <p>Cette fonction touche au coeur du fonctionnement du jeu. Le joueur peut jouer si lorsqu'il joue le coup c, il peut capturer d'autres pions. On pourra proc\u00e9der pour chaque direction \u00e0 partir du coup jou\u00e9.</p> <p>Lorsque la fonction sera correcte, l'affichage devra ressembler \u00e0 \u00e7a:</p> <p></p> <p>Les petits points sont les endroits ou le joueur peut jouer.</p> <p>4. Coups possibles</p> <p>Ecrire <code>coups_possibles(joueur: int, g: grille) -&gt; tuple[coup,...]</code></p> <p>En utilisant la fonction pr\u00e9c\u00e9dente, \u00e9crire une fonction qui renvoie tous les coups possibles pour le joueur sur la grille.</p> <p>5. Score</p> <p>Ecrire <code>get_score(g: grille) -&gt; tuple[int, int]</code></p> <p>Cette fonction renvoie le score des blanc et celui des noirs sur la grille. Le score se calcule ainsi: 1 point par pion pr\u00e9sent.</p> <p>6. Jouer un coup</p> <p>Ecrire <code>jouer_coup(c: coup, joueur: int, g: grille) -&gt; grille</code></p> <p>Cette fonction est la pierre angulaire du jeu.</p> <p>Elle ne modifie pas g, mais renvoie une copie modifi\u00e9e de g o\u00f9 le joueur a jou\u00e9 le coup c.</p> <p>Il faut:</p> <ol> <li>Poser le pion</li> <li>Retourner tous les pions qu'il est possible de retourner.</li> </ol> <p>Le retournement n'est qu'une adaptation de l'algorithme qui d\u00e9termine si on peut jouer.</p> <p>7. Game Over</p> <p>Ecrire <code>is_game_over(g: grille) -&gt; bool</code></p> <p>Le jeu est termin\u00e9 si ni les blanc, ni les noirs ne peuvent jouer.</p>"},{"location":"projets/othello/#boucle-principale","title":"Boucle principale","text":"<p>8. Partie \u00e0 2 joueurs humains</p> <p>Ecrire <code>partie2j()</code> qui est la boucle principale pour la partie \u00e0 2 joueurs humains. Les humains entrent les coordonn\u00e9es de la grille qu'ils souhaitent jouer dans la console. On adoptera ce format d'entr\u00e9e utilisateur:</p> <ul> <li>Si l'humain entre <code>46</code>, c'est qu'il veut jouer le coup <code>(4,6)</code></li> </ul> <p>Vous blinderez la v\u00e9rification de ce qu'entre l'utilisateur afin qu'on ne puisse pas rentrer n'importe quoi.</p>"},{"location":"projets/othello/#ihm","title":"IHM","text":"<p>9. Peintres en pixels</p> <p>Donnez \u00e0 ce jeu l'interface graphique de votre choix. (Flet par exemple)</p>"},{"location":"projets/othello/#strategie","title":"Strat\u00e9gie","text":"<p>10. Strat\u00e9gie</p> <p>R\u00e9fl\u00e9chissez \u00e0 une strat\u00e9gie pour gagner \u00e0 ce jeu.</p> <p>Je propose de r\u00e9fl\u00e9chir \u00e0 quelles cases il est important d'occuper, ou de ne pas occuper.</p> <p>On peut aussi d\u00e9terminer des phases de jeu, et ajuster en cons\u00e9quence au cours de la partie.</p>"},{"location":"projets/othello/#ia","title":"IA","text":"<p>11. Pour la suite</p> <p>Ecrire <code>grilles_possibles(joueur: int, g: grille) -&gt; list[tuple[grille,coup]]</code></p> <p>Cette fonction renvoie la liste des grilles issues de chaque coup possible du joueur, chacune accompagn\u00e9e du coup en question.</p> <p>En compr\u00e9hension, cette fonction fait une ligne.</p> <p> Intelligence artificielle </p> <p>Il s'agit dans un premier temps de se renseigner sur l'algorithme du minimax. C'est l'algorithme \u00e0 la base de deep blue, qui a battu Kasparov aux \u00e9checs.</p> <p>Il faut donc chercher des sites qui en parlent, demander \u00e0 chat gpt, regarder des vid\u00e9os youtube (ne surtout pas avoir peur de l'anglais). C'est souvent \u00e0 travers la diversification des sources d'information qu'on finit par se faire une bonne id\u00e9e de quelque chose.</p> <p>Othello est un jeu \u00e0 2 joueurs:</p> <ul> <li>non-coop\u00e9ratif  (les joueurs ne coop\u00e8rent pas)</li> <li>synchrone (Les joueurs jouent alternativement)</li> <li>\u00e0 information compl\u00e8te (Les joueurs connaissent l'\u00e9tat du jeu \u00e0 tout moment, il n'y a rien de cach\u00e9 ou d'al\u00e9atoire)</li> <li>\u00e0 nombre fini de strat\u00e9gies pures (\u00e0 chaque tour, un joueur a un ensemble limit\u00e9 de coups possibles, et bien que le nombre de combinaisons de coups  soit tr\u00e8s \u00e9lev\u00e9, il reste fini)</li> <li>\u00e0 somme nulle (le gain d'un joueur est exactement compens\u00e9 par la perte de l'autre, La somme des scores des deux joueurs est toujours \u00e9gale au nombre total de pions sur le plateau)</li> </ul> <p>Votre travail sur la strat\u00e9gie doit vous permettre de d\u00e9gager une heuristique. Ce travail est en soi une vraie probl\u00e9matique qui peut \u00eatre pr\u00e9sent\u00e9e en grand oral.</p> <p>Vous pouvez, \u00e0 l'issue de vos recherches, l'impl\u00e9menter en python.</p> <p>J'accompagnerai ceux qui souhaitent r\u00e9aliser cette impl\u00e9mentation.</p>"},{"location":"projets/pendu/","title":"Le pendu","text":"<p>Objectifs</p> <p>Appliquer tout ce que nous avons vu depuis le d\u00e9but de l'ann\u00e9e. R\u00e9aliser des petits algorithmes.</p> <p>Se familiariser avec:</p> <ul> <li>La prise en main d'un IDE</li> <li>Ce qu'est un programme structur\u00e9</li> </ul>"},{"location":"projets/pendu/#architecture","title":"Architecture","text":"<p>Le fichier \u00e0 \u00e9crire est divis\u00e9 en 2 parties:</p> <ul> <li>les fonctions relatives au jeu du pendu en g\u00e9n\u00e9ral.</li> <li>les fonctions relatives \u00e0 son ex\u00e9cution en mode console (elles seront pr\u00e9fix\u00e9es par \"__\").</li> </ul>"},{"location":"projets/pendu/#preparation","title":"Pr\u00e9paration","text":"<ul> <li>Cr\u00e9ez un r\u00e9pertoire \"pendu\" et ouvrez le dans VSCode  (Voir Setup VSCode).</li> <li>Cr\u00e9ez-y un fichier pendu.py</li> <li>Cr\u00e9ez-y un fichier tests.py</li> </ul> <p>je vous donnerai un fichier images.py contenant les \"images\" du pendu, que vous y ajouterez.</p>"},{"location":"projets/pendu/#mission-1","title":"Mission 1","text":"<p>Voici la premi\u00e8re partie du code de pendu.py que vous devez compl\u00e9ter.</p> <p>Vos fonctions doivent \u00eatre bien test\u00e9es avant de continuer. Vous pourrez les tester dans le fichier tests.py.</p> <p>Appeler des fonctions d'autres fichiers</p> <p>Dans le fichier tests.py, vous pouvez appeler des fonctions de pendu.py en utilisant <code>pendu.choisir_mot()</code> par exemple. Mais pour ceci, il faut ajouter <code>import pendu</code> au d\u00e9but du fichier tests.</p> <pre><code>import random\nimport images\n\nMOTS = [\"python\", \"ordinateur\", \"pendu\", \"clavier\", \"souris\", \"programmation\", \"console\"]\n\ndef choisir_mot() -&gt; str:\n    \"\"\"\n    Renvoie un mot al\u00e9atoire dans la liste de mots pr\u00e9d\u00e9finis.\n    \"\"\"\n    pass\n\ndef mot_a_afficher(mot: str, lettres_trouvees: str) -&gt; str:\n    \"\"\"\n    Renvoie le mot avec des lettres r\u00e9v\u00e9l\u00e9es si elles ont \u00e9t\u00e9 devin\u00e9es,\n    et des underscores pour les lettres restantes.\n    &gt;&gt;&gt; get_mot_ecran(\"garage\", \"u\")\n    '______'\n    &gt;&gt;&gt; get_mot_ecran(\"garage\", \"uae\")\n    '_a_a_e'\n\n    \"\"\"\n    pass\n\n\ndef valider_lettre(s: str, lettres_tentees: str) -&gt; int:\n    \"\"\"\n    Renvoie:\n    - 1 si \u00e7a n'est pas une lettre\n    - 2 si la lettre a d\u00e9j\u00e0 \u00e9t\u00e9 tent\u00e9e\n    - 0 sinon\n    \"\"\"\n    pass\n\n\ndef a_trouve(mot: str, lettres_trouvees: str) -&gt; bool:\n    \"\"\"Renvoie True si le mot est enti\u00e8rement devin\u00e9, False sinon.\n    &gt;&gt;&gt; a_trouve(\"garage\", \"\")\n    False\n    &gt;&gt;&gt; a_trouve(\"garage\", \"ae\")\n    False\n    &gt;&gt;&gt; a_trouve(\"garage\", \"gare\")\n    True\n    \"\"\"\n    pass\n\ndef intercaller_espaces(s:str) -&gt; str:\n    \"\"\"\n    Cette fonction renvoie la cha\u00eene o\u00f9 on a intercall\u00e9 des espaces entre chaque caract\u00e8re.\n    &gt;&gt;&gt; intercaller_espaces(\"python\")\n    'p y t h o n'\n    \"\"\"\n\ndef tour_de_jeu(mot: str, lettre: str, lettres_trouvees: str, lettres_tentees: str, essais_restants: int,\n                fn_message: Callable[[str], None]=print) -&gt; tuple[int, str, str]:\n    \"\"\"\n    V\u00e9rifie si la lettre est dans le mot et renvoie les variables essais_restants, lettres_trouvees et lettres_tentees mises \u00e0 jour.\n\n    Utilise la fonction fn_message pour afficher un message \u00e0 l'utilisateur pour lui indiquer s'il a trouv\u00e9 ou pas. Par d\u00e9faut, la fonction est print.\n\n    &gt;&gt;&gt; tour_de_jeu(\"garage\", \"a\", \"\", \"\", 5)\n    (5, 'a', 'a')\n    \"\"\"\n    pass\n</code></pre>"},{"location":"projets/pendu/#mission-2","title":"Mission 2","text":"<p>Ecrire la fonction __partie_pendu()</p> <pre><code>def __image_pendu(essais_restants: int) -&gt; str:\n    \"\"\"\n    Cette fonction renvoie l'image du pendu correspondant au nombre d'essais restants\n    \"\"\"\n    pass\n\n\ndef __partie_pendu_console() -&gt; bool:\n    \"\"\"\n    Lance une partie de pendu. Renvoie True si le joueur a gagn\u00e9, False sinon.\n    Description de ce que doit faire cette fonction:\n    - Initialise les variables de jeu:\n        - mot, le mot \u00e0 trouver\n        - lettres_trouvees, une str contenant toutes les lettres trouv\u00e9es par l'utilisateur\n        - lettres_tentees, une str contenant toutes les lettres tent\u00e9es par l'utilisateur\n        - essais_restants  le nombre d'essais restants\n    - Affiche un message de bienvenue\n    - Boucle jusqu'au fin de la partie\n        - Affiche le mot avec des lettres r\u00e9v\u00e9l\u00e9es si elles ont \u00e9t\u00e9 devin\u00e9es. Les lettres sont s\u00e9par\u00e9es par des espaces\n        - Demande une lettre au joueur, recommence \u00e0 demander si la lettre est invalide\n        - Proc\u00e8de \u00e0 un tour de jeu\n        - Affiche le pendu.\n    \"\"\"\n    pass\n</code></pre> <p>Ecrire la fonction</p> <pre><code>def __lancer_jeu_console():\n    \"\"\"\n    Cette fonction lance une partie et demande si l'utilisateur veut rejouer. Elle maintient un score.\n    D\u00e8s que le joueur a perdu, elle affiche son score (1 point par partie gagn\u00e9e)\n    \"\"\"\n</code></pre> <p>Am\u00e9liorations</p> <ul> <li>Gestion des accents et caract\u00e8res sp\u00e9ciaux. Lorsqu'on propose 'e', le jeu d\u00e9couvre les \u00e9, \u00e8, etc.</li> <li>R\u00e9cup\u00e9rer la liste des mots depuis un fichier contenant tous les mots du dictionnaire.</li> </ul> <p>God mode</p> <p>Cette vid\u00e9o parlant du jeu du pendu propose aussi une mani\u00e8re de le rendre tr\u00e8s difficile. Impl\u00e9mentez cette mani\u00e8re de faire. Ceci n'a de sens que si vous avez r\u00e9alis\u00e9 les am\u00e9liorations.</p> <p></p>"},{"location":"projets/space_invader/","title":"Projet space invader","text":"<p>L'objectif est de cr\u00e9er un \"space invader\" like  (original: https://freeinvaders.org )</p> <p>Nous allons utiliser le retro game engine pyxel (<code>pip install pyxel</code>)</p> <p>Propret\u00e9</p> <p>La tr\u00e8s grande majorit\u00e9 des exemples sur internet de jeux pyxels ne sont pas propres du tout. Merci de ne pas vous en inspirer afin de ne pas prendre de mauvaises habitudes. A ce titre, c'est la raison pour laquelle je vous guide afin de le faire proprement, dans la limite du raisonable.</p> <p>Voici la mod\u00e9lisation de ce space invader o\u00f9 nous utilisons l'h\u00e9ritage \u00e0 fin de simplification (Je consid\u00e8re l'h\u00e9ritage comme faisant partie de la zone proximale de d\u00e9veloppement). Sans h\u00e9ritage, il faudrait g\u00e9rer dans toutes les classes tous les attributs et m\u00e9thodes d'EltGraphique. Il reste toujours possible de les adapter dans les classes filles.</p> <pre><code>classDiagram\n    EltGraphique &lt;|-- Vaisseau\n    EltGraphique &lt;|-- Ennemi\n    EltGraphique &lt;|-- Missile\n    EltGraphique : +float x\n    EltGraphique : +float y\n    EltGraphique : +float dx\n    EltGraphique : +float dy\n    EltGraphique : +int height\n    EltGraphique : +int width\n    EltGraphique : +int u\n    EltGraphique : +int v\n    EltGraphique : +draw()\n    EltGraphique : +update()\n    EltGraphique : +bool collision(EltGraphique)\n\n    class Jeu{\n        +int score\n        +draw()\n        +update()\n        -check_collisions()\n    }\n    class Ennemi{\n        +tirer()\n    }\n    class Vaisseau{\n        +tirer()\n    }\n    Jeu \"1\"--\"1\" Vaisseau\n    Jeu \"1\"--\"*\" Ennemi\n    Ennemi \"1\"--\"*\" Missile\n    Vaisseau \"1\"--\"*\" Missile</code></pre>"},{"location":"projets/space_invader/#element-graphique","title":"Element graphique","text":"<p>Un El\u00e9ment Graphique est quelque chose qui peut appara\u00eetre \u00e0 l'\u00e9cran.</p> <ul> <li>Il a une position x, y dans le plan.</li> <li>Il a un vecteur de d\u00e9placement dx, dy duquel il se d\u00e9place en permanence</li> <li>Il a une coordonn\u00e9e dans le fichier de ressource pour aller y rechercher son image.</li> <li>Il a une largeur <code>width</code> et une hauteur <code>height</code>.</li> <li>Il sait se dessiner \u00e0 l'\u00e9cran.</li> <li>Il sait se mettre \u00e0 jour en fonction de son vecteur directeur.</li> <li>Il sait dire s'il est en collision avec un autre \u00e9l\u00e9ment graphique (voir fonction donn\u00e9e plus bas).</li> </ul> <p>Par exemple, Un Vaisseau EST UN Element Graphique.</p> <p>Danger</p> <p>Les vecteurs de position et de d\u00e9placement seront g\u00e9r\u00e9s en float. Par contre l'affichage attendra des ints. C'est \u00e9quivalent \u00e0 dire qu'on r\u00e9fl\u00e9chit au mouvement dans \\(\\mathbb{R^2}\\) mais qu'on affiche dans \\(\\mathbb{Z^2}\\)</p>"},{"location":"projets/space_invader/#le-jeu","title":"Le Jeu","text":"<p>Le jeu est le chef d'orchestre.</p> <p>il g\u00e8re:</p> <ul> <li>Un Vaisseau </li> <li>Des Ennemis</li> <li>Un Score</li> <li>Les \u00e9v\u00e8nements utilisateurs dans sa m\u00e9thode update</li> </ul> <p>Le Jeu doit pouvoir spawner un ennemi \u00e0 une certaine position pour un certain vecteur de d\u00e9placement. Le jeu sait se dessiner et demander \u00e0 ses vaisseaux et \u00e0 ses ennemis de se mettre \u00e0 jour et de se dessiner.</p> <p>Le jeu sait tester toutes les collisions et agir en cons\u00e9quence.</p>"},{"location":"projets/space_invader/#le-vaisseau","title":"Le Vaisseau","text":"<p>Un vaisseau doit pouvoir tirer un nouveau missile. Un vaisseau conna\u00eet la liste de ses missiles et sait leur demander de se mettre \u00e0 jour et de se dessiner. </p>"},{"location":"projets/space_invader/#lennemi","title":"L'ennemi","text":"<p>Un ennemi doit pouvoir tirer un nouveau missile. Un ennemi conna\u00eet la liste de ses missiles et sait leur demander de se mettre \u00e0 jour et de se dessiner. </p>"},{"location":"projets/space_invader/#le-missile","title":"Le missile","text":"<p>C'est un \u00e9l\u00e9ment Graphique simple.</p>"},{"location":"projets/space_invader/#optionnel","title":"Optionnel","text":"<ul> <li>Il existe plusieurs types d'ennemis plus ou moins puissants.</li> <li>Il y a un boss ded fin de niveau.</li> <li>Les ennemis et le vaisseau peuvent avoir des points de vie.</li> <li>Le jeu peut cr\u00e9er une explosion \u00e0 un certain endroit</li> <li>Les ennemis peuvent drop des Bonus (invincibilit\u00e9, changement de missile, ...) La liste est sans fin.</li> </ul> <p>Ne vous lancez pas dans les fonctionnalit\u00e9s optionnelles sans avoir un code propre et compl\u00e8tement test\u00e9. Ne vous lancez pas dans une am\u00e9lioration sans avoir pens\u00e9 sa mod\u00e9lisation. Si vous \u00e9crivez trop de code, c'est que vous avez peut-\u00eatre pris un mauvais chemin.</p>"},{"location":"projets/space_invader/#les-collisions","title":"Les collisions","text":"<p>Rajoutez cette m\u00e9thode dans votre classe EltGraphique. L'objectif ici, c'est que vous vous plongiez dans la POO, pas d'\u00e9tudier la collision d'objets dans l'espace (tr\u00e8s vaste sujet), donc je vous la donne. (La collision peut faire l'objet d'un grand oral maths/info.)</p> <pre><code>def collision(self, other: 'EltGraphique') -&gt; bool:\n    \"\"\" Cette m\u00e9thode d\u00e9tecte les collisions entre 2 boites\n    rectangulaires. Les rectangles doivent avoir des attributs:\n    x, y, width, height\n    Elle renvoie True si les deux bo\u00eetes sont en collision.\n    \"\"\"\n    return not ( \n               (other.x &gt;= self.x + self.width)   \n            or (other.x + other.width &lt;= self.x)  \n            or (other.y &gt;= self.y + self.height) \n            or (other.y + other.height &lt;= self.y) \n     )\n</code></pre> <p>Pour aller plus loin dans les collisions, vous pouvez vous int\u00e9resser au th\u00e9or\u00e8me des axes s\u00e9parateurs (Accessible sp\u00e9 math), ou encore \u00e0 GJK, qui utilise la somme de Minkowski (Difficile \u00e0 ce stade, mais je vous le mets quand m\u00eame parce que c'est beau)</p> <p>La d\u00e9tection de collisions utilise en fait plusieurs algorithmes. Un algorithme pour voir \"en gros\" qui pourrait entrer en collision en effectuant un partitionnement de l'espace (Broad phase). Un algorithme pour voir d'un peu plus pr\u00e8s ce qui pourrait \u00eatre en collision d'apr\u00e8s le r\u00e9sultat du broad en utilisant la fonction que je vous ai donn\u00e9, ou SAT, ou autre (Mid phase). Un algorithme pour d\u00e9terminer au pixel pr\u00e8s ce qui entre en collision d'apr\u00e8s le r\u00e9sultat du Mid avec par exemple GJK (Narrow phase).</p>"},{"location":"terminale/architecture_reseau/bitwise/","title":"Op\u00e9rateurs Bitwise en Python","text":"<p>Les op\u00e9rateurs bitwise permettent de manipuler les bits individuels des variables dans les calculs. Ils sont souvent utilis\u00e9s en programmation.</p> <p>Dans le cadre du progrramme, ils servent en chiffrement, ainsi que pour manipuler des adresses IP.</p> <p>Les diff\u00e9rents op\u00e9rateurs bitwise en Python</p> <ol> <li>AND bitwise (<code>&amp;</code>)</li> <li>OR bitwise (<code>|</code>)</li> <li>XOR bitwise (<code>^</code>)</li> <li>NOT bitwise (<code>~</code>)</li> <li>D\u00e9placement de bits \u00e0 gauche (<code>&lt;&lt;</code>)</li> <li>D\u00e9placement de bits \u00e0 droite (<code>&gt;&gt;</code>)</li> </ol>"},{"location":"terminale/architecture_reseau/bitwise/#1-and-bitwise","title":"1. AND bitwise (<code>&amp;</code>)","text":"<p>L'op\u00e9rateur AND bitwise retourne <code>1</code> si les deux bits sont <code>1</code>, sinon il retourne <code>0</code>.</p> <ul> <li>Exemple : <code>a &amp; b</code></li> </ul> <pre><code>13   -&gt;   00001101 (en binaire)\n11   -&gt;   00001011 (en binaire)\n-------------\na &amp; b -&gt; 00001001 (en binaire) = 9 (en d\u00e9cimal)\n</code></pre> <p>Code Python : <pre><code>a = 13  # 00001101\nb = 11  # 00001011\nresult = a &amp; b\nprint(result)  # Affiche 9\n</code></pre></p>"},{"location":"terminale/architecture_reseau/bitwise/#2-or-bitwise","title":"2. OR bitwise (<code>|</code>)","text":"<p>L'op\u00e9rateur OR retourne <code>1</code> si au moins un des bits est <code>1</code>, sinon il retourne <code>0</code>.</p> <ul> <li>Exemple : <code>a | b</code></li> </ul> <pre><code>5   -&gt;  00000101 (en binaire)\n3   -&gt;  00000011 (en binaire)\n-------------\na | b -&gt; 00000111 (en binaire) = 7 (en d\u00e9cimal)\n</code></pre> <p>Code Python : <pre><code>a = 5  # 00000101\nb = 3  # 00000011\nresult = a | b\nprint(result)  # Affiche 7\n</code></pre></p>"},{"location":"terminale/architecture_reseau/bitwise/#3-xor-bitwise","title":"3. XOR bitwise (<code>^</code>)","text":"<p>L'op\u00e9rateur XOR retourne <code>1</code> si les bits sont diff\u00e9rents, sinon il retourne <code>0</code>.</p> <ul> <li>Exemple : <code>a ^ b</code></li> </ul> <pre><code>5   -&gt;  00000101 (en binaire)\n3   -&gt;  00000011 (en binaire)\n-------------\na ^ b -&gt; 00000110 (en binaire) = 6 (en d\u00e9cimal)\n</code></pre> <p>Code Python : <pre><code>a = 5  # 00000101\nb = 3  # 00000011\nresult = a ^ b\nprint(result)  # Affiche 6\n</code></pre></p>"},{"location":"terminale/architecture_reseau/bitwise/#4-not-bitwise","title":"4. NOT bitwise (<code>~</code>)","text":"<p>L'op\u00e9rateur NOT bitwise est un op\u00e9rateur unaire qui inverse tous les bits d'un nombre. En d'autres termes, il transforme chaque <code>1</code> en <code>0</code> et chaque <code>0</code> en <code>1</code>. Il s'agit du compl\u00e9ment \u00e0 1 de l'entier correspondant.</p> <ul> <li>Exemple : <code>~a</code></li> </ul> <pre><code>5   -&gt;  00000101 (en binaire)\n-------------\n~a  -&gt;  11111010 (en binaire) = -6 (en d\u00e9cimal)\n</code></pre> <p>Code Python : <pre><code>a = 5  # 00000101\nresult = ~a + 1  # Rappel: L'oppos\u00e9 est 1 + le compl\u00e9ment \u00e0 1\nprint(result)  # Affiche -5\n</code></pre></p>"},{"location":"terminale/architecture_reseau/bitwise/#5-deplacement-de-bits-a-gauche","title":"5. D\u00e9placement de bits \u00e0 gauche (<code>&lt;&lt;</code>)","text":"<p>L'op\u00e9rateur de d\u00e9placement \u00e0 gauche d\u00e9cale les bits d'un nombre vers la gauche de N positions. Cela \u00e9quivaut \u00e0 multiplier le nombre par <code>2^N</code>.</p> <ul> <li>Exemple : <code>a &lt;&lt; 1</code></li> </ul> <pre><code>5   -&gt;  00000101 (en binaire)\n-------------\na &lt;&lt; 1 -&gt; 00001010 (en binaire) = 10 (en d\u00e9cimal)\n</code></pre> <p>Code Python : <pre><code>a = 5  # 00000101\nresult = a &lt;&lt; 1\nprint(result)  # Affiche 10\n</code></pre></p>"},{"location":"terminale/architecture_reseau/bitwise/#6-deplacement-de-bits-a-droite","title":"6. D\u00e9placement de bits \u00e0 droite (<code>&gt;&gt;</code>)","text":"<p>L'op\u00e9rateur de d\u00e9placement \u00e0 droite d\u00e9cale les bits d'un nombre vers la droite de N positions. Cela \u00e9quivaut \u00e0 diviser (division enti\u00e8re) le nombre par <code>2^N</code>.</p> <ul> <li>Exemple : <code>a &gt;&gt; 1</code></li> </ul> <pre><code>5   -&gt;  00000101 (en binaire)\n-------------\na &gt;&gt; 1 -&gt; 00000010 (en binaire) = 2 (en d\u00e9cimal)\n</code></pre> <p>Code Python : <pre><code>a = 5  # 00000101\nresult = a &gt;&gt; 1\nprint(result)  # Affiche 2\n</code></pre></p>"},{"location":"terminale/architecture_reseau/bitwise/#tableau-recapitulatif-des-operateurs","title":"Tableau r\u00e9capitulatif des op\u00e9rateurs","text":"Op\u00e9rateur Symbole Description Exemple (en binaire) R\u00e9sultat AND <code>&amp;</code> Compare les bits et retourne <code>1</code> si les deux bits sont <code>1</code> <code>5 &amp; 3 = 1</code> <code>00000001</code> OR <code>\\|</code> Compare les bits et retourne <code>1</code> si au moins un des bits est <code>1</code> <code>5 \\| 3 = 7</code> <code>00000111</code> XOR <code>^</code> Compare les bits et retourne <code>1</code> si les bits sont diff\u00e9rents <code>5 ^ 3 = 6</code> <code>00000110</code> NOT <code>~</code> Inverse tous les bits <code>~5 = -6</code> <code>11111010</code> Shift Left <code>&lt;&lt;</code> D\u00e9cale les bits vers la gauche <code>5 &lt;&lt; 1 = 10</code> <code>00001010</code> Shift Right <code>&gt;&gt;</code> D\u00e9cale les bits vers la droite <code>5 &gt;&gt; 1 = 2</code> <code>00000010</code> <p>Autre fonction utilie:</p> <ul> <li>La m\u00e9thode <code>bit_length()</code> de la clase <code>int</code> permet d'obtenir le nombre de bits d'un int.</li> </ul>"},{"location":"terminale/architecture_reseau/bitwise/#applications-pratiques-des-operateurs-bitwise","title":"Applications pratiques des op\u00e9rateurs bitwise","text":"<ol> <li>Optimisation des algorithmes : Les op\u00e9rations bitwise sont souvent plus rapides que leurs \u00e9quivalents arithm\u00e9tiques (par exemple, multiplication par <code>2</code> en utilisant le d\u00e9placement de bits \u00e0 gauche). Aussi, en assembleur, on utilise souvent l'instruction <code>xor R0, R0</code> pour affecter 0 au registre m\u00e9moire R0, car c'est plus rapide que l'instruction <code>mov R0, 0</code> qui affecte 0 \u00e0 R0. </li> <li>Cryptographie : Les op\u00e9rateurs XOR sont souvent utilis\u00e9s dans les algorithmes cryptographiques.</li> <li>Manipulation de drapeaux (flags) : Les bitwise sont souvent utilis\u00e9s pour manipuler des indicateurs d'\u00e9tat (on/off, activ\u00e9/d\u00e9sactiv\u00e9) en utilisant des masques de bits. (Mettre l'exemple du jeu de la vie avec un seul tableau)</li> </ol>"},{"location":"terminale/architecture_reseau/bitwise/#exercice-extraction-des-n-premiers-ou-n-derniers-bits-dun-nombre","title":"Exercice : Extraction des n premiers ou n derniers bits d'un nombre","text":""},{"location":"terminale/architecture_reseau/bitwise/#enonce","title":"\u00c9nonc\u00e9","text":"<p>\u00c9crivez un programme qui prend trois entr\u00e9es :</p> <ol> <li>Un nombre entier positif <code>a</code>.</li> <li>Un entier <code>n</code> repr\u00e9sentant le nombre de bits \u00e0 extraire.</li> <li>Un choix indiquant si vous souhaitez extraire les <code>n</code> premiers bits (les bits les plus \u00e0 gauche) ou les <code>n</code> derniers bits (les bits les plus \u00e0 droite).</li> </ol> <p>Le programme doit alors extraire et afficher les <code>n</code> bits choisis sous forme binaire.</p>"},{"location":"terminale/architecture_reseau/bitwise/#regles","title":"R\u00e8gles :","text":"<ul> <li>Extraction des n derniers bits : Pour extraire les n bits les plus \u00e0 droite d'un nombre, vous pouvez utiliser un masque ou un d\u00e9calage \u00e0 droite.</li> <li>Extraction des n premiers bits : Pour extraire les n bits les plus \u00e0 gauche d'un nombre, vous pouvez utiliser un d\u00e9calage \u00e0 droite suivi d'un masque.</li> </ul>"},{"location":"terminale/architecture_reseau/bitwise/#exemples","title":"Exemples :","text":"<ul> <li>Entr\u00e9e : </li> <li>Nombre : <code>29</code> (en binaire <code>11101</code>)</li> <li>Nombre de bits <code>n</code> : <code>3</code></li> <li>Choix : \"derniers\"</li> </ul> <p>Sortie attendue : <code>101</code></p> <ul> <li>Entr\u00e9e : </li> <li>Nombre : <code>29</code> (en binaire <code>11101</code>)</li> <li>Nombre de bits <code>n</code> : <code>2</code></li> <li>Choix : \"premiers\"</li> </ul> <p>Sortie attendue : <code>11</code></p>"},{"location":"terminale/architecture_reseau/bitwise/#solution-proposee","title":"Solution propos\u00e9e","text":"<pre><code>def extract_last_n_bits(a, n):\n    # Masque pour extraire les n derniers bits\n    mask = (1 &lt;&lt; n) - 1\n    return a &amp; mask\n\ndef extract_first_n_bits(a, n):\n    # Calcul du nombre total de bits dans la repr\u00e9sentation binaire\n    total_bits = a.bit_length()\n    # D\u00e9calage \u00e0 droite pour ne garder que les n premiers bits\n    shift = total_bits - n\n    return a &gt;&gt; shift\n</code></pre>"},{"location":"terminale/architecture_reseau/bitwise/#exercice-calcul-de-ladresse-reseau-a-partir-dune-adresse-ip-et-de-son-masque-reseau","title":"Exercice : Calcul de l'adresse r\u00e9seau \u00e0 partir d'une adresse IP et de son masque r\u00e9seau","text":"<p>Une adresse IP n'est qu'un groupe de 4 octets. Ici, <code>192.168.1.10</code> donnera <code>11000000.10101000.00000001.00001010</code>. En les mettant bout \u00e0 bout: <code>11000000101010000000000100001010</code> = 3\u202f232\u202f235\u202f786</p> <p>Cette adresse IP correspond donc \u00e0 la repr\u00e9sentation d\u00e9cimale de l'entier 3\u202f232\u202f235\u202f786</p> <p>Etudiez ce code:</p> <pre><code>ip = \"192.168.1.10\"\nip_tab = [int(e) for e in ip.split('.')]  # [192, 168, 1, 10]\n# On va d\u00e9caler 192 de 3 octets, 168 de 2 octets et 1 de 1 octet pour arriver\u00e0 r\u00e9aliser cette op\u00e9ration:\n# je n'ai rajout\u00e9 les points que pour la lisibilit\u00e9, ils n'existent pas ici.\n#   11000000.00000000.00000000.00000000\n# |          10101000.00000000.00000000\n# |                   00000001.00000000\n# |                            00001010\n#  -------------------------------------\n#   11000000.10101000.00000001.00001010\nip_int = 0\nfor i in range(4):\n  ip_int |= ip_tab[i] &lt;&lt; 8*(3-i)\nprint(ip_int)  # 3\u202f232\u202f235\u202f786\n</code></pre>"},{"location":"terminale/architecture_reseau/bitwise/#cours","title":"Cours :","text":"<ul> <li>Une adresse r\u00e9seau identifie un r\u00e9seau sp\u00e9cifique dans une architecture IP, et est d\u00e9termin\u00e9e par l'application du masque de sous-r\u00e9seau sur l'adresse IP.</li> <li>Le masque r\u00e9seau d\u00e9termine la partie r\u00e9seau d'une adresse IP. Il peut \u00eatre exprim\u00e9 soit en notation d\u00e9cimale point\u00e9e (ex : <code>255.255.255.0</code>), soit en notation CIDR (ex : <code>/24</code> signifie 24 bits pour la partie r\u00e9seau).</li> </ul>"},{"location":"terminale/architecture_reseau/bitwise/#enonce_1","title":"\u00c9nonc\u00e9","text":"<p>\u00c9crivez un programme qui prend deux entr\u00e9es : 1. Une adresse IP (IPv4) au format d\u00e9cimal point\u00e9 (ex : <code>192.168.1.10</code>). 2. Un masque r\u00e9seau (au format d\u00e9cimal point\u00e9 ou CIDR) (ex : <code>255.255.255.0</code> ou <code>/24</code>).</p> <p>Le programme doit calculer et afficher l'adresse r\u00e9seau associ\u00e9e \u00e0 cette IP, c'est-\u00e0-dire l'adresse obtenue en effectuant un AND bitwise entre l'adresse IP et le masque r\u00e9seau.</p>"},{"location":"terminale/architecture_reseau/bitwise/#exemples_1","title":"Exemples :","text":"<ul> <li>Entr\u00e9e :</li> <li>Adresse IP : <code>192.168.1.10</code></li> <li>Masque r\u00e9seau : <code>255.255.255.0</code></li> <li> <p>Sortie attendue : <code>192.168.1.0</code></p> </li> <li> <p>Entr\u00e9e :</p> </li> <li>Adresse IP : <code>10.0.0.37</code></li> <li>Masque r\u00e9seau : <code>/8</code></li> <li>Sortie attendue : <code>10.0.0.0</code></li> </ul> <p>Sauvegarde de Jeux Vid\u00e9os</p> <p>On peut sauvegarder une partie de jeux vid\u00e9o dans un entier.</p> <p>Cet entier <code>sauv</code> doit comprendre ces informations:</p> <ul> <li>Nombre de vies restantes (entre 0 et 99)</li> <li>Nombre de fl\u00e8ches restantes (entre 0 et 300)</li> <li> <p>Point de sauvegarde atteint (150 points de sauvegarde)</p> </li> <li> <p>De combien d'octets avez vous besoin pour stocker chaque information?</p> </li> <li>Proposez une fonction qui renvoie un int d'apr\u00e8s les param\u00e8tres entiers <code>vie</code>, <code>fleches</code>, <code>checkpoint</code></li> <li>Proposez une fonction qui renvoie un tuple constitu\u00e9 des ints (<code>vie</code>, <code>fleches</code>, <code>checkpoint</code>) d'apr\u00e8s un entier de sauvegarde.</li> </ul> <p>Vous pouvez tester vos fonctions en vous assurant tout simplement que le r\u00e9sultat est r\u00e9versible. Vous venez de d\u00e9finir une fonction et sa r\u00e9ciproque.</p>"},{"location":"terminale/architecture_reseau/chiffrement/","title":"Introduction au chiffrement","text":""},{"location":"terminale/architecture_reseau/chiffrement/#bref-historique-du-chiffrement","title":"Bref historique du chiffrement","text":"<p>Depuis l\u2019Antiquit\u00e9, les humains ont cherch\u00e9 \u00e0 prot\u00e9ger leurs messages des regards indiscrets. D\u00e8s qu\u2019il y a eu des secrets \u00e0 garder \u2014 qu\u2019ils soient militaires, diplomatiques ou personnels \u2014 le besoin de chiffrer l\u2019information est apparu.</p> <ul> <li>Vers -500 av. J.-C. : les Grecs utilisaient la scytale, un syst\u00e8me de chiffrement par transposition.</li> <li>Jules C\u00e9sar utilisait un simple d\u00e9calage de lettres dans l\u2019alphabet (le chiffrement de C\u00e9sar) pour envoyer des ordres.</li> <li>Au Moyen \u00c2ge, les souverains \u00e9changeaient des messages cod\u00e9s avec des techniques plus \u00e9labor\u00e9es.</li> <li>Lors de la Seconde Guerre mondiale, la machine Enigma a \u00e9t\u00e9 largement utilis\u00e9e, et bris\u00e9e par Alan Turing.</li> <li>Aujourd\u2019hui, le chiffrement est partout : mots de passe, paiements, messageries, cloud, etc.</li> </ul>"},{"location":"terminale/architecture_reseau/chiffrement/#un-exemple-le-chiffrement-de-cesar","title":"Un exemple, le chiffrement de C\u00e9sar","text":"<p>Le chiffrement de C\u00e9sar est une m\u00e9thode par d\u00e9calage. Exemple : avec un d\u00e9calage de 3, <code>A \u2192 D</code>, <code>B \u2192 E</code>, etc.</p> <p>Chiffrement : <code>indice_chiffre = (indice_original + cle) % 26</code> </p> <p>C\u00e9sar</p> <p>\u00c9crire une fonction :</p> <p><pre><code>def cesar(message: str, cle: int) -&gt; str:\n    \"\"\"\n    Cette fonction applique le d\u00e9calage de c\u00e9sar \u00e0 un message \n    selon la cl\u00e9 donn\u00e9e et revoie le r\u00e9sultat.\n    \"\"\"\n    ...\n</code></pre> Le message est en majuscules sans accents.</p> <ul> <li>Donnez l'instruction permettant de chiffrer un message avec une cl\u00e9 \\(k\\)</li> <li>Donnez l'instruction permettant de d\u00e9chiffrer un message chiffr\u00e9 avec une cl\u00e9 \\(k\\)</li> </ul>"},{"location":"terminale/architecture_reseau/chiffrement/#limites-du-chiffrement-de-cesar","title":"Limites du chiffrement de C\u00e9sar","text":"<p>Ce chiffrement est tr\u00e8s facile \u00e0 casser. Il suffit de d\u00e9coder le message avec les 25 cl\u00e9s possibles et de comparer les r\u00e9sultats.</p> <p>D\u00e9finition - Chiffrement Sym\u00e9trique</p> <p>On dit qu'une m\u00e9thode de chiffrement est sym\u00e9trique quand c'est la m\u00eame cl\u00e9 qui permet de chiffrer et de d\u00e9chiffrer le message</p> <p>Voici ci-dessous un autre exemple de chiffrement sym\u00e9trique</p>"},{"location":"terminale/architecture_reseau/chiffrement/#chiffrement-xor-ou-exclusif","title":"Chiffrement XOR (OU exclusif)","text":"<p>Examinons en quoi consiste ce chiffrement en d\u00e9couvrant quelques proprit\u00e9s de l'op\u00e9rateur XOR, que nous noterons \\(\\oplus\\)</p> <p>Rappelons que \\(a \\oplus b\\) est vrai lorsque \\(a\\) et \\(b\\) sont diff\u00e9rents.</p> \\(a\\) \\(b\\) \\(a \\oplus b\\) 0 0 0 0 1 1 1 0 1 1 1 0 <p>Imaginons disposer d'un message \\(M\\) et d'une cl\u00e9 \\(K\\)</p> <p>Alice cr\u00e9\u00e9 le message chiffr\u00e9 \\(C = M \\oplus K\\) et le transmet \u00e0 Bob qui a la cl\u00e9 \\(K\\)</p> <p>lorsque j'utilise des majuscules, c'est pour dire qu'on fait du XOR bitwise.</p> <p>Bob re\u00e7oit \\(C\\). Il calcule alors \\(X=C \\oplus K\\)</p> <p>Donc \\(X=(M \\oplus K) \\oplus K\\)</p> <p>On sait que \\(K \\oplus K = 0\\), mais on ne sait pas si \\(\\oplus\\) est associatif (si on peut bouger les parenth\u00e8ses).</p> <p>Vous connaissez d\u00e9j\u00e0 un op\u00e9rateur non associatif. L'op\u00e9rateur de division n'est pas associatif. En effet \\((1/2)/3 \\ne 1/(2/3)\\)</p> <p>on va donc v\u00e9rifier l'associativit\u00e9 de \\(\\oplus\\) en \u00e9crivant la table de v\u00e9rit\u00e9 de \\((a \\oplus b ) \\oplus c\\) et de \\(a \\oplus (b \\oplus c)\\). Si on trouve les m\u00eames, c'est que les expressions sont \u00e9gales.</p> \\(a\\) \\(b\\) \\(c\\) \\(a \\oplus b\\) \\(b \\oplus c\\) \\((a \\oplus b ) \\oplus c\\) \\(a \\oplus (b \\oplus c)\\) 0 0 0 0 0 0 0 0 0 1 0 1 1 1 0 1 0 1 1 1 1 0 1 1 1 0 0 0 1 0 0 1 0 1 1 1 0 1 1 1 0 0 1 1 0 0 1 0 0 1 1 1 0 0 1 1 <p>Les deux expressions ont toujours la m\u00eame valeur de v\u00e9rit\u00e9, elles sont donc \u00e9gales. Quels que soient \\(a, b\\) et \\(c\\), on a  \\((a \\oplus b ) \\oplus c = a \\oplus (b \\oplus c)\\). </p> <p>\\(\\oplus\\) est donc associatif.</p> <p>On peut donc bouger les parenth\u00e8ses et on obtient:</p> <p>\\(X= M \\oplus (K \\oplus K)\\)</p> <p>Or \\(K \\oplus K = 0\\) car \\(K\\) n'est pas diff\u00e9rent de \\(K\\)</p> <p>\\(X= M \\oplus 0\\)</p> <p>On peut faire la table de \\(M \\oplus 0\\) pour oberver que \u00e7a vaut \\(M\\).</p> \\(M\\) \\(0\\) \\(M \\oplus 0\\) 0 0 0 1 0 1 <p>Au final, \\(X=M\\)</p> <p>En r\u00e9alisant un XOR sur le message chiffr\u00e9 avec la m\u00eame cl\u00e9, Bob retrouve le message initial!</p> <p>Abstract</p> <p>En r\u00e9sum\u00e9, pour chiffrer un message M avec une cl\u00e9 K, Alice calcule \\(C = M \\oplus K\\) et transmet \\(C\\) \u00e0 Bob qui d\u00e9chiffre \\(C\\) en calculant \\(C \\oplus K\\)</p> <p>Le probl\u00e8me c'est que la taille de la cl\u00e9 n'est pas \u00e9gale \u00e0 la taille du message. Si notre message a \\(n\\) bits, on voudrait que notre cl\u00e9 ait aussi n-bits pour r\u00e9aliser les op\u00e9ration bit \u00e0 bit.</p> <p>Ce qu'on va faire, c'est qu'on va r\u00e9p\u00e9ter le cl\u00e9 jusqu'\u00e0 ce qu'elle fasse la taille du message avant l'op\u00e9ration.</p> <p>si on note \\(|K|\\) la taille de la cl\u00e9 et \\(|M|\\) la taille du message, on devra r\u00e9p\u00e9ter la cl\u00e9 \\(|M| \\bold{div} |K|\\) fois et y ajouter un bout de cl\u00e9 de taille \\(|M| \\bold{mod} |K|\\). (c'est une b\u00eate division: combien de fois peut-on mettre la cl\u00e9, et qu'est-ce qui nous reste \u00e0 la fin pour compl\u00e9ter)</p> <p>En cons\u00e9quence, compl\u00e9ter le fonction suivante:</p> <pre><code>def chiffrement_symetrique(message: bytes, cle: bytes) -&gt; bytes:\n    \"\"\"\n    Op\u00e8re un XOR sur le message et la cl\u00e9.\n    bytes est un type repr\u00e9sentant une s\u00e9quence d'octets.\n    Il est donc manipulable comme toute s\u00e9quence (len, slices, iterations...).\n\n       ABCDEFG   --&gt; 18368730161825351\n    \u2295 testtes   --&gt; 32762643847865715\n\n    &gt;&gt;&gt; cle = b\"test\"\n    &gt;&gt;&gt; message = b\"ABCDEFG\"\n    &gt;&gt;&gt; msg_chiffre = chiffrement_symetrique(message, cle)\n    &gt;&gt;&gt; msg_dechiffre = chiffrement_symetrique(msg_chiffre, cle)\n    &gt;&gt;&gt; print(msg_chiffre)\n    b\"5'001#4\"\n    &gt;&gt;&gt; print(msg_dechiffre)\n    b'ABCDEFG'\n    \"\"\"\n    # Nombre de r\u00e9p\u00e9titions de la cl\u00e9\n    repetitions = ......................\n    # Nombre d'octets restants\n    reste = .....................\n\n    # On r\u00e9cup\u00e8re l'entier correspondant au message\n    message_int = int.from_bytes(message, byteorder='big')\n\n    # On fait pareil pour la cl\u00e9 qu'on r\u00e9p\u00e8te\n    cle_int = int.from_bytes(...................., byteorder='big')\n\n    # Application de l'op\u00e9rateur XOR\n    resultat_int = .....................\n\n    # Conversion du r\u00e9sultat en bytes\n    # La taille du message chiffr\u00e9 est n\u00e9cessairement la m\u00eame que celle du message\n    resultat_bytes = resultat_int.to_bytes(len(message), byteorder='big')\n\n    return resultat_bytes\n</code></pre>"},{"location":"terminale/architecture_reseau/chiffrement/#lecture-et-ecriture-en-binaire","title":"Lecture et \u00e9criture en binaire","text":"<p>Ces deux fonctions permettent de lire et d'\u00e9crire des bytes dans un fichier. Ici, on est au niveau de l'octet, donc on peut chiffrer ce qu'on veut avec ce qu'on veut.</p> <pre><code>def lire_fichier(chemin: str) -&gt; bytes:\n    \"\"\" Cette fonction lit le fichier octet par octet \"\"\"\n    with open(chemin, \"rb\") as f:\n        data = f.read()\n    return data\n\n\ndef ecrire_fichier(data: bytes, chemin: str):\n    with open(chemin, \"wb\") as f:\n        f.write(data)\n</code></pre> <p>Application concr\u00e8te</p> <p>Choisissez un bin\u00f4me et mettez vous d'accord sur une image commune qui vous servira de cl\u00e9.</p> <p>Chiffrez un fichier quelconque avec cette image.</p> <p>Envoyez le \u00e0 votre bin\u00f4me qui pourra le d\u00e9chiffrer.</p>"},{"location":"terminale/architecture_reseau/chiffrement/#probleme-du-partage-de-la-cle","title":"Probl\u00e8me du partage de la cl\u00e9","text":"<p>Dans le chiffrement sym\u00e9trique, la m\u00eame cl\u00e9 est utilis\u00e9e pour chiffrer et d\u00e9chiffrer.</p> <ul> <li>Comment transmettre la cl\u00e9 sans qu\u2019elle soit intercept\u00e9e ?</li> <li>Si la cl\u00e9 est compromise, toute la s\u00e9curit\u00e9 est perdue.</li> </ul>"},{"location":"terminale/architecture_reseau/chiffrement2/","title":"Cryptographie Asym\u00e9triques","text":"<p>D\u00e9finition</p> <p>Les protocoles de s\u00e9curisation asym\u00e9triques font appel \u00e0: - Une cl\u00e9 publique: un ensemble d'informations auxquelles tout le monde peut avoir acc\u00e8s - Une cl\u00e9 priv\u00e9e: un ensemble d'informations secr\u00e9tes qu'une seule personne conna\u00eet.</p> <p>Dans les protocoles sym\u00e9triques, le secret (la cl\u00e9) est connue des deux communiquants. Dans les protocoles asym\u00e9triques, il n'y a aucun secret partag\u00e9. Chaque communiquant a son propre secret qu'il ne partagera jamais avec personne. (Nous allons bien s\u00fbr exmplorer cette sorcellerie)</p> <p>Ce type de protocole permet entre autre de :</p> <ul> <li>Chiffrer un message</li> <li>Authentifier un message (ex : signature num\u00e9rique)</li> <li>Echanger une cl\u00e9 secr\u00e8te de fa\u00e7on s\u00e9curis\u00e9e</li> </ul> <p>C'est sur le dernier point que nous allons nous attarder.</p> <p>Voici le principe qui, comme d'habitude en crypto, va vous \u00eates pr\u00e9sent\u00e9 par 2 stars interplan\u00e9taires: Alice et Bob.</p> <p>Le but de la vie d'Alice et Bob c'est de s'\u00e9changer des messages secret sans que leur ennemie jur\u00e9e, la terrifiante Eve, ne puisse lire ces message. Eve est tr\u00e8s tr\u00e8s forte en hacking, c'est la d\u00e9esse v\u00e9n\u00e9r\u00e9e des hackers. Un hacker, c'est un peu une instance de Eve.</p> <p></p> <p>Alice et Bob veulent continuer de pouvoir faire du chiffrement sym\u00e9trique, mais Eve trouve toujours un moyen de leur chourrer la cl\u00e9. Qu'\u00e0 cel\u00e0 ne tienne, ils ont soumi leur probl\u00e8me \u00e0 Diffie et Hellman qui leur ont trouv\u00e9 une solution. (Alice et Bob ne r\u00e9solvent pas vraiment tout seuls leurs probl\u00e8mes, ils demandent toujours de l'aide \u00e0 des gens qui n'ont que \u00e7a \u00e0 faire).</p> <p></p> <p>L'id\u00e9e, c'est de construire une cl\u00e9 de chiffrement sym\u00e9trique commune \\(K\\) sans que jamais elle ne soit communiqu\u00e9e.</p> <p>Alice et Bob disposent d'une cl\u00e9 publique. Elle est tellement publique qu'ils la distribuent en soir\u00e9e. Tr\u00e8s tr\u00e8s publique.</p> <p>Alice et Bob disposent d'une fonction \\(f_k: \\mathbb{N} \\rarr \\mathbb{N}\\). Cette fonction fait aussi partie des informations publiques. C'est une fonction de chiffrement. \\(k\\) est une information de cl\u00e9. Calculer \\(f_k(M)\\) revient \u00e0 chiffrer le message \\(M\\) avec la cl\u00e9 \\(k\\).</p> <p>Alice et Bob disposent chacun d'une cl\u00e9 priv\u00e9e (\\(a\\) pour Alice et \\(b\\) pour Bob)qui ne doit JAMAIS \u00eatre divulgu\u00e9e, ni m\u00eame entre eux. Ce sont les seules informations secr\u00e8tes. Tout le reste, m\u00eame la m\u00e9thode, est publique.</p> <p>Voici comment ils vont s'y prendre:</p> <pre><code>sequenceDiagram\nNote over Alice, Bob: Alice d\u00e9tient une cl\u00e9 priv\u00e9e a &lt;br&gt; Bob d\u00e9tient une cl\u00e9 priv\u00e9e b&lt;br&gt;Tous 2 ont la cl\u00e9 publique p\nNote over Alice: Alice calcule A=fp(a)&lt;br&gt;Elle chiffre sa cl\u00e9 priv\u00e9e &lt;br&gt;avec la cl\u00e9 publique\nAlice -&gt;&gt; Bob: A\nNote over Bob: Bob calcule K=fb(A) &lt;br&gt; Il chiffre A &lt;br&gt;avec sa cl\u00e9 priv\u00e9e\nNote over Bob: Bob calcule B=fp(b) &lt;br&gt; Il chiffre sa cl\u00e9 priv\u00e9e &lt;br&gt;avec la cl\u00e9 publique\nBob -&gt;&gt; Alice: B\nNote over Alice: Alice calcule K=fa(B) &lt;br&gt; Elle chiffre B &lt;br&gt;avec sa cl\u00e9 priv\u00e9e\nNote over Alice, Bob: Par le pouvoir du cr\u00e2ne &lt;br&gt;ancestral, ils ont le m\u00eame K</code></pre> <p>Pouvoir du cr\u00e2ne ancestral \u2935\ufe0f </p> <p>Eve a sniff\u00e9 toutes les communications, elle est donc en possession de: - A - B - la cl\u00e9 publique p - Elle conna\u00eet aussi la fonction utilis\u00e9e.</p> <p>Vu qu'elle intercepte A, elle est en possession de \\(f_k(a)\\). Il lui suffit donc de calculer \\(f_k^{-1}(A)\\) pour trouver a, et tout le syst\u00e8me tombe.</p> <p>Pour mieux comprendre, on va imaginer que la fonction est celle-ci: \\(\\(\\large f_k : x \\mapsto k.x\\)\\)</p> <pre><code>sequenceDiagram\nNote over Alice: A=fp(a)=p.a\nAlice -&gt;&gt; Bob: A\nNote over Bob: K=fb(A)=p.a.b\nNote over Bob: B=fp(b)=p.b\nBob -&gt;&gt; Alice: B\nNote over Alice: K=fb(B)=p.a.b</code></pre> <p>Alice et Bob ont bien le m\u00eame \\(K\\) sans avoir \u00e9chang\u00e9 leur cl\u00e9.</p> <p>Cependant, Eve intercepte A, donc \\(f_p(a)\\)</p> <p>Elle sait que \\(f_k(x)=k.x\\)</p> <p>Elle cherche donc sa fonction r\u00e9ciproque.</p> <p>Elle r\u00e9soud donc \\(y=k.x\\) en \\(x\\)</p> <p>Elle trouve \\(\\displaystyle x= \\frac{y}{k}\\)</p> <p>Elle en d\u00e9duit que \\(\\displaystyle f_k^{-1}(y)=\\frac{y}{k}\\)</p> <p>Elle dispose de p, donc elle calcule \\(\\displaystyle f_p^{-1}(A)=\\frac{A}{p}\\)</p> <p>En interceptant B, elle peut en d\u00e9duire b de la m\u00eame fa\u00e7on et reconstruire la cl\u00e9 partag\u00e9e \\(K\\).</p> <p>Si on veut aller plus loin, Bob peut tout \u00e0 fait aussi reconstituer la cl\u00e9 d'Alice par le m\u00eame moyen.</p> <p>Tout le probl\u00e8me est donc de trouver une fonction \\(\\bold{f_k}\\) dont la r\u00e9ciproque est tr\u00e8s difficile \u00e0 calculer</p> <p>De telles fonctions existent, elles sont au coeur de la cryptographie moderne. On les appelle des Fonctions \u00e0 sens unique</p> <p>Fonction \u00e0 sens unique</p> <p>Une fonction \u00e0 sens unique (one-way function) est une fonction \\(f\\) telle que :</p> <ul> <li>Il est facile de calculer \\(f(x)\\) pour tout \\(x\\)</li> <li>Il est difficile (ou impossible) de retrouver \\(x\\) \u00e0 partir de \\(f(x)\\)</li> </ul> <p>Alors on ne va pas y aller par 4 chemins et je vais directement vous pr\u00e9senter la fonction qui nous int\u00e9resse ici. On l'appelle l'exponentielle modulaire:</p> <p>Pour un entier \\(p\\) fix\u00e9, voici la fonction que nous utiliserons:</p> \\[\\Huge f_{k} : x \\mapsto x^k \\mod p\\] <p>En python, \u00e7a correspond \u00e0 l'expression <code>(g**x)%p</code></p> <p>Il n'existe pas de formule pour la r\u00e9ciproque. On est oblig\u00e9 de proc\u00e9der algorithmiquement pour chaque cas et le calcul est difficile quand p est un grand nombre premier. La recherche de son inverse est qualifi\u00e9e de probl\u00e8me du logarithme discret. On ne sait pas le faire en temps raisonnable (apr\u00e8s avoir travaill\u00e9 sur le probl\u00e8me TSP, vous comprenez maintenant tr\u00e8s bien cette phrase en informatique).</p> <p>Alice et Bob ont alors:</p> <ul> <li>Une cl\u00e9 publique comportant<ul> <li>Un entier \\(g\\)</li> <li>Un grand nombre premier \\(p\\)</li> </ul> </li> <li>Chacun leur cl\u00e9 priv\u00e9e \\(a\\) et \\(b\\)</li> </ul> <pre><code>sequenceDiagram\nNote over Alice: A=fg(a)=g^a mod p\nAlice -&gt;&gt; Bob: A\nNote over Bob: K=fb(A)=A^b mod p\nNote over Bob: B=fg(b)=g^b mod p\nBob -&gt;&gt; Alice: B\nNote over Alice: K=fa(B)=B^a mod p</code></pre> <p>Ainsi, m\u00eame si Eve intercepte \\(A\\) et \\(B\\), elle est dans l'incapacit\u00e9 de retrouver \\(a\\) et \\(b\\) pour ainsi reconstituer \\(K\\)</p> <p>Aussi, il faut quand m\u00eame montrer qu'on a effectivement un \\(K\\) identique de chaque c\u00f4t\u00e9. Ca tient en une ligne quand on a fait un peu d'arithm\u00e9tique.</p> \\[f_a(B) \\equiv B^a \\equiv (g^b)^a \\equiv g^{ab} \\equiv (g^a)^b \\equiv A^b \\equiv f_b(A) \\pmod p\\]"},{"location":"terminale/architecture_reseau/chiffrement2/#la-pratique","title":"La pratique","text":"<p>Pour cette activit\u00e9, vous vous mettrez en bin\u00f4me.</p> <ol> <li>Dans MSYS2, g\u00e9n\u00e9rez un grand nombre premier gr\u00e2ce \u00e0 openssl, \u00e7a sera votre \\(p\\) commun. Si vous n'avez pas openssl, <code>pacman -S openssl</code></li> </ol> <pre><code>openssl prime -generate -bits 2048\n</code></pre> <ol> <li> <p>Pour \\(g\\), en th\u00e9orie, il faut prendre ce qu'on appelle une racine primitive de \\(p\\), mais en r\u00e9alit\u00e9, quand \\(p\\) est tr\u00e8s grand, 2 est suffisant. On prendra 2.</p> </li> <li> <p>Pour constituer votre cl\u00e9 priv\u00e9e, vous utiliserez le module secrets, qui est l'\u00e9quivalent de random pour faire de la crypto. et vous utiliserez sa  secrets.randbits afin de g\u00e9n\u00e9rer une cl\u00e9 priv\u00e9e de la taille de la cl\u00e9 publique, mais strictement inf\u00e9rieure \u00e0 la cl\u00e9 publique.</p> </li> </ol>"},{"location":"terminale/architecture_reseau/routage/","title":"Le Routage","text":""},{"location":"terminale/architecture_reseau/routage/#1-introduction-au-routage","title":"1. Introduction au Routage","text":""},{"location":"terminale/architecture_reseau/routage/#11-definition-du-routage","title":"1.1 D\u00e9finition du Routage","text":"<p>Le routage est le processus de transmission de donn\u00e9es entre diff\u00e9rents r\u00e9seaux. Il implique la s\u00e9lection du chemin optimal pour atteindre la destination, assurant ainsi une communication efficace.</p>"},{"location":"terminale/architecture_reseau/routage/#12-importance-du-routage-dans-les-reseaux","title":"1.2 Importance du Routage dans les R\u00e9seaux","text":"<p>Le routage est essentiel pour connecter des r\u00e9seaux h\u00e9t\u00e9rog\u00e8nes et acheminer les donn\u00e9es de mani\u00e8re intelligente. Il permet la croissance des r\u00e9seaux tout en maintenant des performances optimales.</p>"},{"location":"terminale/architecture_reseau/routage/#13-types-de-routage","title":"1.3 Types de Routage","text":"<ul> <li>Routage Statique : Les itin\u00e9raires sont configur\u00e9s manuellement. Simple, mais peut \u00eatre difficile \u00e0 g\u00e9rer dans des r\u00e9seaux dynamiques.</li> <li>Routage Dynamique : Les itin\u00e9raires sont d\u00e9termin\u00e9s automatiquement par des protocoles de routage. Plus adaptable \u00e0 des environnements en \u00e9volution.</li> </ul>"},{"location":"terminale/architecture_reseau/routage/#2-tables-de-routage-dun-routeur","title":"2. Tables de routage d'un routeur","text":"<p>La table de routage associe des destinations \u00e0 des interfaces de sortie et aux co\u00fbts associ\u00e9s (la m\u00e9trique, qui d\u00e9pend de la m\u00e9thode de routage).</p> <p>Interface</p> <p>Attention, pour simplifier, quand on parle d'interface, on parle de carte r\u00e9seau, pas de machine. Ca n'est pas votre ordinateur qui a une adresse IP. C'est la carte r\u00e9seau. Si vous avez plusieurs cartes r\u00e9seau, vous avez plusieurs adresses IP. Derri\u00e8re un routeur, chaque prise correspond \u00e0 une interface diff\u00e9rente, dont \u00e0 une adresse IP diff\u00e9rente, souvent sur des sous-r\u00e9seaux diff\u00e9rents.</p> <p>Lorsqu\u2019un routeur re\u00e7oit un paquet celui-ci comporte une adresse IP de destination. Pour savoir dans quelle direction envoyer le paquet, chaque routeur poss\u00e8de une table de routage.</p> <p>Une table de routage est un tableau indiquant pour chaque r\u00e9seau de destination(connu \u00e0 partir de l\u2019IP de la destination), quelle interface r\u00e9seau on peut utiliser en lui associant \u00e9galement une m\u00e9trique qui mesure la \u00abdistance\u00bb s\u00e9parant le routeur du r\u00e9seau de destination.</p> <p>Afficher une table de routage:</p> <ul> <li>Sous Windows : <code>route print</code></li> <li>Sous Unix/OS X : <code>netstat -rn</code></li> <li>Sous Linux : <code>ip -4/-6 route</code></li> </ul>"},{"location":"terminale/architecture_reseau/routage/#diagramme-dun-reseau","title":"Diagramme d\u2019un r\u00e9seau","text":"<p>Les adresses pr\u00e8s des switchs sont les adresses r\u00e9seau.</p> <p></p> <p>Ce r\u00e9seau contient:</p> <ul> <li>Trois r\u00e9seaux locaux:<ul> <li>R1 dont l\u2019adresse est 172.168.0.0/16 avec trois machines M1 \u00e0 M3.</li> <li>R2 dont l\u2019adresse est 10.0.0.0/8 avec trois machines M4 \u00e0 M6.</li> <li>R3 dont l\u2019adresse est 172.169.0.0/16 avec deux machines M7 et M8.</li> </ul> </li> <li>Deux routeurs:<ul> <li>Routeur A qui poss\u00e8de 3 interfaces r\u00e9seau que l\u2019on nomme eth0, eth1 et eth2. Les adresses IP li\u00e9es \u00e0 ces interfaces r\u00e9seau sont : 172.168.255.254/16 (eth0), 172.169.255.254/16 (eth2) et 192.168.7.1/24 (eth1).</li> <li>Routeur G qui poss\u00e8de 2 interfaces r\u00e9seau que l\u2019on nomme eth0 et eth1. Les adresses IP li\u00e9es \u00e0 ces interfaces r\u00e9seau sont : 10.255.255.254/8 (eth0) et 192.168.7.2/24 (eth1).</li> </ul> </li> </ul> <p>Voici une table de routage possible simplifi\u00e9e du routeur A:</p> R\u00e9seau Interface M\u00e9trique 172.168.0.0/16 eth0 0 192.168.7.0/24 eth1 0 172.169.0.0/16 eth2 0 10.0.0.0/8 eth1 1"},{"location":"terminale/architecture_reseau/routage/#3-routage-statique","title":"3. Routage Statique","text":""},{"location":"terminale/architecture_reseau/routage/#31-concept-de-routage-statique","title":"3.1 Concept de Routage Statique","text":"<p>Le routage statique implique la configuration manuelle des itin\u00e9raires sur un routeur. Les itin\u00e9raires restent inchang\u00e9s jusqu'\u00e0 ce qu'ils soient modifi\u00e9s manuellement.</p>"},{"location":"terminale/architecture_reseau/routage/#32-configuration-des-routes-statiques","title":"3.2 Configuration des Routes Statiques","text":"<p>Les routes statiques sont configur\u00e9es en ajoutant des entr\u00e9es manuelles dans la table de routage du routeur.</p>"},{"location":"terminale/architecture_reseau/routage/#33-avantages-et-inconvenients-du-routage-statique","title":"3.3 Avantages et Inconv\u00e9nients du Routage Statique","text":"<p>Avantages : Contr\u00f4le total sur les itin\u00e9raires. Inconv\u00e9nients : Difficile \u00e0 maintenir dans des r\u00e9seaux complexes.</p>"},{"location":"terminale/architecture_reseau/routage/#4-routage-dynamique","title":"4. Routage Dynamique","text":""},{"location":"terminale/architecture_reseau/routage/#41-fonctionnement-du-routage-dynamique","title":"4.1 Fonctionnement du Routage Dynamique","text":"<p>Le routage dynamique utilise des protocoles de routage pour automatiser le processus de d\u00e9couverte et de s\u00e9lection des itin\u00e9raires. Deux protocoles couramment utilis\u00e9s sont RIP (Routing Information Protocol) et OSPF (Open Shortest Path First).</p>"},{"location":"terminale/architecture_reseau/routage/#42-protocoles-de-routage-dynamique","title":"4.2 Protocoles de Routage Dynamique","text":"<p>Nous utiliserons ce diagramme \u00e0 partir de maintenant</p> <p></p>"},{"location":"terminale/architecture_reseau/routage/#421-rip-routing-information-protocol","title":"4.2.1 RIP (Routing Information Protocol)","text":"<p>Fonctionnement : RIP mesure la distance en sauts (nombre de routeurs \u00e0 traverser) entre les routeurs pour d\u00e9terminer la meilleure route vers une destination. C'est \u00e0 dire celle qui n\u00e9cessite le moins de sauts. Les routeurs \u00e9changent p\u00e9riodiquement des informations de routage, et chaque routeur maintient une table de routage avec le nombre de sauts vers chaque r\u00e9seau.  </p> <p>Au d\u00e9part chaque routeur ne connait que les r\u00e9seaux directement accessibles, avec une distance nulle.</p> <p>Ensuite, toutes les 30 secondes, les r\u00e9seaux envoient leurs tables de routages \u00e0 leurs voisins directement accessibles, \u00e0 la r\u00e9ception chaque routeur met \u00e0 jour sa table de routage en associant \u00e0 chaque destination la passerelle avec la plus courte distance en saut.</p> <p>L'algorithme utilis\u00e9 est une variante distribu\u00e9e de l'algorithme de Bellman-Ford, qui permet \u00e0 chaque n\u0153ud de calculer la distance entre 2 sommets d'un graphe selon cette d\u00e9finition r\u00e9cursive (pour un graphe non pond\u00e9r\u00e9):</p> \\[\\large d(x, y, V) = \\begin{cases}    0 &amp;\\text{si } x=y \\\\    \\infin &amp;\\text{si } x \\in V \\\\    \\displaystyle \\min_{v \\in voisins(x)\\backslash V} 1 + d(v,y, V \\cup \\{x\\}) &amp;\\text{sinon} \\end{cases} \\] <p>\\(V\\) est l'ensemble des voisins visit\u00e9s.</p> <p>On calcule 1 plus la distance de \\(v\\) \u00e0 \\(y\\) pour chaque voisin \\(v\\) de \\(x\\) non visit\u00e9. Puis en prenant le minimum, on obtient notre r\u00e9sultat. Il sera assez simple de programmer une telle formule lorsque vous aure compris la programmation dynamique. Pour un graphe pond\u00e9r\u00e9, il suffit de remplacer le \\(1\\) par \\(c(x,v)\\) qui est le poids (ou co\u00fbt) de l'ar\u00eate \\((x,v)\\)</p> <p>Question</p> <ol> <li>En vous basant sur le protocole RIP (m\u00e9trique = nombre de sauts), d\u00e9terminez la table de routage du routeur A</li> <li>Quel est, d\u2019apr\u00e8s la table de routage construite ci-dessus, le chemin qui sera emprunt\u00e9 par un paquet pour aller d\u2019une machine ayant pour adresse IP 172.18.1.1/16 \u00e0 une machine ayant pour adresse IP 172.16.5.3/16 ?</li> </ol> <p>Sur de grands r\u00e9seaux, ce protocole provoque un trafic important, et de plus il poss\u00e8de des failles de s\u00e9curit\u00e9 rendant ces r\u00e9seaux vuln\u00e9rables \u00e0 certaines attaques.</p>"},{"location":"terminale/architecture_reseau/routage/#422-ospf-open-shortest-path-first","title":"4.2.2 OSPF (Open Shortest Path First)","text":"<p>Fonctionnement : OSPF utilise un algorithme SPF (Shortest Path First) pour calculer le chemin le plus court vers chaque r\u00e9seau. Les routeurs \u00e9changent des informations sur l'\u00e9tat de leurs liens, et une base de donn\u00e9es topologique est construite pour d\u00e9terminer le meilleur chemin. Cet algorithme est une application concr\u00e8te de l'algorithme de Dijkstra (Encore un BFS avec plugin).</p> <p>Dans le protocole OSPF, les routeurs ont une vision globale du r\u00e9seau et pas seulement de leurs voisins directs.</p> <p>De plus, la m\u00e9trique utilis\u00e9e n\u2019est plus le nombre de sauts, mais le co\u00fbt de la liaison. Celui-ci tient compte du d\u00e9bit binaire de chaque liaison en bits par seconde.</p> <p>On d\u00e9finit le co\u00fbt par l\u2019expression:</p> \\[\\text{co\u00fbt} = {10^8\\over \\text{d\u00e9bit en Mbit/s}} \\] <p>Le co\u00fbt est inversement proportionnel \u00e0 la vitesse, donc il est faible quand la vitesse est \u00e9lev\u00e9e, et vice-versa.</p> <p>On peut repr\u00e9senter le r\u00e9seau par un graphe dans laquelle les routeurs et les switchs sont des noeuds et les liaisons des ar\u00eates \u00e9tiquet\u00e9es avec des co\u00fbts.</p> <p>On cherche donc le chemin de co\u00fbt le plus faible dans le graphe pond\u00e9r\u00e9 associ\u00e9 au r\u00e9seau.</p> <p>Question</p> <ol> <li>En vous basant sur le protocole OSPF (m\u00e9trique = somme des co\u00fbts), d\u00e9terminez la table de routage du routeur A.</li> <li>On donne les d\u00e9bits suivants :<ul> <li>liaison routeur A - routeur B : 1 Mbit/s</li> <li>liaison routeur A - routeur C : 10 Mbit/s</li> <li>liaison routeur C - routeur B : 10 Mbit/s   Quel est, d\u2019apr\u00e8s la table de routage construite ci-dessus, le chemin qui sera emprunt\u00e9 par un paquet pour aller d\u2019une machine ayant pour adresse IP 172.18.1.1/16 \u00e0 une machine ayant pour adresse IP 172.16.5.3/16 ?</li> </ul> </li> </ol>"},{"location":"terminale/architecture_reseau/routage/#algorithme-de-dijkstra","title":"Algorithme de Dijkstra","text":"<p>Le protocole OSPF (Open Shortest Path First) est une impl\u00e9mentation distribu\u00e9e de l\u2019algorithme de Dijkstra. Cet algorithme calcule le plus court chemin depuis un sommet vers tous les autres dans un graphe pond\u00e9r\u00e9 sans poids n\u00e9gatif.</p> <p>Dijkstra repose sur une id\u00e9e proche du parcours en largeur (BFS), mais avec une am\u00e9lioration essentielle : on ne visite pas les sommets \"dans l\u2019ordre o\u00f9 on les d\u00e9couvre\", mais \"dans l\u2019ordre croissant de leur co\u00fbt depuis la source\".</p> <p>Cela n\u00e9cessite une structure de donn\u00e9es particuli\u00e8re appel\u00e9e file de priorit\u00e9 (ou priority queue). Contrairement \u00e0 une file FIFO classique, dans une file de priorit\u00e9, on extrait toujours l\u2019\u00e9l\u00e9ment ayant la priorit\u00e9 la plus \u00e9lev\u00e9e (ici : la distance minimale).</p> <p>On peut impl\u00e9menter la file de priorit\u00e9 avec une structure efficace, comme par exemple un tas binaire (binary heap) qui permet des op\u00e9rations rapides en :</p> <ul> <li>insertion</li> <li>extraction du minimum</li> <li>diminution de cl\u00e9</li> </ul>"},{"location":"terminale/bdd/","title":"Base de donn\u00e9es et SGBD","text":"<p>EN CONSTRUCTION</p> <p>Introduction</p> <p>Une base de donn\u00e9es est un ensemble de donn\u00e9es structur\u00e9es.</p> <p>Un syst\u00e8me de gestion de bases de donn\u00e9es (SGBD) est un outil permattant de stocker et d'interagir avec des bases de donn\u00e9es.</p> <p>Il existe plusieurs mod\u00e8les pour stocker les donn\u00e9es dans une base de donn\u00e9es.</p> <p>Nous allons nous int\u00e9resser au mod\u00e8le dit relationnel.</p> <p>Nous utiliserons les SGBD SQLite et Postgresql.</p>"},{"location":"terminale/bdd/#le-modele-relationnel","title":"Le mod\u00e8le relationnel","text":"<p>Nous travaillerons avec cette base de donn\u00e9es exemple bien connue qui s'appelle chinook.</p> <p></p>"},{"location":"terminale/bdd/#la-theorie-de-lalgebre-relationnelle","title":"La th\u00e9orie de l'alg\u00e8bre relationnelle","text":"<p>Ne vous laissez pas avoir par le caract\u00e8re ronflant des d\u00e9finitions. Au final, on manipule des lignes et des colonnes.</p> <p>Relation</p> <p>Une relation est un ensemble fini d'entit\u00e9s relevant d'un m\u00eame concept. les entit\u00e9s sont d\u00e9crites par certaines de leur caract\u00e9ristiques. Une relation a un nom par lequel elle est identifi\u00e9e.</p> <p>Sur le dessin de la base de donn\u00e9es, Chaque \"bo\u00eete\" est une relation. Par exemple, on a la relation Artiste.</p> <p>Attributs</p> <p>Toute caract\u00e9ristique d\u00e9crivant les entit\u00e9s de la relation est appel\u00e9e attribut de la relation.</p> <p>Par exemple, la relation Artiste a l'attribut Name.</p> <p>Domaine d'un attribut</p> <p>Chaque attribut a un domaine. Il s'agit de l'ensemble des valeurs que peut prendre l'attribut. Le domaine de l'attribut Name de la relation Artiste est \"cha\u00eene de caract\u00e8res\"</p> <p>Vocabulaire</p> <p>En pratique, les mots attributs, relation et sch\u00e9ma ne sont pas utilis\u00e9s en dehors de l'\u00e9tude de l'alg\u00e8bre relationnelle, qui constitue l'outil th\u00e9orique derri\u00e8re le mod\u00e8le relationnel.</p> <p>Vous entendrez parler de:</p> <ul> <li>Tables pour les relations</li> <li>Champs (Fields) ou colonnes (columns), pour les attributs</li> <li>Enregistrements (Records) ou lignes (rows) pour les entit\u00e9s</li> <li>Le mot sch\u00e9ma est souvent utilis\u00e9 pour d\u00e9crire l'ensemble des tables constituant une base de donn\u00e9es.</li> </ul> <p>Notations - Alg\u00e8bre relationnelle</p> <p>Soit \\(R\\) une relation avec n attributs. Cette relation est not\u00e9e \\(R(a_1:dom_1, a_2: dom_2, ..., a_n:dom_n)\\)</p> <p>Par exemple, pour employee: Employee(EmployeeId: entier, LastName: cha\u00eene de caract\u00e8re, FirstName: .....)</p> <p>Un n-uplet (ou tuple) de \\(R\\), est une entit\u00e9 respectant le sch\u00e9ma de \\(R\\).</p> <p>L'ensemble des n-uplets d'une relation \u00e0 un instant donn\u00e9 compose une instance de la relation.</p> <p>Cette d\u00e9finition ensembliste n'est pas anodine car elle impose que l'ordre des n-uplets n'a pas d'importance et qu'il ne peut pas y avoir de n-uplets identiques.</p>"},{"location":"terminale/bdd/#la-pratique","title":"La pratique","text":"<p>Un SGBD est un outil permettant de stocker et d'interagir avec des bases de donn\u00e9es.</p> <p>SQL</p> <p>SQL (Structured Query Language) est un langage de requ\u00eate structurel. Il permet de manipuler des bases de donn\u00e9es structur\u00e9es. Il fonctionne avec des clauses.</p>"},{"location":"terminale/bdd/#requetes-sql","title":"Requ\u00eates SQL","text":"<p>Les clauses SELECT et FROM</p> <p>Sous cet encart, \u00e9crivez et ex\u00e9cutez: <pre><code>SELECT mediatypeid, name\nFROM media_types;\n</code></pre></p> <ul> <li>La clause FROM permet de signifier les relations sur lesquelles vous voulez travailler.</li> <li>La clause SELECT permet de demander quels attributs vous voulez obtenir, s\u00e9par\u00e9s par une virgule.</li> <li><code>*</code> signifie tous les attributs de la relation.</li> <li>Toute requ\u00eate se termine par un point-virgule</li> </ul> <p>Essayez ces autres requ\u00eates: <pre><code>SELECT *\nFROM media_types;\n\nSELECT title\nFROM albums\nLIMIT 3;\n</code></pre></p> <ul> <li>En SQLite, la clause LIMIT permet de ne renvoyer que les premiers enregistrements. C'est pratique pour tester des requ\u00eates sans afficher des milliers de r\u00e9sultats.</li> </ul> Ex\u00e9cuter des requ\u00eates sur chinook: Ex\u00e9cuter <pre></pre> <p>La clause WHERE</p> <p>La clause where permet d'\u00e9mettre une condition sur les enregistrements r\u00e9cup\u00e9r\u00e9s. Par exemple, pour conna\u00eetre tous les clients habitant en France, ex\u00e9cutez:</p> <pre><code>SELECT *\nFROM customers\nWHERE country = 'France';\n</code></pre> <p>Essayez cette autre requ\u00eates: <pre><code>SELECT *\nFROM customers\nWHERE country = 'France' AND city = 'Paris';\n</code></pre></p> <p>Dans une clause WHERE, on \u00e9met une condition sur les attributs des tables sur lesquelles on travaille.</p> <p>L'op\u00e9rateur pratique LIKE</p> <p>L'op\u00e9rateur like permet une recherche bas\u00e9e sur un motif.</p> <ul> <li><code>WHERE Name LIKE 'A%'</code> : renvoie vrai pour tous les noms qui commencent par \"A\".</li> <li><code>WHERE Name LIKE '%land'</code> : renvoie vrai pour tous les noms qui se terminent par \"land\".</li> <li><code>WHERE Name LIKE '%an%'</code> : renvoie vrai pour tous les noms contenant \"an\".</li> </ul> <p><code>%</code> repr\u00e9sente 0 ou plusieurs caract\u00e8res</p> <ul> <li><code>WHERE Name LIKE 'J_n'</code> : renvoie vrai pour \"Jan\", \"Jon\", etc.</li> <li><code>WHERE Name LIKE 'C_t%'</code> : renvoie vrai pour \"Cat\", \"Cut\", etc.</li> </ul> <p><code>_</code> repr\u00e9sente un seul caract\u00e8re</p> <p>Entra\u00eenement et CheatSheet</p> <p>Voici un lien o\u00f9 vous pouvez vous entra\u00eener sur des exemples vari\u00e9s: Entra\u00eenement SQL</p> <p>Et voici une cheatsheet sur les fonctionnalit\u00e9s basiques: SQL CheatSheet</p> <p>Exercices - automatismes</p> <p>Pour chaque item de la liste suivante, \u00e9crivez la requ\u00eate qui permet de l'obtenir. Notez que dans le contxte d'\u00e9valuation \u00e9crite, vous devez progressivement vous efforcer d'\u00e9crire vos requ\u00eates afin qu'elles fonctionnent du premier coup, et pas d'y aller au petit bonheur la chance.</p> <p>Vous conserverez les r\u00e9ponses dans un fichier .sql</p> <p>Vous pouvez \u00e9crire des commentaires dans un fichier sql en les faisant pr\u00e9c\u00e9der de <code>--</code></p> <ol> <li>Les clients situ\u00e9s dans le pays \"Canada\".</li> <li>Le pr\u00e9nom et le nom des clients vivant \u00e0 \"Paris\".</li> <li>Les clients dont l'email contient \"yahoo\".</li> <li>Les clients dont l'identifiant de support est \"3\".</li> <li>Les noms des employ\u00e9s qui travaillent dans la ville de \"Calgary\".</li> <li>Les employ\u00e9s avec le titre \"Sales Support Agent\".</li> <li>Les employ\u00e9s engag\u00e9s apr\u00e8s l'ann\u00e9e 2003.</li> <li>Les informations des employ\u00e9s dont le sup\u00e9rieur a l'ID \"1\".</li> <li>Les factures d'un client ayant l'ID \"10\".</li> <li>Les factures dont le total est sup\u00e9rieur \u00e0 10.</li> <li>Les factures \u00e9mises en \"2010\".</li> <li>Les factures provenant du pays \"USA\".</li> <li>Les titres dont la dur\u00e9e d\u00e9passe 5 minutes.</li> <li>Les artistes dont le nom contient \"The\".</li> <li>Les artistes dont le nom commence par \"A\".</li> <li>Les albums dont le titre contient \"Greatest Hits\".</li> </ol> Ex\u00e9cuter des requ\u00eates sur chinook: Ex\u00e9cuter <pre></pre> <p>Les fonctions d'agr\u00e9gation</p> <ul> <li>SUM : Calcule la somme des valeurs d'une colonne.</li> <li>COUNT : Compte le nombre de lignes (ou d'\u00e9l\u00e9ments non nuls) dans une colonne.</li> <li>MAX : Retourne la valeur maximale d'une colonne.</li> <li>MIN : Retourne la valeur minimale d'une colonne.</li> <li>AVG : Calcule la moyenne des valeurs d'une colonne. (average)</li> </ul> <p>Par exemple, pour obtenir le nombre de factures, vous pouvez utiliser <code>SELECT COUNT(*) FROM invoices;</code></p> <p>Pour calculer la moyenne du montant des factures, vous pouvez utiliser <code>SELECT AVG(total) FROM invoices;</code></p> <p>Exercices - fonctions d'agr\u00e9gation</p> <p>Calculer:</p> <ol> <li>Le nombre de factures.</li> <li>La somme des montants des factures.</li> <li>La moyenne des montants des factures.</li> <li>La valeur minimale des montants des factures.</li> <li>La valeur maximale des montants des factures.</li> </ol>"},{"location":"terminale/bdd/jointure/","title":"Jointures","text":"<p>Lorsqu'on veut r\u00e9cup\u00e9rer des donn\u00e9es provenant de plusieurs tables, on utilise des jointures.</p>"},{"location":"terminale/bdd/jointure/#sur-un-exemple-theorique","title":"Sur un exemple th\u00e9orique","text":"<p>Voici le script utilis\u00e9 pour le premier exemple. Les donn\u00e9es sont volontairement bidons car nous nous int\u00e9ressons tout d'abord \u00e0 la notion de produit cart\u00e9sien</p> <pre><code>CREATE TABLE t1 (\n    idt1 INT PRIMARY KEY,\n    a VARCHAR(50),\n    b VARCHAR(50)\n);\n\nCREATE TABLE t2 (\n    idt2 INT PRIMARY KEY,\n    idt1 INT,\n    c INT,\n    FOREIGN KEY (idt1) REFERENCES t1(idt1)\n);\n\n-- Insertion de donn\u00e9es dans t1\nINSERT INTO t1 (idt1, a, b) VALUES\n(1, 'Alpha', 'Beta'),\n(2, 'Gamma', 'Delta'),\n(3, 'Epsilon', 'Zeta'),\n(4, 'Eta', 'Theta');\n\n-- Insertion de donn\u00e9es dans t2\nINSERT INTO t2 (idt2, idt1, c) VALUES\n(10, 3, 100),\n(11, 4, 200),\n(12, 4, 700)\n;\n</code></pre> <p>Visualiser un produit cart\u00e9sien</p> <p>Ci-dessous, ex\u00e9cutez les requ\u00eates suivante: <pre><code>select *\nfrom t1;\n\nselect *\nfrom t2;\n\n-- Cette requ\u00eate effectue le produit cart\u00e9sien de t1 et t2\nselect *\nfrom t1, t2;\n;\n</code></pre></p> Ex\u00e9cuter des requ\u00eates: Ex\u00e9cuter <pre></pre> <p>Explications</p> <p>Le produit cart\u00e9sien de deux ensembles \\(A\\) et \\(B\\) est l'ensemble des couples \\((a, b)\\) ou \\(a\\) est un \u00e9l\u00e9ment de \\(A\\) et \\(b\\) est un \u00e9l\u00e9ment de \\(B\\).</p> <p>Ici, on voit que pour chaque tuple de t1, on y a associ\u00e9 tous les tuples de t2. Ce qui est \u00e9quivalent \u00e0 dire que pour chaque tuple de t2, on y a assoi\u00e9 tous les tuples de t1.</p> <p>Produit Cart\u00e9sien</p> <p>Soient les 2 ensembles \\(A=\\{x, y, z\\}\\) et \\(B=\\{\\alpha, \\beta\\}\\). </p> <ul> <li>Ecrire l'ensemble produit cart\u00e9sien de \\(A\\) et de \\(B\\), not\u00e9 \\(A \\times B\\).</li> <li>Ecrire \\(A \\times A\\), not\u00e9 aussi \\(A^2\\).</li> <li>Ecrire \\(B \\times B \\times B\\), not\u00e9 aussi \\(B^3\\).</li> </ul> <p>Jointure</p> <p>Une jointure est un sous ensemble de produit cart\u00e9sien.</p> <p>Une jointure permet de lier deux ensembles de donn\u00e9es.</p> <p>Ici, la cl\u00e9 \u00e9trang\u00e8re idt1 de t2 nous indique que nous r\u00e9f\u00e9rons dans t2 \u00e0 un enregistrement de t1. Parmi toutes les associations possibles du produit cart\u00e9sien, les seules qui nous int\u00e9ressent sont donc celles o\u00f9 le idt1 de t2 sera \u00e9gal au idt1 de t1. Les autres tuples du produit ne nous int\u00e9ressent pas, elles ne correspondent \u00e0 rien qui n'ait du sens de la mani\u00e8re dont nous avons d\u00e9fini les donn\u00e9es.</p> <p>Ex\u00e9cutez cette requ\u00eate:</p> <pre><code>select *\nfrom t1, t2\nwhere t1.idt1 = t2.idt1\n</code></pre> <p>Ainsi, on vient de demander les informations de t2 augment\u00e9es des informations de t1 relativement \u00e0 la cl\u00e9 idt1.</p>"},{"location":"terminale/bdd/jointure/#sur-un-exemple-pratique","title":"Sur un exemple pratique","text":"<pre><code>-- Cr\u00e9ation des tables\nCREATE TABLE Artistes (\n    ArtisteId INT PRIMARY KEY,\n    Nom VARCHAR(50)\n);\n\nCREATE TABLE Albums (\n    AlbumId INT PRIMARY KEY,\n    ArtisteId INT,\n    Titre VARCHAR(100),\n    FOREIGN KEY (ArtisteId) REFERENCES Artistes(ArtisteId)\n);\n\n-- Insertion de donn\u00e9es dans Artistes\nINSERT INTO Artistes (ArtisteId, Nom) VALUES\n(1, 'Mozart'),\n(2, 'Beethoven'),\n(3, 'Chopin');\n\n-- Insertion de donn\u00e9es dans Albums\nINSERT INTO Albums (AlbumId, ArtisteId, Titre) VALUES\n(1, 1, 'Requiem'),\n(2, 1, 'Symphonie No. 40'),\n(3, 2, 'Sonate Waldstein'),\n(4, 3, 'Nocturnes');\n</code></pre> <p>Question</p> <p>De la m\u00eame mani\u00e8re, ci-dessous, ex\u00e9cutez ceci:</p> <pre><code>select * from artistes;\n\nselect * from albums;\n\nselect *\nfrom artistes, albums;\n</code></pre> Ex\u00e9cuter des requ\u00eates: Ex\u00e9cuter <pre></pre> <p>Ce qui nous int\u00e9resse ici, c'est de compl\u00e9ter les tuples de la relation album avec le nom du compositeur. En effectuant le produit cart\u00e9sien, on voit bien que Mozart n'a rien \u00e0 faire avec la sonate Waldstein, ni avec les nocturnes. Les seules associations qui nous int\u00e9ressent sont ceux qui ont le m\u00eame ArtisteId.</p> <p>aussi, on ex\u00e9cutera:</p> <pre><code>select *\nfrom artistes, albums\nwhere Artistes.ArtisteId = Albums.ArtisteId\n</code></pre> <p>Ce qui nous int\u00e9resse \u00e0 l'origine, c'est de compl\u00e9ter les titres d'album avec les noms d'artistes. On affine dans le select.</p> <pre><code>select artistes.nom, albums.titre\nfrom artistes, albums\nwhere Artistes.ArtisteId = Albums.ArtisteId\n</code></pre> <p>Alias</p> <p>Souvent, afin d'\u00e9viter d'alourdir les requ\u00eates, on utilise des alias pour les tables. On pourra ainsi \u00e9crire:</p> <pre><code>select a.nom, b.titre\nfrom artistes a, albums b\nwhere a.ArtisteId = b.ArtisteId\n</code></pre> <p>On peut aussi renommer les colonnes du r\u00e9sultat ainsi: <pre><code>select a.nom as NomArtiste, b.titre as TitreAlbum\nfrom artistes a, albums b\nwhere a.ArtisteId = b.ArtisteId\n</code></pre></p> <p>C'est tr\u00e8s souvent utilis\u00e9 car hors du contexte de laur table, le sens du nom des champs peut se perdre.</p>"},{"location":"terminale/bdd/jointure/#ce-qui-est-attendu-de-vous","title":"Ce qui est attendu de vous","text":"<p>La deuxi\u00e8me \u00e9tape, c'est d'utiliser une syntaxe sp\u00e9cifique aux jointures. Les utiliser permet d'aider l'optimisateur de requ\u00eates du SGBD, et aussi de bien s\u00e9parer les conditions de filtrage des conditions de jointure, ce qui n'est pas du luxe sur les grosses requ\u00eates. De plus il existe plusieurs types de jointures et cette syntaxe permet de bien conserver le sens de ce qu'on manipule. Le r\u00e9sultat est STRICTEMENT le m\u00eame. </p> <p>Cette syntaxe est attendue au bac</p> <pre><code>select a.nom, b.titre\nfrom artistes a\nJOIN albums b ON a.ArtisteId = b.ArtisteId\n</code></pre> <p>S\u00e9mantiquement, \u00e7a s\u00e9pare bien la jointure du reste.</p> <p>METHODE DE BASE</p> <p>Etant donn\u00e9 que vous n'avez qu'un seul type de jointure \u00e0 g\u00e9rer cette ann\u00e9e, cette technique marchera \u00e0 tous les coups. C'est visuel, et c'est simple. Aucune excuse pour rater une jointure.</p> <p>Sur le Mod\u00e8le physique de donn\u00e9es, il faut dessiner tout le chemin entre les tables qui vous int\u00e9ressent, et ajouter une ligne join par association entre table.</p> <p>Ensuite, on rajoute \u00e9ventuellement une clause where pour filtrer certaines donn\u00e9es selon la question.</p> <p>Puis on s\u00e9lectionne seulement les champs qu'on veut r\u00e9cup\u00e9rer, en utilisant des alias si des noms sont redondants, ou pour garantir unne bonne compr\u00e9hension du r\u00e9sultat de la requ\u00eate.</p> <p>Le MPD est votre meilleur ami. Il faut toujours l'avoir sous la main. S'il ne vous est pas donn\u00e9, dessinez le au brouillon.</p> <p>Jointures sur chinook</p> <ul> <li>Affichez le titre de chaque album ainsi que le nom de l'artiste qui l'a cr\u00e9\u00e9.</li> <li>Affichez le nom de chaque piste et le titre de l'album auquel elle appartient.</li> <li>Affichez le num\u00e9ro de facture, la date, et le nom complet du client pour chaque facture.</li> <li>Affichez les employ\u00e9s et le nom complet de leurs managers respectifs</li> <li>Affichez le nom de chaque piste et son genre musical</li> <li> <p>Affichez le nom des artistes ayant au moins une piste pr\u00e9sente dans une playlist.</p> </li> <li> <p>Affichez le nom des pistes et le nom de l'album pour les pistes appartenant au genre \"Rock\".</p> </li> <li>Affichez le num\u00e9ro et la date des factures, ainsi que le pr\u00e9nom et le nom des clients r\u00e9sidant au \"Canada\".</li> <li>Affichez le nom des pistes, leur genre musical et leur dur\u00e9e (en millisecondes) pour les pistes dont la dur\u00e9e d\u00e9passe 300_000 millisecondes</li> </ul> Ex\u00e9cuter des requ\u00eates sur chinook: Ex\u00e9cuter <pre></pre> <p>Grosses requ\u00eates</p> <ul> <li> <p>Quel est le prix total des pistes du genre \"Rock\" achet\u00e9es par les clients r\u00e9sidant au Canada ?</p> </li> <li> <p>Quel est le titre de l'album le plus cher ?</p> </li> <li> <p>Quel est le nom de l'artiste ayant le moins de pistes ?</p> </li> </ul>"},{"location":"terminale/bdd/jointure/#lien-avec-python","title":"Lien avec python","text":"<pre><code>artistes = [\n    {\"ArtisteId\": 1, \"Nom\": \"Mozart\"},\n    {\"ArtisteId\": 2, \"Nom\": \"Beethoven\"},\n    {\"ArtisteId\": 3, \"Nom\": \"Chopin\"}\n]\n\nalbums = [\n    {\"AlbumId\": 1, \"ArtisteId\": 1, \"Titre\": \"Requiem\"},\n    {\"AlbumId\": 2, \"ArtisteId\": 1, \"Titre\": \"Symphonie No. 40\"},\n    {\"AlbumId\": 3, \"ArtisteId\": 2, \"Titre\": \"Sonate Waldstein\"},\n    {\"AlbumId\": 4, \"ArtisteId\": 3, \"Titre\": \"Nocturnes\"}\n]\n</code></pre> <p>Voici comment nous aurions pu obtenir le resultat de la jointure exemple:</p> <pre><code>jointure = [ {\"Nom\": a[\"Nom\"], \"Titre\": b[\"Titre\"]} \n             for a in artistes \n             for b in albums \n             if a[\"ArtisteId\"] == b[\"ArtisteId\"] \n            ]\n</code></pre> <p>La double boucle r\u00e9alise le produit cart\u00e9sien (chaque a sera associ\u00e9 \u00e0 chaque b), la condition termine de r\u00e9aliser la jointure en limitant les associations aux cas qui nous int\u00e9ressent.</p>"},{"location":"terminale/bdd/manipulation-integrite/","title":"Manipulation et int\u00e9grit\u00e9","text":""},{"location":"terminale/bdd/manipulation-integrite/#constitution-et-modification-dune-base","title":"Constitution et modification d'une base","text":"<p>Des chiens et des propri\u00e9taires</p> <p>Une clinique v\u00e9t\u00e9rinaire dispose de ces donn\u00e9es sur des chiens et leur propri\u00e9taire.</p> <p>Ces donn\u00e9es ne sont pas adapt\u00e9es:</p> <ul> <li>Que doit-on faire si Pierre Leclerc change d'adresse?</li> <li>Que se passe-t-il si plusieurs personnes s'appellent Jean Dupont dans le m\u00eame immeuble?</li> </ul> <p>Dans le m\u00eame table, on a des informations sur 2 types d'entit\u00e9s: Des personnes et des chiens.</p> <p></p> <p>Ex\u00e9cutez les requ\u00eates suivantes:</p> <pre><code>PRAGMA foreign_keys=ON;            /* SQLite seulement */\nDROP TABLE IF EXISTS chien;        /* Supprimer la table chien si elle existe */\nDROP TABLE IF EXISTS proprietaire; /* Supprimer la table proprietaire si elle existe */\n</code></pre> Ex\u00e9cuter des requ\u00eates: Ex\u00e9cuter <pre></pre> <p>Cr\u00e9ation de table</p> <p>On utilise la syntaxe <code>CREATE TABLE</code>.</p> <p>Ici nous voulons cr\u00e9er la table propri\u00e9taire.</p> <p>Chaque champ a un type, il est indiqu\u00e9 quelle(s) colonne(s) portent la cl\u00e9 primaire.</p> <ul> <li>INT -&gt; Entier</li> <li>VARCHAR(50) -&gt; Cha\u00eene de caract\u00e8res de taille maximale 50</li> </ul> <p>Danger</p> <p>La base de donn\u00e9es n'autorisera pas la cr\u00e9ation d'enregistrements ayant une cl\u00e9 primaire existante.</p> <pre><code>-- Cr\u00e9ation de la table \"proprietaire\"\nCREATE TABLE proprietaire (\n    id_proprietaire INT PRIMARY KEY,\n    nom VARCHAR(50),\n    prenom VARCHAR(50),\n    adresse VARCHAR(100),\n    ville VARCHAR(50)\n);\n</code></pre> <p>Note</p> <p>On utilise la syntaxe <code>INSERT INTO</code>.</p> <p>Ici nous voulons ins\u00e9rer des enregistrements dans la table proprietaire.</p> <p>On indique l'ordre des colonnes entre parenth\u00e8se.</p> <p>On utilise la clause <code>VALUES</code> afin d'ins\u00e9rer les tuples/enregistrements.</p> <ul> <li>INT -&gt; Entier</li> <li>VARCHAR(50) -&gt; Cha\u00eene de caract\u00e8res de taille maximale 50</li> </ul> <pre><code>-- Insertion de quelques enregistrements dans la table \"proprietaire\"\nINSERT INTO proprietaire (id_proprietaire, nom, prenom, adresse, ville)\nVALUES\n    (1, 'Dupont', 'Jean', '10 Rue de la Libert\u00e9', 'Vannes'),\n    (2, 'Martin', 'Marie', '25 Avenue des Roses', 'Vannes'),\n    (3, 'Leclerc', 'Pierre', '5 Rue du Port', 'Vannes'),\n    (4, 'Dubois', 'Sophie', '30 Rue Saint-Goustan', 'Auray'),\n    (5, 'Lefevre', NULL, '15 Avenue du Belv\u00e9d\u00e8re', 'Auray');\n</code></pre> <pre><code>-- v\u00e9rification du contenu ded la table\nselect * from proprietaire;\n</code></pre> <p>Note</p> <p>On utilise la syntaxe <code>UPDATE SET WHERE</code>.</p> <p>On a enfin trouv\u00e9 le pr\u00e9nom de Monsieur Lefevre, c'est Tom.</p> <pre><code>UPDATE proprietaire\nSET prenom = 'TOM'\nWHERE id_proprietaire is null;\n</code></pre> <p>(is est sp\u00e9cifique \u00e0 null, l'\u00e9quivalent de None en Python, sinon, pour tester une \u00e9galit\u00e9, on utilise un simple =)</p> <p>Mise \u00e0 jour</p> <p>Jean Dupont s'appelle en r\u00e9alit\u00e9 Aristide Dupont. Ecrire et ex\u00e9cuter la requ\u00eate permettant ce changement.</p> <p>Question</p> <p>Voici ci-dessous la table chiens.</p> <p>Cr\u00e9er la table et ins\u00e9rer les donn\u00e9es correspondantes.</p> <pre><code>DROP TABLE IF EXISTS chien;\nCREATE TABLE chien (\n    ...,\n    ...,\n    ...,\n    FOREIGN KEY (id_proprietaire) REFERENCES proprietaire(id_proprietaire)\n);\n</code></pre> <p>La ligne FOREIGN KEY indique que la colonne id_propri\u00e9taire fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire de la table proprietaire.</p> <p>Ainsi:</p> <ul> <li>On ne peut pas ins\u00e9rer de chien dont l'id_proprietaire n'existe pas dans la table proprietaire</li> <li>On en peut pas supprimer de propri\u00e9taires qui ont des chiens (dans la table chien)</li> <li>On ne peut pas mettre \u00e0 jour un chien avec un id_proprietaire qui n'existe pas.</li> </ul> <p></p> Ex\u00e9cuter des requ\u00eates: Ex\u00e9cuter <pre></pre> <p>Anomalies d'insertion</p> <p>Lisa Potiron arrive avec un chien nomm\u00e9 Bidule.</p> <p>Voici le code que quelqu'un a \u00e9crit pour faire \u00e9tat de ces changements.</p> <pre><code>INSERT INTO chien (id_chien, nom, race, age, id_proprietaire)\nVALUES\n    (8, 'Bidule', 'Chihuahua', 1, 11);\n\nINSERT INTO proprietaire (id_proprietaire, nom, prenom, adresse, ville)\nVALUES\n    (11, 'Potiron', 'Lisa', '10 Rue de la for\u00eat', 'Auray');\n</code></pre> <p>Quels sont les probl\u00e8mes cons\u00e9cutifs qui vont \u00eatre rencontr\u00e9s lors de l'ex\u00e9cution de ces requ\u00eates d'insertion?</p> <p>Reprendre ce code afin qu'il s'ex\u00e9cute correctement.</p> <p>Anomalie de suppression</p> <p>Madame Martin est d\u00e9c\u00e9d\u00e9e. Elle a l\u00e9gu\u00e9 ses chiens \u00e0 Sophie Dubois.</p> <p>Voici le code que quelqu'un a \u00e9crit pour faire \u00e9tat de ces changements.</p> <p><pre><code>DELETE FROM proprietaire\nWHERE id = 2;\n\nUPDATE chiens\nSET proprietaire_id = 4\nWHERE proprietaire_id = 2;\n</code></pre> Quel est le probl\u00e8me qui va \u00eatre rencontr\u00e9 lors de l'ex\u00e9cution de ces requ\u00eates d'insertion?</p> <p>Reprendre ce code afin qu'il s'ex\u00e9cute correctement.</p>"},{"location":"terminale/bdd/manipulation-integrite/#contraintes-dintegrite","title":"Contraintes d'int\u00e9grit\u00e9","text":"<p>D\u00e9finition</p> <p>Une contrainte d'int\u00e9grit\u00e9 est une propri\u00e9t\u00e9 associ\u00e9e \u00e0 la base de donn\u00e9es, que les donn\u00e9es de la base doivent toujours satisfaire. Les 2 principaux types de contraintes d'int\u00e9grait\u00e9 sont les suivantes:</p> <ul> <li>Contrainte d'unicit\u00e9</li> <li>Contrainte d'inclusion</li> </ul>"},{"location":"terminale/bdd/manipulation-integrite/#contrainte-dunicite","title":"Contrainte d'unicit\u00e9","text":"<p>Contrainte d'unicit\u00e9</p> <p>Une contrainte d'unicit\u00e9 a pour objectif de permettre l'identification unique d'une entit\u00e9 au sein d'une relation, entre autre pour \u00e9viter la cr\u00e9ation d'information redondante.</p> <p>(On va donc chercher \u00e0 d\u00e9finir un ensemble d'attribut suffisant pour pouvoir identifier un enregistrement unique dans une table.)</p> <p>Supercl\u00e9 (surcl\u00e9)</p> <p>Attributs d\u2019une relation permettant d\u2019identifier un n-uplet de fa\u00e7on unique.</p> <p>Cl\u00e9 candidate (ou simplement cl\u00e9)</p> <p>Une cl\u00e9 candidate est une surcl\u00e9 de taille minimale</p> <p>Exemple</p> <p>Imaginons la relation \\(Film(titre, sortie, r\u00e9alisateur, budget, URI)\\) o\u00f9 URI est une adresse http pointant vers une page web du film.</p> <p>Des surcl\u00e9s possibles (non exhaustif) sont:</p> <ul> <li>{titre, sortie}</li> <li>{titre, sortie, r\u00e9alisateur}</li> <li>{titre, sortie, budget}</li> <li>{titre, sortie, URI}</li> <li>{titre, sortie, r\u00e9alisateur, budget}</li> <li>{titre, sortie, r\u00e9alisateur, budget, URI}</li> <li>{URI}</li> <li>{URI, titre}</li> <li>{URI, budget}</li> <li>{URI, titre, sortie}</li> <li>{URI, titre, sortie, r\u00e9alisateur}</li> </ul> <p>{titre, sortie} est une cl\u00e9 candidate mais {titre, sortie, r\u00e9alisateur} ne l'est pas car elle contient une surcl\u00e9 (elle n'est pas minimale)</p> <p>{URI} est une autre cl\u00e9 candidate mais {URI, titre} ne l'est pas pour les m\u00eames raisons.</p> <p>Cl\u00e9 Primaire (PRIMARY KEY)</p> <p>Une cl\u00e9 primaire est une cl\u00e9 candidate r\u00e9ellement choisie pour faire office de contrainte d'unicit\u00e9 sur la relation. Une relation ne comporte qu'une cl\u00e9 primaire.</p> <p>\\(\\underline{Notation}:\\)</p> <p>On Souligne dans la d\u00e9finition de la relation les attributs choisis pour cl\u00e9 primaire. Par exemple, si on choisit titre et sortie:</p> <p>\\(Film(\\underline{titre}, \\underline{sortie}, r\u00e9alisateur, budget, URI)\\)</p> <p>R\u00e9alit\u00e9 des cl\u00e9s primaires</p> <p>Dans la r\u00e9alit\u00e9, une cl\u00e9 primaire sera un identifiant qu'on donnera \u00e0 chaque enregitrement de la table. Les bases de donn\u00e9e disposent de m\u00e9canisme permettant de les g\u00e9n\u00e9rer automatiquement. Pour simplifier, lorsque vous avez un identifiant de commande, il s'agit d'une cl\u00e9 primaire de la table commandes. Lorsque vous avez un num\u00e9ro de client, il s'agit de la cl\u00e9 primaire de la table clients.</p> <p>Pourquoi? Il est g\u00e9n\u00e9ralement hasardeux de pr\u00e9sumer de l'unicit\u00e9 et de l'invariabilit\u00e9 d'un sous-ensemble d'attributs dans la relation. Par exemple, lorsque nous supposons que {titre, sortie} est une supercl\u00e9, est-on r\u00e9ellement certain que deux films ne sortiront pas en m\u00eame temps dans le monde sous le m\u00eame titre? NON. Soyez extr\u00eamement critiques \u00e0 ce sujet dans les questions qu'on pourrait vous poser</p> <p>Ceci est d'ailleurs un probl\u00e8me pour les mutuelles fran\u00e7aises qui n'ont pas le droit d'utiliser le num\u00e9ro de s\u00e9curit\u00e9 sociale dans leur syst\u00e8me d'information afin d'identifier uniquement les assur\u00e9s. Elles doivent alors se r\u00e9fugier dans la pr\u00e9somption d'unicit\u00e9 d'une multitude d'attributs, ce qui occasionne toujours et encore des probl\u00e8mes (par exemple, il faut penser \u00e0 demander aux clients le rang g\u00e9mellaire quand des parents assurent des jumeaux, plusieurs personnes ayant les m\u00eame caract\u00e9ritiques peuvent habiter dans le m\u00eame immeuble, \u00e0 l'\u00e9tat civil, des gens peuvent changer de nom, de pr\u00e9nom, de sexe, etc...). Sur des millions de personnes, ces cas qui peuvent para\u00eetre \u00e0 la marge ne peuvent pas \u00eatre ignor\u00e9s. On se retrouverait donc \u00e0 se trimballer une charette d'attributs partout o\u00f9 on veut faire r\u00e9f\u00e9rence \u00e0 une personne, d'autant plus qu'ils peuvent changer. On ne veut pas de cl\u00e9 primaire dont les attributs peuvent changer dans le temps, sous peine de devoir r\u00e9pliquer les modifications dans l'ensemble du syst\u00e8me d'information.</p> <p>Violation de cl\u00e9 primaire</p> <p>Dans la description de la table employees, le champ EmployeeId est cl\u00e9 primaire. (on voit la colonne pk \u00e0 1)</p> <p>Cette requ\u00eate d'insertion \u00e9choue car l'employeeId 1 existe d\u00e9j\u00e0:</p> <pre><code>insert into employees(EmployeeId, FirstName, LastName) \nvalues (1, 'prenom', 'nom');\n</code></pre> Ex\u00e9cuter des requ\u00eates sur chinook: Ex\u00e9cuter <pre></pre>"},{"location":"terminale/bdd/manipulation-integrite/#contrainte-dinclusion","title":"Contrainte d'inclusion","text":"<p>L'id\u00e9e ici est de s'assurer qu'\u00e0 chaque fois qu'on fait r\u00e9f\u00e9rence \u00e0 une entit\u00e9 dans une base de donn\u00e9es, celle-ci existe.</p> <p>Abstract</p> <p>Une cl\u00e9 \u00e9trang\u00e8re est un ensemble d'attributs qui est la cl\u00e9 primaire d'une autre table. Elle permet d'associer \u00e0 des entit\u00e9s de la table une entit\u00e9 provenant d'une autre table.</p> <p>Example</p> <pre><code>-- Cl\u00e9s \u00e9trang\u00e8res de la table employees\nPRAGMA foreign_key_list('employees');\n\n-- Cl\u00e9s \u00e9trang\u00e8res de la table customers\nPRAGMA foreign_key_list('customers');\n\n/* 3 premiers employ\u00e9s de la table */\nselect * from employees\nlimit 3;\n\n/* 3 premiers clients de la table */\nselect * from customers\nlimit 3;\n</code></pre> <p>Un client se voit affecter un employ\u00e9 en support. Il s'agit de la colonne SupportRepId. SupportRepId est une cl\u00e9 \u00e9trang\u00e8re de la table customer qui fait r\u00e9f\u00e9rence \u00e0 la cl\u00e9 primaire de la table employee.</p> <p>Ainsi, on voit que le client Lu\u00eds Gon\u00e7alves a pour support l'employ\u00e9 de SupportRepId 3, \u00e0 savoir Jane Peacock.</p> <p>La table employee a aussi une cl\u00e9 \u00e9trang\u00e8re qui fait r\u00e9f\u00e9rence \u00e0 elle-m\u00eame: ReportsTo (qui donne l'identifiant de son sup\u00e9rieur hi\u00e9rarchique). Jane Peacock a pour sup\u00e9rieur hi\u00e9rarchique l'identifiant 2, \u00e0 savoir Nancy Edwards, qui r\u00e9f\u00e8re elle-m\u00eame \u00e0 Andrew Adams.</p>"},{"location":"terminale/bdd/manipulation-integrite/#anomalies-liees-aux-contraintes","title":"Anomalies li\u00e9es aux contraintes","text":"<pre><code>pragma foreign_keys=0N;\n\n/* \nAnomalie d'insertion - NOT NULL\nCette requ\u00eate d'insertion \u00e9choue car le champ email est obligatoire.\nOn ne veut pas autoriser de client sans email.\n*/\n\ninsert into customers(CustomerId, FirstName, LastName) \nvalues (257, 'prenom', 'nom');\n\n/* \nAnomalie d'insertion - cl\u00e9 \u00e9trang\u00e8re\nCette requ\u00eate d'insertion \u00e9choue car il n'y a pas d'employ\u00e9 2435.\nOn n'autorise pas la cr\u00e9ation d'un client dont le support est renseign\u00e9 sans correspondre \u00e0 rien.\n*/\n\ninsert into customers(CustomerId, FirstName, LastName, Email, SupportRepId) \nvalues (257, 'prenom', 'nom', 'bidule@truc.com', 2345);\n\npragma table_info('customers');\n\n/* \nAnomalie de suppression - FOREIGN KEY\nCette requ\u00eate de suppression \u00e9choue car il y a des clients rattach\u00e9s \u00e0 cet employ\u00e9 par une cl\u00e9 \u00e9trang\u00e8re.\nSi la base autorisait la suppression de l'employ\u00e9, des clients se retrouveraient sans support associ\u00e9.\nSi on veut r\u00e9ellement supprimer l'employ\u00e9 de la base, il faut au pr\u00e9alable r\u00e9affecter tous ses clients \u00e0 d'autres employ\u00e9s.\n*/\n\ndelete from employees where EmployeeId = 3;\n</code></pre> <p>Quelques aspects l\u00e9gaux de base (recherche)</p> <ul> <li>Comment s'appelle l'ensemble des lois qui r\u00e9git en Europe la gestion des donn\u00e9es \u00e0 caract\u00e8re personnel?</li> <li>A quelle condition puis-je cr\u00e9er cette base de donn\u00e9es?</li> <li>Les donn\u00e9es personnelles de mes clients appartiennent-t-elles \u00e0 mes clients?</li> </ul> <p>Une autre clinique v\u00e9t\u00e9rinaire souhaite acheter les donn\u00e9es de ma base.</p> <ul> <li>A quelle condition puis-je l\u00e9galement le faire?</li> </ul>"},{"location":"terminale/bdd/projet/","title":"Gestion d'un lyc\u00e9e - Fullstack","text":"<p>L'application flask qui vous a \u00e9t\u00e9 transmise permet de g\u00e9rer une liste d'\u00e9l\u00e8ves stock\u00e9s dans une base de donn\u00e9es    </p> <p>C'est dur au d\u00e9but</p> <p>Il est normal de trouver cette activit\u00e9 dure au d\u00e9but, car il faut penser \u00e0 plein de choses en m\u00eame temps. Moyennant une implication constante, vous passerez un cap, non seulement dans la compr\u00e9hension des concepts, mais encore mieux, dans leur assimilation p\u00e9renne.</p> <p>Les explications techniques sont volontairement l\u00e9g\u00e8res, afin de ne pas alourdir l'acc\u00e8s \u00e0 la compr\u00e9hension globale (le point de cette activit\u00e9).</p> <p>Je ne veux pas voir de cosm\u00e9tique</p> <p>L'application est volontairement moche. Aucun CSS n'a \u00e9t\u00e9 rajout\u00e9, car la cosm\u00e9tique ajoute \u00e9norm\u00e9ment de code qui nuit \u00e0 la compr\u00e9hension globale, il y a d\u00e9j\u00e0 beaucoup \u00e0 faire et \u00e7a va vous perdre. Nous verrons ensuite qu'il est assez facile de la faire resembler \u00e0 quelque chose de regardable gr\u00e2ce \u00e0 bootstrap, pour ceux que \u00e7a int\u00e9resse.</p>"},{"location":"terminale/bdd/projet/#mission-1-analyse-et-comprehension","title":"Mission 1: Analyse et Compr\u00e9hension","text":"<p>Le protocole HTTP est bas\u00e9 sur un protocole client-serveur. Ce protocole est utilis\u00e9 par le navigateur web pour communiquer avec un serveur.</p> <p>Ce protocole inclue plusieurs types de communication, qu'on nomme des m\u00e9thodes HTTP.</p> <p>Nous ne nous pr\u00e9occuperons que de deux de ces m\u00e9thodes:</p> <ul> <li>GET<ul> <li>Il s'agit d'une requ\u00eate au serveur dans laquelle les param\u00e8tres sont tous inclus dans l'URL</li> </ul> </li> <li>POST<ul> <li>Il s'agit d'une requ\u00eate au serveur dans laquelle les param\u00e8tres sont inclus dans le corps de la requ\u00eate</li> </ul> </li> </ul> <p>En r\u00e8gle g\u00e9n\u00e9rale, Lorsqu'un utilisateur interagit avec une page web:</p> <ul> <li>Il peut cliquer sur un lien (ou une image comportant un lien)</li> </ul> <pre><code>&lt;a href=\"https://www.monsite.com/afficherproduit/idproduit/16758\"&gt;&lt;/a&gt;\n</code></pre> <p>Voici \u00e0 quoi ressemble cette requ\u00eate qui sera envoy\u00e9e au serveur:</p> <pre><code>GET /afficherproduit/idproduit/16758 HTTP/1.1\nHost: www.monsite.com\n</code></pre> <p>Ici le navigateur demande au serveur distant de lui r\u00e9pondre avec les param\u00e8tres de la requ\u00eate inclus dans le lien. Le serveur lui renverra le html permettant d'afficher la page web du produit 16758.</p> <ul> <li>Il peut soumettre un formulaire. On dit qu'il poste les donn\u00e9es d'un formulaire au serveur.</li> </ul> <p><pre><code>&lt;form method=\"POST\" action=\"https://www.monsite.com/inscription_utilisateur\"&gt;\n    &lt;input type=\"text\" name=\"prenom\"&gt;\n    &lt;input type=\"text\" name=\"nom\"&gt;\n    &lt;input type=\"submit\"&gt;\n&lt;/form&gt;\n</code></pre> En cliquant sur le bouton submit, l'utilisateur soummet son formulaire et les param\u00e8tres sont inclus dans le corps de la requ\u00eate.</p> <p>Voici \u00e0 quoi ressemble cette requ\u00eate qui sera envoy\u00e9e au serveur:</p> <pre><code>POST /inscription_utilisateur HTTP/1.1\nHost: www.monsite.com\nContent-Type: application/x-www-form-urlencoded\n\nprenom=Jean&amp;nom=Dupont\n</code></pre> <p>Le web r\u00e9side principalement sur l'exploitation de ces m\u00e9thodes.</p>"},{"location":"terminale/bdd/projet/#flask","title":"Flask","text":"<p>Flask est un framework qui permet de construire des applications web.</p> <p>Ceci suffit \u00e0 cr\u00e9er un serveur web, qui ne sait rien faire pour le moment.</p> <pre><code>from flask import Flask\n\napp = Flask(__name__)\n</code></pre> <p>Lorsqu'une requ\u00eate est envoy\u00e9e au serveur Flask, il traite la requ\u00eate et renvoie une page web au navigateur.</p> <p>Les requ\u00eates entrantes sont appel\u00e9es request et les requ\u00eates sortantes sont appel\u00e9es response.</p> <p>pour traiter l'exemple du GET, on a besoin d'ajouter une route:</p> <pre><code>@app.route('/afficherproduit/&lt;int:idproduit&gt;')\ndef afficher_produit(idproduit):\n    return f\"Affichage du produit {idproduit}\"\n</code></pre> <p>Avec ce code, la chaine de caract\u00e8res \"Affichage du produit 16758\" sera envoy\u00e9e au navigateur du client en r\u00e9ponse \u00e0 sa requ\u00eate.</p> <p>Le HTML n'est que du texte. On voudrait bien l'afficher en page web.</p>"},{"location":"terminale/bdd/projet/#jinja2","title":"Jinja2","text":"<p>Jinja2 est un moteur de template. Il permet de cr\u00e9er du texte HTML dynamique.</p> <p>Dans le r\u00e9pertoire templates (Flask a besoin de ce r\u00e9pertoire), on peut cr\u00e9er des fichiers html.</p> <p>Voici le fichier <code>templates\\produit.jinja</code> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n    &lt;head&gt;\n        &lt;title&gt;Mon site&lt;/title&gt;\n    &lt;/head&gt;\n    &lt;body&gt;\n        &lt;h1&gt;Produit {idproduit}&lt;/h1&gt;\n    &lt;/body&gt;\n&lt;/html&gt;\n</code></pre></p> <pre><code>from flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.route('/afficherproduit/&lt;int:idproduit&gt;', methods=['GET'])\ndef afficher_produit(idproduit):\n    p = svc.get_produit(idproduit)   ## Demande de donn\u00e9es\n    return render_template('produit.html', produit=p)   ## Demande et renvoi de HTML\n</code></pre> <p>Ici, la route <code>afficher_produit</code> renvoie le template <code>produit.jinja</code> avec la variable <code>idproduit</code> pass\u00e9e en param\u00e8tre. Jinja va compl\u00e9ter le texte HTML dynamiquement avant de l'envoyer au serveur.</p> <p>Ce mode de fonctionnement n'est pas propre \u00e0 Flask, on le retrouve un peu partout.</p> <p>Voici le diagramme qui r\u00e9summe la s\u00e9quence des \u00e9v\u00e8nements quand un utilsateur innteragit avec une page web:</p> <pre><code>sequenceDiagram\n    box Aqua Ce qu'il se passe sur le client\n        participant Utilisateur\n        participant Navigateur\n    end\n    box Aqua Ce qu'il se passe sur le serveur\n        participant Flask\n        participant Donnees\n        participant Jinja\n    end\n\n    Utilisateur-&gt;&gt;+Navigateur: Clique\n    Navigateur-&gt;&gt;Navigateur: genereRequete()\n    Navigateur-&gt;&gt;+Flask: envoi(Requete Http)\n    Flask-&gt;&gt;Flask: Cherche la route \u00e0 ex\u00e9cuter\n    Flask-&gt;&gt;+Donnees: demandeData(parametres)\n    Donnees--&gt;&gt;-Flask: data\n    Flask-&gt;&gt;+Jinja: demandeHTML(data)\n    Jinja-&gt;&gt;Jinja: traiteTemplate()\n    Jinja--&gt;&gt;-Flask: renvoieHTML\n    Flask--&gt;&gt;-Navigateur: reponse HTTP contenant le HTML\n    Navigateur-&gt;&gt;Navigateur: G\u00e9n\u00e9ration de l'affichage \u00e9cran\n    Navigateur-&gt;&gt;-Utilisateur: affichage</code></pre>"},{"location":"terminale/bdd/projet/#blueprints","title":"Blueprints","text":"<p>En flask, un blueprint sert d\u00e9j\u00e0 \u00e0 regrouper plusieurs routes. En effet, si on g\u00e8re des \u00e9l\u00e8ves, des profs, des salles, des agents, des cours, des notes, etc, on ne veut pas se retrouver avec un fichier qui contient tout, c'est ing\u00e9rable.</p> <p>On va donc cr\u00e9er un fichier <code>produits.py</code> qui contient toutes les routes qui concernent les produits.</p> <p>On appellera ce fichier le controlleur des produits.</p> <pre><code>from flask import Blueprint\n\nproduits = Blueprint('produits', __name__)\n\n@produits.route('/&lt;int:idproduit&gt;', methods=['GET'])\ndef afficher_produit(idproduit):\n    return render_template('produit.html', idproduit=idproduit)\n</code></pre> <p>et dans le fichier app.py:</p> <pre><code>from flask import Flask\nfrom produits import produits\n\napp = Flask(__name__)\napp.register_blueprint(produits)\n</code></pre>"},{"location":"terminale/bdd/projet/#ce-qui-vous-est-livre","title":"Ce qui vous est livr\u00e9","text":"<p>Une application minimaliste qui permet de g\u00e9rer une liste d'\u00e9l\u00e8ves.</p> <p>En r\u00e9alit\u00e9, on vous a fourni l'application contenant un CRUD pour les \u00e9l\u00e8ves.</p> <p>Un CRUD est un ensemble de fonctionnalit\u00e9s qui permettent de cr\u00e9er, lire, modifier et supprimer des donn\u00e9es relatives \u00e0 un objet formel. (Create, Read, Update, Delete).</p>"},{"location":"terminale/bdd/projet/#demarrer-lapplication","title":"D\u00e9marrer l'application","text":"<p>D\u00e9paqueter l'application dans votre r\u00e9pertoire <code>projet</code>.</p> <p>Il faut ajouter les d\u00e9pendances flask et psycopg2 (pour postgresql)</p> <pre><code>uv add flask psycopg2\n</code></pre> <p>On d\u00e9marre le serveur ainsi:</p> <pre><code>flask run --debug\n</code></pre> <p>Le site est alors accessible sur http://127.0.0.1:5000</p>"},{"location":"terminale/bdd/projet/#exercices","title":"Exercices","text":"<p>M\u00e9thode</p> <p>Les \"exercices\" suivants se font progressivement ainsi:</p> <ul> <li>Etudier les modifications de la base de donn\u00e9es \u00e0 effectuer (mettre \u00e0 jour le MPD).</li> <li>Effectuer les modifications de la base avec des donn\u00e9es exemples.</li> <li>Effectuer les changements dans le mod\u00e8le de classes en cons\u00e9quence.</li> <li>Effectuer les changements dans les services de donn\u00e9es.</li> <li>Cr\u00e9er/modifier le contr\u00f4leur n\u00e9cessaire.</li> <li>Cr\u00e9er/modifier la vue n\u00e9cessaire (le jinja).</li> <li>A chaque pas, tester.</li> </ul> <p>Ajouter l'\u00e2ge dans l'application Flask</p> <p>Lorsqu'un d\u00e9veloppeur arrive sur un projet, on lui donne une petite t\u00e2che qui sert surtout \u00e0 prendre en main une architecture parfois complexe. (Ici \u00e7a n'est pas le cas) </p> <ul> <li>En tant qu'administrateur, Je veux ajouter la possibilit\u00e9 de g\u00e9rer la date de naissance de l'\u00e9l\u00e8ve.</li> <li>En tant qu'administrateur, je veux pouvoir lire l'\u00e2ge d'un \u00e9l\u00e8ve. (ceci ne n\u00e9cessite pas de modification de la base de donn\u00e9es) </li> </ul> <p>Un \u00e9l\u00e8ve doit avoir une classe</p> <p>Sp\u00e9cification fonctionnelle:</p> <ul> <li>En tant qu'administrateur, je veux pouvoir CRUD des classes.</li> <li>En tant qu'administrateur, je veux pouvoir affecter des \u00e9l\u00e8ves \u00e0 des classes.</li> <li>En tant qu'administrateur, je veux pouvoir modifier la classe d'un \u00e9l\u00e8ve.</li> </ul> <p>Sp\u00e9cification UX/UI:</p> <p>Lorsqu'on cr\u00e9\u00e9 ou modifie un \u00e9l\u00e8ve, on doit avoir une liste d\u00e9roulante permettant de choisir sa classe.</p> <p>Il faut donc :</p> <ol> <li>Un CRUD pour les classes</li> <li>La possibilit\u00e9 d'affecter un \u00e9l\u00e8ve \u00e0 une classe en cr\u00e9ation, lecture ou modification.</li> </ol> <p>Les \u00e9l\u00e8ves ont des mati\u00e8res</p> <p>Sp\u00e9cification fonctionnelle: En tant qu'administrateur, je veux pouvoir CRUD des mati\u00e8res.</p> <p>Tous les \u00e9l\u00e8ves auront les m\u00eames mati\u00e8res.</p> <p>Sp\u00e9cification UX/UI: Identiques au CRUD \u00e9l\u00e8ves</p> <p>Un \u00e9l\u00e8ve doit avoir des notes</p> <p>Sp\u00e9cification fonctionnelle: - En tant qu'administrateur, lorsque je consulte un \u00e9l\u00e8ve, je peux cr\u00e9er une note dans une mati\u00e8re. - En tant qu'administrateur, lorsque je consulte un \u00e9l\u00e8ve, je vois la liste de ses notes. - En tant qu'administrateur, lorsque je consulte un \u00e9l\u00e8ve, je dois pouvoir cliquer sur une note afin de la modifier. - En tant qu'administrateur, lorsque je consulte un \u00e9l\u00e8ve, je peux supprimer une de ses notes.</p> <p>Une note a une valeur, une date, un coefficient, une mati\u00e8re.</p> <p>Sp\u00e9cification UX/UI: - L'affectation d'une mati\u00e8re \u00e0 une note doit se faire par le biais d'une liste d\u00e9roulante.</p> <p>Statistiques</p> <p>Sp\u00e9cification fonctionnelle: - En tant qu'administrateur, lorsque je consulte la liste des classes, je veux voir appara\u00eetre la moyenne g\u00e9n\u00e9rale de classe.</p>"},{"location":"terminale/bdd/sql-murder-mystery/","title":"SQL murder mystery","text":"<p>C'est un exercice traditionnel mondialement connu.</p> <p>Un meurtre a \u00e9t\u00e9 commis \u00e0 SQL city. Le crime a eu lieu le 15 janvier 2018.</p> <p>Vous disposez d'une base de donn\u00e9es comportant toutes les informations qui ont pu \u00eatre glan\u00e9es.</p> <p>Vous avez acc\u00e8s \u00e0 la base de donn\u00e9es de l'enqu\u00eate.</p> <p>Vous pouvez commencer par inspecter les donn\u00e9es de rapport de sc\u00e8ne de crime (crime_scene_report)</p> <p>Bonne chance!</p> <p></p> <p>Ex\u00e9cutez toutes vos requ\u00eates ci-dessous:</p> Ex\u00e9cuter des requ\u00eates: Ex\u00e9cuter"},{"location":"terminale/bdd/sql-murder-mystery/#requete-permettant-de-tester-votre-solution","title":"Requ\u00eate permettant de tester votre solution","text":"<pre><code>INSERT INTO solution VALUES (1, \"Nom du meurtrier\");\n\nSELECT value FROM solution;\n</code></pre>"},{"location":"terminale/bdd/tp-sgbd/","title":"SGBD - Postgresql","text":""},{"location":"terminale/bdd/tp-sgbd/#pre-requis","title":"Pr\u00e9-requis","text":"<p>Ces outils doivent \u00eatre install\u00e9s (voir la section \"les outils\"):</p> <ul> <li>miniforge</li> <li>dbeaver</li> </ul>"},{"location":"terminale/bdd/tp-sgbd/#install-setup-postgresql","title":"Install &amp; Setup PostgreSQL","text":"<p>Ici, nous allons utiliser PostgreSQL, qui est instalable via conda, dans une version plus ultra pratique pour le d\u00e9veloppement.  Par contre, c'est juste inimaginable en production car toute la s\u00e9curit\u00e9 est lev\u00e9e.</p> <p>Tout ce qui suit se fait dans le Miniforge Prompt.</p>"},{"location":"terminale/bdd/tp-sgbd/#1-creation-et-activation-dun-environnement-a-part-qui-sappelle-outils","title":"1. Cr\u00e9ation et activation d'un environnement \u00e0 part qui s'appelle <code>outils</code>","text":"<pre><code>conda create -n outils\n</code></pre> <pre><code>conda activate outils\n</code></pre> <p>Pas dans base</p> <p>N'utilisez l'environnement base que pour cr\u00e9er et activer des environnements. Votre premi\u00e8re action dans un prompt conda doit \u00eatre d'activer un environnement sp\u00e9cifique.</p>"},{"location":"terminale/bdd/tp-sgbd/#2-installation-de-postgresql","title":"2. Installation de postgresql","text":"<pre><code>conda install postgresql\n</code></pre> <p>Maintenant, nous disposons d'un tas d'outils pour interagir avec postgresql.</p>"},{"location":"terminale/bdd/tp-sgbd/#3-initialisation-de-postgresql-avec-un-repertoire-de-donnees","title":"3. Initialisation de Postgresql avec un r\u00e9pertoire de donn\u00e9es","text":"<p>Chez vous, remplacez <code>P:\\\\data</code> partout par un autre chemin que vous connaissez sur votre disque. Pour le mettre \u00e0 la racine de votre r\u00e9pertoire utilisateur, vous pouvez utiliser <code>%USERPROFILE%\\\\data</code> \u00e0 la place.</p> <pre><code>initdb -D P:\\\\data\n</code></pre> <p>Toutes vos bases de donn\u00e9es seront stock\u00e9es dans ce dossier.</p>"},{"location":"terminale/bdd/tp-sgbd/#4-lancement-du-service-postgresql","title":"4. Lancement du service Postgresql","text":"<pre><code>pg_ctl start -D P:\\\\data\n</code></pre> <p>A partir de cet instant, un service tourne sur votre machine sur le port 5432. C'est le port par d\u00e9faut de Postgresql.</p> <p>Avant de quitter votre ordi</p> <p>Attention, il faudra quitter proprement le SGBD \u00e0 l'aide de la commande </p> <pre><code>pg_ctl stop -D P:\\\\data\n</code></pre>"},{"location":"terminale/bdd/tp-sgbd/#5-creation-dun-superutilisateur","title":"5. Cr\u00e9ation d'un superutilisateur","text":"<p>Nous allons cr\u00e9er un utilisteur qui a le droit de tout faire sur postgresql. Ce super utilisateur s'appelle <code>admin</code> et son mot de passe sera <code>password</code>. (bien entendu c'est la plus over nulle des s\u00e9curisations)</p> <pre><code>createuser --superuser --password admin\n</code></pre> <p>Indiquer le mot de passe password</p>"},{"location":"terminale/bdd/tp-sgbd/#6-creation-dune-base-de-donnees","title":"6. Cr\u00e9ation d'une base de donn\u00e9es","text":"<pre><code>createdb lycee\n</code></pre>"},{"location":"terminale/bdd/tp-sgbd/#7-connexion-a-la-base-de-donnees-avec-dbeaver","title":"7. Connexion \u00e0 la base de donn\u00e9es avec DBeaver","text":"<p>Maintenant, on peut ouvrir dBeaver pour interagir avec l'instance de postgresql que nous avous lanc\u00e9e. Comme souvent, il y a plein de boutons, mais seulement peu nous int\u00e9ressent.</p> <p>Il faut ajouter une \"Nouvelle connection\"  \u00e0 postgresql sachant que:</p> <ul> <li>Host: localhost</li> <li>Port: 5432</li> <li>Database: lycee</li> <li>User: admin</li> <li>Mot de passe: password</li> </ul> <p></p> <p>Vous pouvez tester la connexion avec le bouton en bas \u00e0 gauche.</p> <p>dBeaver va vouloir t\u00e9l\u00e9charger les drivers pour se connecter \u00e0 postgresql, cliquez sur le bouton t\u00e9l\u00e9charger. Il existe beaucoup de drivers pour diverses bases de donn\u00e9es. dBeaver ne les r\u00e9cup\u00e8re que lorsqu'il y a besoin.</p> <p>Attention</p> <p>Il faut bien cliquer la case \u00e0 cocher \"show all databases\" qui est dans un des onglets selon la version de dBeaver.</p> <p>Quand c'est bon, cliquez sur terminer.</p> <p>L'arborescence de gauche ne se met pas \u00e0 jour automatiquement quand vous cr\u00e9ez ou supprimez de nouveaux objets. Il faudra lui demander de se rafra\u00eechir. (F5 ou menu contextuel)</p>"},{"location":"terminale/bdd/tp-sgbd/#8-creer-les-donnees-de-base-pour-le-projet","title":"8. Cr\u00e9er les donn\u00e9es de base pour le projet:","text":"<pre><code>drop table if exists eleves;\n\ncreate table eleves(\n    id SERIAL primary key,  -- Avec SERIAL, si on ajoute un enregistrement, l'id est automatiquement cr\u00e9\u00e9e \n    nom text not null,\n    prenom text not null,\n    age integer\n);\n\n\ninsert into eleves(id, nom, prenom, age) \nvalues\n(1, 'Dupont', 'Jean', 16),\n(3, 'Durand', 'Pierre', 16),\n(4, 'Dufour', 'Paul', 15)\n;\n</code></pre> <p>Voil\u00e0 \u00e0 quoi doit ressembler votre arborescence une fois que vous avez ex\u00e9cut\u00e9 les requ\u00eates ci-dessus:</p> <p></p> <p>Utilisation au quotidien</p> <ul> <li>D\u00e9marrer la base de donn\u00e9es: <pre><code>conda activate outils\npg_ctl start -D P:\\\\data\n</code></pre></li> <li>Bosser</li> <li>Arreter la base de donn\u00e9es: <pre><code>pg_ctl stop -D P:\\\\data\n</code></pre></li> </ul> <p>FIN</p> <p>IGNORER CE QUI SUIT</p>"},{"location":"terminale/bdd/tp-sgbd/#exercices-sur-la-base-de-donnees-pagila","title":"Exercices sur la base de donn\u00e9es pagila","text":"<p>Requ\u00eates basiques</p> <ol> <li>Cr\u00e9ez une liste des pr\u00e9noms et noms de famille de tous les acteurs. Affichez le pr\u00e9nom et le nom de chaque acteur dans une seule colonne. Nommez la colonne \"nom_acteur\".</li> <li>Trouvez l'identifiant, le pr\u00e9nom et le nom d'un acteur dont vous ne connaissez que le pr\u00e9nom: \"Joe\".</li> <li>Trouvez tous les acteurs dont le nom de famille contient les lettres \"LI\". Cette recherche doit \u00eatre insensible \u00e0 la casse et les r\u00e9sultats doivent \u00eatre tri\u00e9s par nom de famille, puis par pr\u00e9nom.</li> <li>En utilisant IN, affichez les colonnes <code>country_id</code> et <code>country</code> pour les pays suivants : Afghanistan, Bangladesh et China.</li> <li>Ajoutez une colonne <code>middle_name</code> \u00e0 la table <code>actor</code>. Sp\u00e9cifiez le type de colonne appropri\u00e9.</li> <li>Supprimez la colonne <code>middle_name</code>.</li> <li>Mettez \u00e0 jour l'enregistrement de GROUCHO WILLIAMS pour que son pr\u00e9nom devienne HARPO.</li> <li>R\u00e9tablissez le pr\u00e9nom de GROUCHO WILLIAMS de HARPO \u00e0 GROUCHO.</li> </ol> <p>Requ\u00eates \u00e0 jointures</p> <ol> <li>Affichez le pr\u00e9nom, le nom et l'adresse de chaque client.</li> <li>Listez les titres des films et les cat\u00e9gories auxquelles ils appartiennent.</li> <li>Affichez les pr\u00e9noms, noms et adresses e-mail des clients vivant dans la ville de \"Aurora\".</li> <li>Listez les films et les langues dans lesquelles ils sont disponibles.</li> <li>Affichez les pr\u00e9noms et noms des employ\u00e9s (staff) ainsi que le nom de leur magasin.</li> <li>Affichez les pr\u00e9noms et noms des clients ayant lou\u00e9 un film intitul\u00e9 \"Academy Dinosaur\".</li> <li>Listez les films disponibles dans le magasin avec l'identifiant <code>1</code>.</li> <li>Affichez les noms des acteurs ayant jou\u00e9 dans le film \"Zorro Ark\".</li> </ol> <p>Probl\u00e8me utile</p> <p>Lister les clients qui sont en retard \u00e0 la date du jour, en s\u00e9lectionnant les informations utiles au call center afin de les relancer.</p> <p>Pour ceux qui ont fini</p> <p>IMdb met \u00e0 disposition gratuitement une grosse base de donn\u00e9es cin\u00e9matographique:</p> <p>https://developer.imdb.com/non-commercial-datasets/</p> <p>Chargez la dans Postgresql et explorez la.</p> <p>Pour ceci vous vous int\u00e9resserez \u00e0 la clause COPY de Postgresql.</p> <p>Ici, tous les moyens sont bons, ChatGPT, google, etc...</p>"},{"location":"terminale/langages/","title":"Paradigmes de programmation","text":"<p>Il est inutile d'essayer de comprendre ces d\u00e9finitions avant d'avoir pratiqu\u00e9 l'approche mentale des paradigmes \u00e9voqu\u00e9s.</p> <p>Qu'est-ce qu'un paradigme de programmation?</p> <p>Un paradigme de programmation est un mod\u00e8le ou une approche particuli\u00e8re utilis\u00e9e pour \u00e9crire et structurer des programmes informatiques. Il d\u00e9finit un ensemble de concepts, de m\u00e9thodes et de styles qui influencent la mani\u00e8re dont les programmeurs organisent leur code et pensent \u00e0 la r\u00e9solution de probl\u00e8mes. Les paradigmes de programmation fournissent diff\u00e9rents outils mentaux pour exprimer des algorithmes et des structures de donn\u00e9es.</p> <p>Le Paradigme Fonctionnel</p> <p>Cette d\u00e9finition s'appuie sur le travail qui a \u00e9t\u00e9 fait sur les listes, afin de pouvoir vous la repr\u00e9senter plus facilement.</p> <p>Le paradigme fonctionnel se distingue principalement par :</p> <ul> <li>L'immuabilit\u00e9 des structures de donn\u00e9es : ici, chaque fonction renvoie une nouvelle liste, sans affecter l'originale. Lorsqu'on insere dans une liste, il faut comprendre \"renvoyer une nouvelle liste dans laquelle on a ins\u00e9r\u00e9\"</li> <li>L'usage intensif de la r\u00e9cursivit\u00e9 : au lieu de boucles, les fonctions comme <code>taille</code>, <code>somme</code>, ou <code>inverser</code> utiliseront la r\u00e9cursivit\u00e9 pour recueillir des informations sur la liste.</li> <li>L'importance des fonctions pures : chaque fonction renvoie toujours le m\u00eame r\u00e9sultat pour les m\u00eames arguments, sans effets de bord.</li> </ul> <p>Ce style de programmation garantit des comportements pr\u00e9visibles et s\u00fbrs, ce qui est particuli\u00e8rement utile en programmation concurrente et dans les applications o\u00f9 la fiabilit\u00e9 est critique.</p> <p>Le paradigme orient\u00e9 objet</p> <p>Ce paradigme est bas\u00e9 sur la notion d'objets, qui sont des instances de classes et encapsulent des donn\u00e9es (attributs) et des comportements (m\u00e9thodes).</p> <p>Ce paradigme est constitu\u00e9 de 5 piliers:</p> <ol> <li>Objet (et classe)</li> <li>Encapsulation</li> <li>Abstraction</li> <li>Polymorphisme</li> <li>H\u00e9ritage</li> </ol> <p>Nous insisterons sur le pilier 1. Nous parlerons un peu du pilier 2, mais python ne l'impl\u00e9mente pas vraiment. Nous verrons des usages simples du 5\u00e8me pilier, surtout \u00e0 des fins de simplification de code, afin de pouvoir ne pas crouler sous du code redondant.</p> <p>Il existe un malentendu majeur autour de la POO, li\u00e9 \u00e0 la mani\u00e8re dont le concept d'objet a \u00e9t\u00e9 interpr\u00e9t\u00e9 et utilis\u00e9. \u00c0 l'origine, des langages comme Simula, qui est souvent consid\u00e9r\u00e9 comme l'un des premiers langages orient\u00e9s objet, voyaient les objets comme une repr\u00e9sentation de concepts du monde r\u00e9el, avec des comportements propres. Cependant, avec la popularisation de la POO (notamment gr\u00e2ce \u00e0 C++ et Java), beaucoup de d\u00e9veloppeurs ont commenc\u00e9 \u00e0 concevoir des objets simplement comme des structures de donn\u00e9es am\u00e9lior\u00e9es. Ca a conduit \u00e0 des critiques sur le fait que la v\u00e9ritable philosophie de la POO, telle qu'envisag\u00e9e par ses cr\u00e9ateurs, avait \u00e9t\u00e9 dilu\u00e9e ou mal comprise.</p> <p>Alan Kay, qui a invent\u00e9 le terme \"orient\u00e9 objet\" (notamment avec Smalltalk), a exprim\u00e9 sa frustration face \u00e0 la mani\u00e8re dont ce paradigme a \u00e9volu\u00e9. Il a pr\u00e9cis\u00e9 que pour lui, la POO ne concernait pas simplement l'encapsulation ou l'h\u00e9ritage, mais plut\u00f4t la communication entre objets via des messages. Cette vision a souvent \u00e9t\u00e9 r\u00e9duite \u00e0 une simple organisation de donn\u00e9es et de m\u00e9thodes dans des classes, une simplification que Kay a critiqu\u00e9e. Il s\u2019est m\u00eame distanci\u00e9 de la mani\u00e8re dont le paradigme a \u00e9t\u00e9 interpr\u00e9t\u00e9 par des langages comme C++ ou Java.</p> <p>Ce malentendu est int\u00e9ressant car il montre comment une id\u00e9e technique peut \u00e9voluer de mani\u00e8re inattendue. Ce que nous cr\u00e9ons et livrons au monde nous appartient-il \u00e0 jamais?</p> <p>J'admets que nous touchons \u00e0 ce malentendu dans l'utilisation de la POO qui est faite dans l'impl\u00e9mentation mutable des structures de donn\u00e9es que nous avons rencontr\u00e9. C'est surtout unn pr\u00e9texte pour que vous manipuliez des objets. Cependant, elle trouve tout son sens dans le projet space invader, o\u00f9 des objets sont bien en communication.</p> <p>Meilleur paradigme?</p> <p>Au del\u00e0 du purisme, la plupart des nouveaux langages impl\u00e9mentent divers concepts provenant de multiples paradigmes. Ils sont dits multi-paradigmes. Pour la simple et bonne raison que ce qui est facile \u00e0 penser dans un paradigme l'est parfois moins dans un autre. Il convient de ne pas se r\u00e9duire \u00e0 une guerre inter-paradigme. La question \"Quel est le meilleur paradigme?\" n'a pas de sens lorsqu'on s'attaque \u00e0 des probl\u00e8mes r\u00e9els. La r\u00e9elle richesse provient de la connaissance initiale de ces paradigme et de savoir en faire la part des choses ind\u00e9pendament d'une suppos\u00e9e meilleure fa\u00e7on de penser. </p> <p>Les phrases suivantes sont de meilleures questions \u00e0 se poser en fonctionn du contexte:</p> <ul> <li>\"Dans quel paradigme vais-je me sentir plus \u00e0 l'aise pour penser mon probl\u00e8me?\". </li> <li>\"Dans quel paradigme est-il raisonable de r\u00e9soudre mon probl\u00e8me \u00e9tant donn\u00e9 l'\u00e9tat du march\u00e9 des d\u00e9veloppeurs?\"</li> <li>\"Dans quel paradigme est-il raisonable de r\u00e9soudre mon probl\u00e8me \u00e9tant donn\u00e9es les comp\u00e9tences de mes d\u00e9veloppeurs?\"</li> <li>...</li> </ul>"},{"location":"terminale/langages/complements_python/","title":"Compl\u00e9ments sur le tri, min et max","text":""},{"location":"terminale/langages/complements_python/#trier-une-liste-basique","title":"Trier une liste - basique","text":"<pre><code>L = [3, 8, 2]\n\n&gt;&gt;&gt; sorted(L)\n[2, 3, 8]\n</code></pre>"},{"location":"terminale/langages/complements_python/#trier-en-fonction-de","title":"Trier \"en fonction de\"","text":"<pre><code>students = [\n    {'name': 'Alice', 'score': 85},\n    {'name': 'Bob', 'score': 70},\n    {'name': 'Charlie', 'score': 95},\n    {'name': 'David', 'score': 80}\n]\n\n# Trie les \u00e9tudiants en fonction de leurs notes (ordre croissant)\n\ndef get_score(etudiant: dict) -&gt; int:\n    return etudiant['score']\n\n# La liste d'\u00e9tudiant est tri\u00e9e en fonction du score \n# (de la fonction qui prend un \u00e9tudiant et qui renvoie son score)\nsorted_students = sorted(students, key=get_score)\n</code></pre>"},{"location":"terminale/langages/complements_python/#idem-pour-min-et-max","title":"Idem pour min et max","text":"<p>Il faut conna\u00eetre \u00e7a pour comprendre le cours de programmation dynamique. Si on ne les utilise pas, le code devient incompr\u00e9hensible, un vrai fouilli de boucles partout.</p>"},{"location":"terminale/langages/complements_python/#trouve-letudiant-ayant-la-note-la-plus-basse-calcule-le-minimum-en-fonction-du-score-renvoye-par-un-etudiant","title":"Trouve l'\u00e9tudiant ayant la note la plus basse (calcule le minimum en fonction du score renvoy\u00e9 par un \u00e9tudiant)","text":"<pre><code>min_student: dict = min(students, key=get_score)\n</code></pre>"},{"location":"terminale/langages/complements_python/#trouve-letudiant-ayant-la-note-la-plus-haute-calcule-le-maximum-en-fonction-du-score-renvoye-par-un-etudiant","title":"Trouve l'\u00e9tudiant ayant la note la plus haute (calcule le maximum en fonction du score renvoy\u00e9 par un \u00e9tudiant)","text":"<pre><code>max_student: dict = max(students, key=get_score)\n</code></pre>"},{"location":"terminale/langages/complements_python/#trouver-la-liste-de-taille-minimum","title":"Trouver la liste de taille minimum","text":"<pre><code>listes = [\n    [1, 2, 3],\n    [4, 5],\n    [6, 7, 8, 9],\n    [10]\n]\n\n\n# On cherche le minimum en fonction de la taille \n# (de la fonction qui prend unne liste et qui renvoie sa taille)\nmin_liste = min(listes, key=len)\n\nprint(\"La liste de taille minimum est: \", min_liste)\n&gt;&gt;&gt; La liste de taille minimum est: [10]\n</code></pre>"},{"location":"terminale/langages/complements_python/#lambda","title":"Lambda","text":"<p>Si la fonction est toute petite, on peut utiliser une fonction anonyme (<code>lambda</code>)</p> <pre><code>max_student: dict = max(students, key=lambda s: s['score'])\n</code></pre> <p>key vaut la fonction qui \u00e0 un \u00e9tudiant <code>s</code> associe son score. </p>"},{"location":"terminale/langages/poo/","title":"Paradigme orient\u00e9 objets","text":"<p>D\u00e9finition</p> <p>En programmation orient\u00e9e objet, un programme est un ensemble d'entit\u00e9s qui interagissent. Ces entit\u00e9s sont appel\u00e9es des objets. Un objet poss\u00e8de un \u00e9tat (les donn\u00e9es qui le caract\u00e9risent) et des comportements (ce qu'il sait faire).</p> <p>L'\u00e9tat d'un objet est repr\u00e9sent\u00e9 par l'ensemble de ses attributs Les comportements d'un objet sont repr\u00e9sent\u00e9s par l'ensemble de ses m\u00e9thodes</p> <p>Une classe permet de d\u00e9finir une famille d'objets. A partir d'une classe, on peut cr\u00e9er autant d'objets que l'on veut. Ce sont des exemplaires, des instances de la classe.</p>"},{"location":"terminale/langages/poo/#classe-animal","title":"Classe <code>Animal</code>","text":"<p>Voici un exemple basique d'une classe en Python qui mod\u00e9lise la phrase \"Un animal porte un nom, et il sait parler.\"</p> <pre><code>class Animal:\n    def __init__(self, nom: str):\n        self.nom = nom  # Attribut d'instance\n\n    def parler(self):   # M\u00e9thode d'instance\n        print(f\"{self.nom} fait du bruit.\")\n\nx = Animal(\"Bidule\")   # cr\u00e9ation d'une instance d'Animal portant le nom bidule\nprint(x.nom)           # On acc\u00e8de aux attributs de l'instance avec le point. Affiche: Bidule\nx.nom = \"Truc\"         # Mutabilit\u00e9 -&gt; On peut modifier les attributs de l'instance de la m\u00eame mani\u00e8re \nx.parler()  # On acc\u00e8de aussi aux m\u00e9thodes d'instance par le point. Affiche: Truc fait du bruit.\n</code></pre> <p>Ce programme affichera <pre><code>Bidule\nTruc fait du bruit\n</code></pre></p> <p>Dans cet exemple :</p> <ul> <li><code>__init__</code> : Cette m\u00e9thode sera automatiquement charg\u00e9e d'initialiser les attributs de l'objet en cours d'instanciation. On le consid\u00e8re comme le constructeur de la classe.</li> <li><code>self</code> : Repr\u00e9sente l'instance actuelle de la classe. Il permet d'acc\u00e9der aux attributs et m\u00e9thodes de l'objet lui-m\u00eame.</li> </ul> <p>Constructeur</p> <p>Un constructeur est une fonction particuli\u00e8re appel\u00e9e lors de l'instanciation. Elle permet d'allouer la m\u00e9moire n\u00e9cessaire \u00e0 l'objet et d'initialiser ses attributs.</p> <p>Abus de langage</p> <p>Il est tr\u00e8s (trop) courant de consid\u00e9rer <code>__init__</code> comme le constructeur en Python, car il initialise l'objet apr\u00e8s sa cr\u00e9ation. Cependant, il ne fait que la moiti\u00e9 du travail. la m\u00e9thode charg\u00e9e de cr\u00e9er l'instance est le dunder <code>__new__</code>. La preuve en est que <code>__init__</code> prend self en param\u00e8tre, c'est donc bien que self existe d\u00e9j\u00e0 avant l'invocation d'<code>__init__</code>. Le constructeur est en r\u00e9alit\u00e9 le couple form\u00e9 par les m\u00e9thodes <code>__new__</code> et <code>__init__</code>.</p> <p>Voici une portion de code pour se rendre compte de ce qu'il se passe r\u00e9ellement:</p> <pre><code>class MaClasse:\n    def __new__(cls, *args, **kwargs):\n        '''Appel de __new__ pour cr\u00e9er une nouvelle instance de la classe'''\n        print(\"Appel de __new__ : Cr\u00e9ation de l'instance\")\n        instance = super(MaClasse, cls).__new__(cls)\n        return instance\n\n    def __init__(self, valeur):\n        '''Appel de __init__ pour initialiser l'instance avec les attributs'''\n        print(\"Appel de __init__ : Initialisation de l'instance\")\n        self.valeur = valeur\n\n    def afficher_valeur(self):\n        print(f\"Valeur : {self.valeur}\")\n\n# Instanciation d'un objet\nc = MaClasse(\"truc\")\nc.afficher_valeur()\n</code></pre> <p>On consid\u00e8rera malgr\u00e9 tout que <code>__init__</code> est le constructeur, car si on vous pose la question, c'est la r\u00e9ponse attendue.</p>"},{"location":"terminale/langages/poo/#interactions-entre-objets","title":"Interactions entre objets","text":"<p>Rajoutons la phrase \"Un Humain porte un nom, un prenom et peut adopter des animaux domestiques. On peut afficher la liste des animaux d'un Humain\".</p> <pre><code>class Humain:\n    def __init__(self, prenom: str, nom: str):\n        self.nom = nom\n        self.prenom = prenom\n        self.animaux: list[Animal] = []\n\n    def adopte(self, a: Animal):\n        self.animaux.append(a)\n\n    def afficher_animaux(self):\n        for a in self.animaux:\n            print(a.nom)\n\n\nx = Humain(\"Peter\", \"Quill\")\ny = Animal(\"Rocket\")\nx.adopte(y)\nx.afficher_animaux()   # Affiche Rocket\n</code></pre> <p>Ici, on a choisi que l'humain porte la liste de ses animaux. On aurait pu \u00e0 la place ajouter un attribut propri\u00e9taire \u00e0 la classe Animal pour dire qu'un animal est la propri\u00e9t\u00e9 d'un humain particulier. Mais on aurait perdu la possibilit\u00e9 d'afficher les animaux d'un humain sans disposer de la liste de tous les animaux. Il faut souvent choisir quelle classe est le \"chef d'orchestre\" en fonction du probl\u00e8me qu'on a \u00e0 traiter.</p> <p>H\u00e9ritage</p> <p>L\u2019h\u00e9ritage est un autre pilier fondamental en POO. Il permet \u00e0 une classe (dite sous classe) d\u2019h\u00e9riter des attributs et m\u00e9thodes d\u2019une autre classe (dite super classe).</p>"},{"location":"terminale/langages/poo/#exemple-classe-ratonlaveur-heritant-de-animal","title":"Exemple : Classe <code>RatonLaveur</code> h\u00e9ritant de <code>Animal</code>","text":"<p>Nous pourrions ajouter un attribut <code>espece</code> \u00e0 la classe Animal pour les distinguer, mais ici, pour introduire le concept, nous allons choisir cette phrase en Fran\u00e7ais: \"Un RatonLaveur EST UN Animal\"</p> <pre><code>class RatonLaveur(Animal):\n\n    def __init__(self, nom: str):\n        super().__init__(nom) # cette ligne appelle le constructeur de la super classe\n\n    def parler(self):\n        print(f\"{self.nom} \u00e9met des grognements.\")\n</code></pre> <p>La classe <code>RatonLaveur</code> h\u00e9rite de <code>Animal</code> mais peut red\u00e9finir certaines m\u00e9thodes (ici, <code>parler</code>), ou encore en cr\u00e9er d'autres. Ainsi, un objet de la classe <code>Chien</code> pourra aboyer au lieu de \"faire du bruit\". Un Raton laveur pourra \u00e9mettre das grognements</p> <p>En fran\u00e7ais, on peut tr\u00e8s bien dire d\u00e8s lors \"Un Chien EST UN Animal\"</p> <p>Programme exemple: <pre><code>x = Animal(\"Animal quelconque\")\nx.parler()\ny = RatonLaveur(\"Rocket\")\ny.parler()\nprint(isinstance(x, Animal), isinstance(x, RatonLaveur))\nprint(isinstance(y, Animal), isinstance(y, RatonLaveur))\n</code></pre> Affichage: <pre><code>Animal quelconque fait du bruit\nRocket \u00e9met des grognements\nTrue False\nTrue True\n</code></pre></p> <p>La fonction <code>isinstance</code> sert \u00e0 savoir si un objet est une instance d'une classe. Si on a besoin de l'utiliser hors debugging, c'est s\u00fbrement du \u00e0 un d\u00e9faut de conception. On n'aura pas besoin de l'utiliser.</p> <p>Mod\u00e9lisation objet</p> <p>Une voiture a une marque, un mod\u00e8le, un prix, un nombre de kilom\u00e8tres parcourus, une quantite de carburant dans le r\u00e9servoir (en litres), et une consommation (litres au 100). Une voiture peut rouler sur une certaine distance. \u00c0 chaque fois qu'elle roule, le kilom\u00e9trage augmente, et le carburant diminue. Le r\u00e9servoir de la voiture a une capacit\u00e9 maximale. On peut afficher les caract\u00e9ristiques de la voiture.</p> <p>Un Humain a une quantit\u00e9 d'argent disponible sur son compte en banque. Un Humain peut acheter des voitures. Un Humain peut faire des trajets avec une voiture pour un certain nombre de kilom\u00e8tres. Avant de commencer un trajet, l'humain v\u00e9rifie s'il a assez d'essence, sinon, il va \u00e0 la station service faire le plein. Lorsqu'un humain fait le plein de sa voiture, son compte en banque diminue. </p> <ul> <li>Ecrivez une classe Humain et une classe Voiture compatibles avec cette description.</li> <li>Instanciez ensuite Humain et Voiture afin de tester des scenarios d'utilisation.</li> </ul>"},{"location":"terminale/langages/recursivite/","title":"R\u00e9cursivit\u00e9","text":"<p>Pr\u00e9-requis</p> <p>Vous avez d\u00e9j\u00e0 assimil\u00e9 la r\u00e9cursivit\u00e9 sur les structures de donn\u00e9es standard.</p>"},{"location":"terminale/langages/recursivite/#rappel-de-definitions","title":"Rappel de d\u00e9finitions","text":"<p>Fonction r\u00e9cursive</p> <p>Une fonction r\u00e9cursive est une fonction qui fait appel \u00e0 elle-m\u00eame dans sa d\u00e9finition.</p> <p>Type r\u00e9cursif</p> <p>Un type r\u00e9cursif est un type qui fait appel \u00e0 lui-m\u00eame dans sa d\u00e9finition.</p> <p>Cas de base</p> <p>Un cas de base est un cas exhib\u00e9 dont le traitement ne n\u00e9cessite pas d'appel r\u00e9cursif pour renvoyer un r\u00e9sultat.</p> <p>L'objectif dans la construction d'une fonction r\u00e9cursive est d'assurer la convergence vers un cas de base pour les cas r\u00e9cursifs. Ceci afin que la fonction s'arr\u00eate.</p> <p>Disjonction de cas</p> <p>Lors de l'analyse d'un probl\u00e8me, il convient d'exhiber chacun des cas qui peuvent se produire sans en oublier parmis les possibles.</p> <p>Tests</p> <p>Par tester, on entendra \u00e9crire la docstring appropri\u00e9e et inclure en fin de fichier le boilerplate de doctest.</p> <p>Note d'intention</p> <p>La r\u00e9cursivit\u00e9 est abord\u00e9e \u00e0 travers la programmation dynamique et l'impl\u00e9mentation des structures de donn\u00e9es de base:</p> <ul> <li>piles</li> <li>listes</li> <li>arbres</li> </ul> <p>Les exercices qui suivent portent sur la r\u00e9cursivit\u00e9 sur les entiers, et sont destin\u00e9s aux personnes qui ont et veulent avoir un bon bagage math\u00e9matique. Ce ne sont globalement pas des exercices faciles, c'est tout l'int\u00e9r\u00eat.</p>"},{"location":"terminale/langages/recursivite/#recursivite-sur-les-entiers-triangle-de-pascal","title":"R\u00e9cursivit\u00e9 sur les entiers - Triangle de Pascal","text":"<p>Observez la fa\u00e7on dont est construit le tableau suivant. On appelle i l'indice ligne, et j l'indice colonne. Le tableau a 6 lignes sur l'exemple, mais on le consid\u00e8re de taille infinie.</p> \\[ \\begin{bmatrix} 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 1 &amp; 1 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ 1 &amp; 2 &amp; 1 &amp; 0 &amp; 0 &amp; 0 \\\\ 1 &amp; 3 &amp; 3 &amp; 1 &amp; 0 &amp; 0 \\\\ 1 &amp; 4 &amp; 6 &amp; 4 &amp; 1 &amp; 0 \\\\ 1 &amp; 5 &amp; 10 &amp; 10 &amp; 5 &amp; 1 \\\\ \\end{bmatrix} \\] <p>Il n'y a que des \\(1\\) dans la premi\u00e8re colonne ainsi que sur la diagonale. Il n'y a que des \\(0\\) au dessus de la diagonale. Sinon, un nombre est toujours \u00e9gal \u00e0 celui du dessus, plus celui du dessus \u00e0 gauche.</p> <p>On cherche \u00e0 d\u00e9finir une fonction \\(C(i,j)\\) qui renvoie le nombre \u00e0 la coordonn\u00e9e \\(\\binom{i}{j}\\)</p> <ul> <li>Que doit renvoyer l'appel \\(C(4,2)\\)?</li> <li>disjonction de cas:<ul> <li>Quelle est la condition sur \\(i\\) et \\(j\\) pour que \\(C(i, j)\\) renvoie 0?</li> <li>Quelle est la condition sur \\(i\\) et \\(j\\) pour que \\(C(i, j)\\) renvoie 1?</li> <li>Sinon, exprimez \\(C(i,j)\\) de mani\u00e8re r\u00e9cursive.</li> </ul> </li> <li>Ecrivez et testez la fonction r\u00e9cursive <code>C(i: int, j: int) -&gt; int</code> qui renvoie le nombre \u00e0 la coordonn\u00e9e \\(\\binom{i}{j}\\).</li> <li>Ecrivez la fonction <code>pascal(n: int) -&gt; list[list[int]]</code> qui renvoie le tableau \u00e0 \\(n+1\\) lignes. Par exemple, le tableau exemple est renvoy\u00e9 par <code>pascal(5)</code>. La fonction doit faire une ligne. Vous utiliserez les listes en compr\u00e9hension.</li> </ul> <p>On s'int\u00e9resse maintenant \u00e0 la suite du produit \\(P_n\\) de chacun des termes non nuls de la ligne \\(n\\). Par exemple, \\(P_0 = 1\\), \\(P_4 = 1\\times 4 \\times 6 \\times 4 \\times 1\\)</p> <ul> <li>En utilisant la fonction C, \u00e9crire et tester la fonction <code>P(n: int) -&gt; int</code></li> </ul> <p>On consid\u00e8re maintenant la suite \\(\\displaystyle Q_n = \\frac{P_{n-1}P_{n+1}}{P_n^2}, n&gt;0\\)</p> <ul> <li> <p>Ecrire la fonction <code>Q(n: int) -&gt; float</code></p> </li> <li> <p>En jouant avec cette fonction, conjecturer sur \\(\\displaystyle \\lim_{n \\to \\infin}Q_n\\)</p> </li> <li> <p>Montrez que \\(\\displaystyle \\frac{P_{n+1}}{P_n} = \\prod_{k=0}^{n} \\frac{n+1}{n+1-k}\\) sachant que:</p> <ul> <li>\\(\\displaystyle P_n = \\prod_{k=0}^{n} \\binom{n}{k}\\)</li> <li>\\(\\displaystyle \\binom{n}{k} = \\frac{n!}{k!(n-k)!}\\) (C'est bien de savoir le montrer par r\u00e9currence)</li> </ul> </li> <li> <p>En d\u00e9duire que \\(\\displaystyle \\frac{P_{n+1}}{P_n} = \\frac{(n+1)^n}{n!}\\)</p> </li> <li> <p>Vous avez fait le plus dur. D\u00e9montrez votre conjecture en cons\u00e9quence. Il faudra se ramener \u00e0 une limite \u00e9minemment c\u00e9l\u00e8bre.</p> </li> </ul> <p>Interpr\u00e9tation</p> <ul> <li>\\(\\displaystyle \\frac{P_{n+1}}{P_n}\\) mesure les rapports successifs de \\(P_n\\), elle est donc une mesure \"d'\u00e9volution\".</li> <li>\\(Q_n\\) mesure les rapports successifs de \\(\\displaystyle \\frac{P_{n+1}}{P_n}\\) , elle mesure donc l'\u00e9volution de la mesure d'\u00e9volution de \\(P_n\\).</li> </ul>"},{"location":"terminale/langages/recursivite/#recursivite-sur-les-entiers-operations","title":"R\u00e9cursivit\u00e9 sur les entiers - Op\u00e9rations","text":"<p>La r\u00e9cursivit\u00e9 vous a \u00e9t\u00e9 pr\u00e9sent\u00e9e via des structures de donn\u00e9es elles-m\u00eames r\u00e9cursives. Ici nous allons nous concentrer sur les entiers naturels.</p> <p>L'objectif est de construire toutes les op\u00e9rations que vous connaissez, simplement \u00e0 partir de la d\u00e9finition du successeur d'un nombre.</p> <ul> <li>On dispose d'un type <code>entiernat</code> repr\u00e9sentant un entier naturel (qu'on mod\u00e9lise par un int).</li> <li>On dispose d'une fonction <code>succ</code>. Elle sert \u00e0 renvoyer le successeur de l'entier en param\u00e8tre.</li> <li>On d\u00e9finit ZERO.</li> <li>On d\u00e9finit UN comme successeur de 0.</li> <li>On dispose d'une fonction <code>afficher</code> qui affiche la repr\u00e9sentation de l'entier \u00e0 l'\u00e9cran.</li> </ul> <pre><code>type entiernat = int\n\ndef succ(n: entiernat) -&gt; entiernat:\n    assert n&gt;0, \"Pas un entier naturel\"\n    return n + 1   \n\nZERO = 0\nUN = succ(ZERO)\n\ndef afficher(n: entiernat):\n  print(n)\n</code></pre> <p>A partir de maintenant, plus aucun op\u00e9rateur ne sera utilis\u00e9. (+, -, , /, *, ....)</p> <p>On donne la fonction <code>pred</code> construite uniquement avec la fonction <code>succ</code>. Cette fonction renvoie le pr\u00e9d\u00e9cesseur d'un entier.</p> <pre><code>def pred(n: entiernat):\n    assert n!=ZERO, \"Aucun entier naturel n'a pour successeur 0\"\n    def aux(n: entiernat, acc: entiernat) -&gt; entiernat:\n        if succ(acc) == n:\n            return acc\n        else:\n            return aux(n, succ(acc))\n\n    return aux(n, ZERO)\n</code></pre>"},{"location":"terminale/langages/recursivite/#exemple-complet-avec-loperation-plus","title":"Exemple complet avec l'op\u00e9ration <code>plus</code>","text":"<p>On veut calculer \\(plus(a, b)\\) de mani\u00e8re r\u00e9cursive, en utilisant les fonctions d\u00e9j\u00e0 existantes. \\(plus(a, 0) = a\\), \u00e7a sera notre cas de base. On veut donc r\u00e9\u00e9crire \\(plus(a, b)\\) pour que \\(b-1\\) aparaisse, assurant la convergence vers le cas de base. On doit donc r\u00e9\u00e9crire \\(a+b\\) afin de faire appara\u00eetre \\(b-1\\). </p> \\[a+b =a+(b-1) +1 \\] <p>donc \\(plus(a,b)=succ(plus(a, pred(b)))\\)</p> <p>Ecrivons donc notre fonction en cons\u00e9quence:</p> \\[plus(a,b)=\\begin{cases}     a &amp; , \\text{si } b=0  \\text{ (cas de base)}\\\\      succ(plus(a, pred(b))) &amp;, \\text{sinon}     \\end{cases}\\] <p>En \u00e9crivant b\u00eatement la d\u00e9finition en python:</p> <pre><code>def plus(a: entiernat, b: entiernat) -&gt; entiernat:\n  if b == ZERO:\n    return a\n  else:\n    return succ(plus(a, pred(b)))\n\nafficher(plus(9, 5))\n</code></pre> <p>Autres op\u00e9rations</p> <p>En suivant ce mode op\u00e9ratoire, \u00e9crire les fonctions <code>fois</code> et <code>puissance</code></p> <p>Pour aller plus loin</p> <p>Vous pouvez, si vous le souhaitez, vous int\u00e9resser aux puissances it\u00e9r\u00e9es d'ordre \\(n\\) et \u00e9crire un programme r\u00e9cursif qui les calcule. Pour aller encore plus loin, vous pouvez \u00e9tudier la notion d'hyperop\u00e9rateur et \u00e9crire la fonction d'hyperop\u00e9ration (celle qui les unit toutes).</p>"},{"location":"terminale/langages/recursivite/#construction-de-mathbbn-par-von-neumann","title":"Construction de \\(\\mathbb{N}\\) par Von Neumann","text":"<p>Voici comment Von Neumann construit \\(\\mathbb{N}\\)</p> <ul> <li>Un entier naturel est un ensemble.</li> <li>Le premier entier naturel est l'ensemble vide. On l'appelle z\u00e9ro.</li> <li>Le successeur d'un entier naturel est l'union de cet entier avec l'ensemble contenant cet entier.</li> </ul> <p>Par cons\u00e9quent, Le cardinal de l'entier n est pr\u00e9cis\u00e9ment n.</p> <pre><code>type entiernat = set # Un entier naturel est un ensemble\n\ndef succ(n: entiernat)  -&gt; entiernat:\n  return n.union(set(n))  # L'union de cet entier avec l'ensemble contenant cet entier\n\nZERO = set()         # Zero est l'ensemble vide\nUN = succ(ZERO)\n\ndef afficher(n: entiernat):\n  \"\"\"Le cardinal de n est pr\u00e9cis\u00e9ment n\"\"\"\n  print(len(n))\n</code></pre> <p>Vous pouvez remplacer la d\u00e9finition pr\u00e9c\u00e9dente par cette d\u00e9finition, et constater que vos fonctions donnent toujours des r\u00e9sultats corrects.</p>"},{"location":"terminale/langages/recursivite/#pavages","title":"Pavages","text":""},{"location":"terminale/langages/recursivite/#probleme-1","title":"Probl\u00e8me 1","text":"<p>On cherche \u00e0 paver une bande compos\u00e9e de n carr\u00e9s avec des tuiles de largeur 1 et 2.</p> <p></p> <ul> <li>Dessiner les pavages possibles pour \\(n=1\\), \\(n=2\\), \\(n=3\\), \\(n=4\\)</li> <li>Pour quelles tailles de bande pouvez vous donner directement la r\u00e9ponse sans trafiquer?</li> <li>Trouvez l'\u00e9quation de r\u00e9currence de \\(p_{n}\\), le nombre de pavage d'une bande de taille \\(n\\) </li> <li>Ecrivez une fonction en python <code>nombre_pavages(n: int) \u2192 int</code> qui calcule le nombre de pavages pour une bande de taille n.</li> </ul>"},{"location":"terminale/langages/recursivite/#variation","title":"Variation","text":"<p>Reprendre ce probl\u00e8me pour paver une bande de taille \\(n\\) avec des tuiles de largeur 1 et 3.</p>"},{"location":"terminale/langages/recursivite/#probleme-2","title":"Probl\u00e8me 2","text":"<p>Reprendre le probl\u00e8me 1, mais cette fois, nous cherchons \u00e0 construire la liste des possibilit\u00e9s de pavages.</p> <p></p> <p>Ce pavage correspond \u00e0 la liste ['R', 'B', 'B', 'R'] pour n=6.</p> <ul> <li>Ecrire <code>pavage(n: int) -&gt; list[str]</code></li> </ul> <p>Ici, il faut s'appuyer sur la structure qui d\u00e9termine le nombre de solutions (comme presque tout le temps en r\u00e9alit\u00e9). Vous pouvez ensuite dessiner les bandes \u00e0 l'\u00e9cran, en s'int\u00e9ressant \u00e0 ces deux str:</p> <pre><code>rouge = \"\\N{LARGE RED SQUARE}\"\nbleu = 2*\"\\N{LARGE BLUE SQUARE}\"\n</code></pre>"},{"location":"terminale/langages/recursivite/#permutations-des-n-premiers-entiers-naturels","title":"Permutations des n premiers entiers naturels","text":"<p>TODO</p>"},{"location":"terminale/langages/recursivite/#le-tour-du-cavalier","title":"Le tour du cavalier","text":"<p>EN COURS</p> <p>Le tour du cavalier est un probl\u00e8me hyper classique consistant \u00e0 d\u00e9placer un cavalier sur un \u00e9chiquier de mani\u00e8re \u00e0 ce qu\u2019il visite chaque case exactement une fois.</p> <p>Il existe deux types de tours:</p> <ul> <li>Tour ferm\u00e9 : Le cavalier revient \u00e0 sa case de d\u00e9part apr\u00e8s avoir visit\u00e9 chaque case une fois, formant ainsi un circuit ferm\u00e9.</li> <li>Tour ouvert : Le cavalier termine son parcours sur une case diff\u00e9rente de celle de d\u00e9part sans revenir \u00e0 sa position initiale.</li> </ul> <p>Sur un \u00e9chiquier 5x5</p> <ul> <li>Quand le cavalier part d'une case blanche, peut-il aller sur une case de la m\u00eame couleur?</li> <li>Combien de mouvements doit faire le cavalier pour parcourir toutes les cases?</li> <li>Expliquer, de mani\u00e8re structur\u00e9e, en vous servant des r\u00e9ponses aux questions pr\u00e9c\u00e9dentes, pourquoi il est impossible qu'un cavalier revienne \u00e0 son point de d\u00e9part en ayant visit\u00e9 toutes les cases sur un \u00e9chiquier 5x5. </li> </ul>"},{"location":"terminale/langages/recursivite/#tour-ouvert","title":"Tour ouvert","text":"<p>On donne les types suivants, ainsi que les variables globales LARGEUR et HAUTEUR (de l'\u00e9chiquier)</p> <pre><code>type coup = tuple[int, int] \ntype chemin = list[coup]\n\nHAUTEUR = 5\nLARGEUR = 5\n</code></pre> <p>Coups suivants</p> <p>Ecrire la fonction <code>coups_suivants(c: coup) -&gt; list[coup]</code></p> <p>Cette fonction renvoie la liste des coups possibles lorsqu'on a jou\u00e9 le coup c.</p> <p>Parcours de tous les tours possibles (ouverts ou ferm\u00e9s)</p> <p>Ecrire la fonction r\u00e9cursive <code>parcours(c: coup, chemins: list[chemin], acc: chemin)</code></p> <ul> <li>acc contient le chemin en cours de construction</li> <li>chemins contient la liste de tous les chemins. Une liste est mutable, donc elle peut \u00eatre modifi\u00e9e \u00e0 n'importe quel moment. (on se la trimballe partout o\u00f9 on va)</li> <li>\u00e0 chaque appel, il faut visiter tous les coups qui ne sont pas d\u00e9j\u00e0 dans le chemin, en l'ajoutant bien s\u00fbr dans le chemin.</li> <li>d\u00e8s qu'on a un chemin dont la taille est \u00e9gale au nombre de cases, il faut l'ajouter aux chemins.</li> </ul> <p>Tours ferm\u00e9s</p> <ul> <li>Dans une autre fonction au nom appropri\u00e9, modifier le cas de base pour n'afficher que les tours ferm\u00e9s.</li> <li>Ca ne doit rien renvoyer sur un \u00e9chiquier 5x5, comme constat\u00e9 pr\u00e9c\u00e9demment</li> <li>On ne testera que sur un \u00e9chiquier de taille 6x5 (c'est tr\u00e8s long)</li> </ul> <p>God Mode</p> <p>Ceux qui se sont frott\u00e9s \u00e0 rust peuvent constater la diff\u00e9rence de performance sur ce genre de probl\u00e8mes. Dans cargo.toml, pour que le code g\u00e9n\u00e9r\u00e9 soit optimis\u00e9, ajouter: <pre><code>[profile.release]\nopt-level = 3\nlto = true\n</code></pre></p> <p>On utilisera le flag --release pour build ou run. Par exemple: <pre><code>cargo run --release\n</code></pre></p>"},{"location":"terminale/processus/","title":"Processus","text":"<p>Toute machine est dot\u00e9e d'un syst\u00e8me d'exploitation qui a pour fonction de charger les programmes depuis la m\u00e9moire de masse et de lancer leur ex\u00e9cution en leur cr\u00e9ant des processus.</p>"},{"location":"terminale/processus/#1-generalites","title":"1. G\u00e9n\u00e9ralit\u00e9s","text":"<p>D\u00e9finition</p> <p>Un processus est l'instance en cours d'ex\u00e9cution d'un programme, g\u00e9r\u00e9e par le syst\u00e8me d'exploitation.</p> <p>Un processus informatique est d\u00e9fini par :</p> <ul> <li>Un ensemble d'instructions \u00e0 ex\u00e9cuter (un programme) ;</li> <li>Un espace m\u00e9moire pour les donn\u00e9es de travail ;</li> <li>Eventuellement, des ressources, comme des descripteurs de fichiers, des ports r\u00e9seau, etc.</li> </ul> <p>Tous les syst\u00e8mes d'exploitation modernes (Linux, Windows, MacOS, Android, iOS...) sont capables de g\u00e9rer l'ex\u00e9cution de plusieurs processus d'une mani\u00e8re qui para\u00eet simultan\u00e9e.</p> <p>En r\u00e9alit\u00e9, un processeur ne g\u00e8re qu'un processus \u00e0 la fois.</p> <p>Vu que \u00e7a va tr\u00e8s vite, on a l'impression que tout s'ex\u00e9cute en m\u00eame temps (mouvement de la souris, affichage d'une image, word, excel), mais en r\u00e9alit\u00e9, le processeur ne s'occupe que d'un processus \u00e0 la fois. Le fait qu'il va tr\u00e8s vite donne cette impression de simultan\u00e9it\u00e9.</p> <p>Les syst\u00e8mes d'exploitation attribuent ainsi des \"\u00e9tats\" aux processus afin de les hi\u00e9rarchiser.</p> <p>Les \u00e9tats</p> <pre><code>---\ntitle: Diagramme d'\u00e9tat d'un processus \u00e0 conna\u00eetre\n---\nstateDiagram-v2\n[*] --&gt; Pr\u00eat : R\u00e9veil\nPr\u00eat --&gt; Elu : Election\nElu --&gt; Bloqu\u00e9 : Blocage\nElu --&gt; [*] : Fin\nBloqu\u00e9--&gt;Pr\u00eat : D\u00e9blocage\n</code></pre> <p>Il est fondamental de bien comprendre que le \"chef d'orchestre\" qui attribue aux processus leur \u00e9tat \"\u00e9lu\", \"bloqu\u00e9\" ou \"pr\u00eat\" est le syst\u00e8me d'exploitation (OS - Operating System). On dit que le syst\u00e8me d'exploitation g\u00e8re l'ordonnancement des processus (un processus sera prioritaire sur un autre...). Lorsqu'il est cr\u00e9\u00e9, le processus passe \u00e0 l'\u00e9tat pr\u00eat. Il int\u00e8gre une \"file d'attente\", \u00e7a n'est pas forc\u00e9ment son tour directement.</p> <p>Lorsque c'est \u00e0 son tour, il passe \u00e0 l'\u00e9tat \u00e9lu, \u00e7a veut dire que le processeur s'occupe vraiment de faire tourner le programme.</p> <p>Un processus qui se trouve dans l'\u00e9tat \u00e9lu peut demander \u00e0 acc\u00e9der \u00e0 une ressource pas forc\u00e9ment disponible instantan\u00e9ment (typiquement lire une donn\u00e9e sur le disque dur). Le processus ne peut pas poursuivre son ex\u00e9cution tant qu'il n'a pas obtenu cette ressource. En attendant de recevoir cette ressource, il passe de l'\u00e9tat \"\u00e9lu\" \u00e0 l'\u00e9tat \"bloqu\u00e9\".</p> <p>Lorsque la ressource se lib\u00e8re, il repasse en \u00e9tat pr\u00eat.</p> <p>Les r\u00e8gles de gestion de la file d'attente diff\u00e8rent selon le mode d'ordonnancement du syst\u00e8me d'exploitation.</p>"},{"location":"terminale/processus/#2-ordonnancement-des-processus","title":"2. Ordonnancement des processus","text":"<p>Dans un syst\u00e8me multi-utilisateurs \u00e0 temps partag\u00e9, plusieurs processus peuvent \u00eatre pr\u00e9sents en m\u00e9moire centrale en attente d'ex\u00e9cution. Si plusieurs processus sont pr\u00eats, le syst\u00e8me d'exploitation doit g\u00e9rer l'allocation du processeur aux diff\u00e9rents processus \u00e0 ex\u00e9cuter. C'est l'ordonnanceur qui s'acquitte de cette t\u00e2che.</p> <p>Le syst\u00e8me d'exploitation d'un ordinateur peut \u00eatre vu comme un ensemble de processus dont l'ex\u00e9cution est g\u00e9r\u00e9e par un processus particulier : l'ordonnanceur (scheduler en anglais).</p> <p>Un ordonnanceur fait face \u00e0 deux probl\u00e8mes principaux :</p> <ul> <li>le choix du processus \u00e0 ex\u00e9cuter</li> <li>le temps d'allocation du processeur au processus choisi.</li> </ul> <p>Un syst\u00e8me d'exploitation multit\u00e2che est pr\u00e9emptif lorsque celui-ci peut arr\u00eater (r\u00e9quisition) \u00e0 tout moment n'importe quelle application pour passer la main \u00e0 la suivante. Dans les syst\u00e8mes d'exploitation pr\u00e9emptifs on peut lancer plusieurs applications \u00e0 la fois et passer de l'une \u00e0 l'autre, voire lancer une application pendant qu'une autre effectue un travail. Il y a aussi des syst\u00e8mes d'exploitation dits multit\u00e2ches, qui sont en fait des \u00ab multi-t\u00e2ches coop\u00e9ratifs \u00bb. Quelle est la diff\u00e9rence ? Un multit\u00e2che coop\u00e9ratif permet \u00e0 plusieurs applications de fonctionner et d'occuper des plages m\u00e9moire, laissant le soin \u00e0 ces applications de g\u00e9rer cette occupation, au risque de bloquer tout le syst\u00e8me. Par contre, avec un \u00ab multi-t\u00e2che pr\u00e9emptif \u00bb, le noyau garde toujours le contr\u00f4le (qui fait quoi, quand et comment), et se r\u00e9serve le droit de fermer les applications qui monopolisent les ressources du syst\u00e8me. Ainsi les blocages du syst\u00e8me sont inexistants.</p> <p>Objectifs de l'ordonnanceur</p> <p>Les objectifs d'un ordonnanceur d'un syst\u00e8me multi-utilisateurs sont, entre autres :</p> <ul> <li>s'assurer que chaque processus en attente d'ex\u00e9cution re\u00e7oive sa part de temps processeur</li> <li>minimiser le temps de r\u00e9ponse </li> <li>utiliser le processeur \u00e0 100% </li> <li>utiliser d'une mani\u00e8re \u00e9quilibr\u00e9e les ressources </li> <li>prendre en compte les priorit\u00e9s </li> <li>\u00eatre pr\u00e9dictible</li> </ul> <p>Ces objectifs sont parfois compl\u00e9mentaires, parfois contradictoires : augmenter la performance par rapport \u00e0 l'un d'entre eux peut se faire au d\u00e9triment d'un autre. Il est impossible de cr\u00e9er un algorithme qui optimise tous les crit\u00e8res de fa\u00e7on simultan\u00e9e.</p>"},{"location":"terminale/processus/#ordonnancement-non-preemptif","title":"Ordonnancement non pr\u00e9emptif","text":"<p>Ordonnanceurs non pr\u00e9emptifs : First-Come First-Served (FCFS) et Short Job First (SJF)</p> <p>Dans un syst\u00e8me \u00e0 ordonnancement non pr\u00e9emptif ou sans r\u00e9quisition, le syst\u00e8me d'exploitation choisit le prochain processus \u00e0 ex\u00e9cuter, en g\u00e9n\u00e9ral, le Premier Arriv\u00e9 est le Premier Servi PAPS (ou First-Come First-Served FCFS) ou le plus court d'abord (Short Job First SJF). </p> <p>Il lui alloue le processeur jusqu'\u00e0 ce qu'il se termine ou qu'il se bloque (en attente d'un \u00e9v\u00e9nement). Il n'y a pas de r\u00e9quisition. </p> <p>Si l'ordonnanceur fonctionne selon la strat\u00e9gie SJF, il choisit, parmis le lot de processus \u00e0 ex\u00e9cuter, le plus court (plus petit temps d'ex\u00e9cution). Cette strat\u00e9gie est bien adapt\u00e9e au traitement par lots de processus dont les temps maximaux d'ex\u00e9cution sont connus ou fix\u00e9s par les utilisateurs car elle offre un meilleur temps moyen de s\u00e9jour. </p> <p>Temps de s\u00e9jour</p> <p>Le temps de s\u00e9jour d'un processus (temps de rotation ou de virement) est l'intervalle de temps entre la soumission du processus et son ach\u00e8vement. </p> <p>Structures abstraites</p> <p>D'apr\u00e8s vos connaissances acquises, quelles structures de donn\u00e9es vous semblent les plus adapt\u00e9es pour programmer FCFS, puis pour SJF? </p>"},{"location":"terminale/processus/#exemple-ordonnancement-fcfs","title":"Exemple Ordonnancement FCFS","text":"<p>On doit trouver l'ordonnancement des processus sachant leur temps d'arrivage et la dur\u00e9e d'ex\u00e9cution pr\u00e9vue:</p> Processus Temps d'ex\u00e9cution Temps d'arrivage A 3 0 B 6 1 C 4 4 D 2 6 E 1 7 <p>Voici ce que \u00e7a donnerait si ils pouvaient \u00eatre \u00e9lus en m\u00eame temps au niveau de l'ex\u00e9cution. !!!MAIS CA N'EST PAS LE CAS!!!! <pre><code>gantt\n    dateFormat mm\n    axisFormat %M\n    A : 00, 3m\n    B : 01, 6m\n    C : 04, 4m\n    D : 06, 2m\n    E : 07, 1m</code></pre></p> <p>Au temps 0, seulement le processus A est dans le syst\u00e8me et il s'ex\u00e9cute. Au temps 1 le processus B arrive mais il doit attendre qu'A termine car il a encore 2 unit\u00e9s de temps. Ensuite B s'ex\u00e9cute pendant 6 unit\u00e9s de temps. Au temps 4, 6, et 7 les processus C, D et E arrivent mais B n'a pas fini. Une fois que B a termin\u00e9, C, D et E entrent au syst\u00e8me dans l'ordre (tout \u00e7a en supposant qu'il n'y a pas de blocage)</p> <p>Voici donc le sch\u00e9ma d'ex\u00e9cution:</p> <pre><code>gantt\n    dateFormat mm\n    axisFormat %M\n    Arrivage de A :milestone, 00, 0d\n    A : a1, 00, 3m\n    Arrivage de B :milestone, 01, 0d\n    B : b1, after a1, 6m\n    Arrivage de C :milestone, 04, 0d\n    C : c1, after b1, 4m\n    Arrivage de D :milestone, 06, 0d\n    D : d1, after c1, 2m\n    Arrivage de E :milestone, 07, 0d\n    E : e1, after d1, 1m</code></pre> Processus Temps d'ex\u00e9cution Temps d'arrivage Temps de terminaison A 3 0 3 B 6 1 9 C 4 4 13 D 2 6 15 E 1 7 16 <p>Le temps de s\u00e9jour pour chaque processus est obtenu soustrayant le temps d'entr\u00e9e du processus du temps de terminaison. Ainsi : Le temps d'attente est calcul\u00e9 soustrayant le temps d'ex\u00e9cution du temps de s\u00e9jour :</p> Processus Temps de sejour Temps d'attente A \\(3-0 = 3\\) \\(3-3 = 0\\) B \\(9-1 = 8\\) \\(8-6 = 2\\) C \\(13-4 = 9\\) \\(9-4 = 5\\) D \\(15-6 = 9\\) \\(9-2 = 7\\) E \\(16-7 = 9\\) \\(9-1 = 8\\) <p>Tout simplement, on peut d\u00e9duire ces informations du dessin si on l'a fait au lieu d'apprendre des formules.</p> <p>On calcule tout b\u00eatement les moyennes de ces colonnes si on nous demande des temps moyens.</p>"},{"location":"terminale/processus/#exemple-ordonnancement-sjf","title":"Exemple Ordonnancement SJF","text":"<p>On doit trouver l'ordonnancement des processus sachant leur temps d'arrivage et la dur\u00e9e d'ex\u00e9cution pr\u00e9vue:</p> Processus Temps d'ex\u00e9cution Temps d'arrivage A 3 0 B 6 1 C 4 4 D 2 6 E 1 7 <p>Ici, l'ordre de priorit\u00e9 sera donc  A,B,E,D,C  car E, D et C arrivent pendant l'ex\u00e9cution de B. A la fin de B, le plus court est choisi, donc c'est E, puis D, puis C.</p> <pre><code>gantt\n    dateFormat mm\n    axisFormat %M\n    Arrivage de A :milestone, 00, 0d\n    A : a1, 00, 3m\n    Arrivage de B :milestone, 01, 0d\n    B : b1, after a1, 6m\n    Arrivage de C :milestone, 04, 0d\n    C : c1, after d1, 4m\n    Arrivage de D :milestone, 06, 0d\n    D : d1, after e1, 2m\n    Arrivage de E :milestone, 07, 0d\n    E : e1, after b1, 1m</code></pre> <p>Je vous laisse cr\u00e9er le tableau comportant les temps d'attente et de terminaison.</p>"},{"location":"terminale/processus/#ordonnancement-preemptif","title":"Ordonnancement pr\u00e9emptif","text":"<p>Ordonnancement pr\u00e9emptif</p> <p>Dans un sch\u00e9ma d'ordonnanceur pr\u00e9emptif, ou avec r\u00e9quisition, pour s'assurer qu'aucun processus ne s'ex\u00e9cute pendant trop de temps, les ordinateurs ont une horloge \u00e9lectronique qui g\u00e9n\u00e8re p\u00e9riodiquement une interruption. A chaque interruption d'horloge, le syst\u00e8me d'exploitation reprend la main et d\u00e9cide si le processus courant doit poursuivre son ex\u00e9cution ou s'il doit \u00eatre suspendu pour laisser place \u00e0 un autre. S'il d\u00e9cide de suspendre son ex\u00e9cution au profit d'un autre, il doit d'abord sauvegarder l'\u00e9tat des registres du processeur avant de charger dans les registres les donn\u00e9es du processus \u00e0 lancer. C'est qu'on appelle la commutation de contexte ou le changement de contexte. Cette sauvegarde est n\u00e9cessaire pour pouvoir poursuivre ult\u00e9rieurement l'ex\u00e9cution du processus suspendu. Le processeur passe donc d'un processus \u00e0 un autre en ex\u00e9cutant chaque processus pendant quelques dizaines ou centaines de millisecondes. Le temps d'allocation du processeur au processus est appel\u00e9 quantum. Cette commutation entre processus doit \u00eatre rapide, c'est-\u00e0-dire, exiger un temps nettement inf\u00e9rieur au quantum.</p> <p>Le processeur, \u00e0 un instant donn\u00e9, n'ex\u00e9cute r\u00e9ellement qu'un seul processus, mais pendant une seconde, le processeur peut ex\u00e9cuter plusieurs processus et donne ainsi l'impression de parall\u00e9lisme (pseudo-parall\u00e9lisme).</p> <p>Probl\u00e8mes :</p> <ul> <li> <p>Choix de la valeur du quantum.</p> </li> <li> <p>Choix du prochain processus \u00e0 ex\u00e9cuter dans chacune des situations suivantes :</p> </li> <li> <p>Le processus en cours se bloque (passe \u00e0 l'\u00e9tat Attente).</p> </li> <li>Le processus en cours passe \u00e0 l'\u00e9tat Pr\u00eat (fin du quantum...).</li> <li>Un processus passe de l'\u00e9tat Attente \u00e0 l'\u00e9tat Pr\u00eat (fin d'une E/S).</li> <li>Le processus en cours se termine.</li> </ul> <p>Ordonnancement du plus petit temps de s\u00e9jour</p> <p>L'ordonnancement du plus petit temps de s\u00e9jour ou Shortest Remaining Time est la version pr\u00e9emptive de l'algorithme SJF. Un processus arrive dans la file de processus, l'ordonnanceur compare la valeur esp\u00e9r\u00e9e pour ce processus contre la valeur du processus actuellement en ex\u00e9cution. Si le temps du nouveau processus est plus petit, il rentre en ex\u00e9cution imm\u00e9diatement.</p> <p>Ordonnancement circulaire</p> <p>L'algorithme du tourniquet, circulaire ou round robin est un algorithme ancien, simple, fiable et tr\u00e8s utilis\u00e9. Il m\u00e9morise    dans une file du type FIFO (First In First Out) la liste des processus pr\u00eats, c'est-\u00e0-dire en attente d'ex\u00e9cution.</p> <p></p> <p>Choix du processus \u00e0 ex\u00e9cuter:</p> <p>Il alloue le processeur au processus en t\u00eate de file, pendant un quantum de temps. Si le processus se bloque ou se termine avant la fin de son quantum, le processeur est imm\u00e9diatement allou\u00e9 \u00e0 un autre processus (celui en t\u00eate de file). Si le processus ne se termine pas au bout de son quantum, son ex\u00e9cution est suspendue. Le processeur est allou\u00e9 \u00e0 un autre processus (celui en t\u00eate de file). Le processus suspendu est ins\u00e9r\u00e9 en queue de file. Les processus qui arrivent ou qui passent de l'\u00e9tat bloqu\u00e9 \u00e0 l'\u00e9tat pr\u00eat sont ins\u00e9r\u00e9s en queue de file.</p> <p>Choix de la valeur du quantum:</p> <p>Un quantum trop petit provoque trop de commutations de processus et abaisse l'efficacit\u00e9 du processeur. Un quantum trop \u00e9lev\u00e9 augmente le temps de r\u00e9ponse des courtes commandes en mode interactif. Un quantum entre 20 et 50 ms est souvent un compromis raisonnable</p>"},{"location":"terminale/processus/#exemple","title":"Exemple","text":"<p>Soient deux processus A et B pr\u00eats tels que A est arriv\u00e9 en premier suivi de B, 2 unit\u00e9s de temps apr\u00e8s. Les temps de UCT n\u00e9cessaires pour l'ex\u00e9cution des processus A et B sont respectivement 15 et 4 unit\u00e9s de temps. Le temps de commutation est suppos\u00e9 nul. Calculer le temps de s\u00e9jour de chaque processus A et B, le temps moyen de s\u00e9jour, le temps d'attente, le temps moyen d'attente, et le nombre de changements de contexte pour :</p> <ul> <li>SRT</li> <li>Round robin (quantum = 10 unit\u00e9s de temps)</li> <li>Round robin (quantum = 3 unit\u00e9s de temps)</li> </ul> <p>Il faut faire des dessins</p>"},{"location":"terminale/processus/#exemple-srt","title":"Exemple SRT","text":"<p>Sch\u00e9ma d'ex\u00e9cution:</p> <p>Quand B arrive, il reste 13 unit\u00e9s de temps \u00e0 A. B prend donc la main avec ses 4 unit\u00e9s de temps, puis A reprend son ex\u00e9cution et se termine.</p> <pre><code>gantt\n    dateFormat mm\n    axisFormat %M\n    Arrivage de A :milestone, 00, 0d\n    A : a1, 00, 2m\n    Arrivage de B :milestone, 02, 0d\n    B : b1, after a1, 4m\n    A : a2, after b1, 13m</code></pre> <p>Compl\u00e9tez:</p> Processus Temps de sejour Temps d'attente A B <ul> <li>Temps moyen de s\u00e9jour:</li> <li>Temps moyen d'attente:</li> </ul>"},{"location":"terminale/processus/#exemple-round-robin-q10","title":"Exemple Round Robin (q=10)","text":"<ul> <li>A prend direct 10 unit\u00e9s (le max) puis repart dans sa file.</li> <li>B prend ses 4 unit\u00e9s et se termine.</li> <li>A est d\u00e9fil\u00e9, prend ses 5 unit\u00e9s restantes et se termine.</li> </ul> <pre><code>gantt\n    dateFormat mm\n    axisFormat %M\n    Arrivage de A :milestone, 00, 0d\n    A : a1, 00, 10m\n    Arrivage de B :milestone, 02, 0d\n    B : b1, after a1, 4m\n    Terminaison B :milestone, after b1, 0d\n    A : a2, after b1, 5m\n    Terminaison A :milestone, after a2, 0d</code></pre> <p>Compl\u00e9tez:</p> Processus Temps de sejour Temps d'attente A B <ul> <li>Temps moyen de s\u00e9jour:</li> <li>Temps moyen d'attente:</li> </ul>"},{"location":"terminale/processus/#exemple-round-robin-q3","title":"Exemple Round Robin (q=3)","text":"<p>Commentez le sch\u00e9ma d'ex\u00e9cution suivant:</p> <pre><code>gantt\n    dateFormat mm\n    axisFormat %M\n    Arrivage de A :milestone, 00, 0d\n    A : a1, 00, 3m\n    Arrivage de B :milestone, 02, 0d\n    B : b1, after a1, 3m\n    A : a2, after b1, 3m\n    B : b2, after a2, 1m\n    Terminaison B :milestone, after b2, 0d\n    A : a3, after b2, 9m\n    Terminaison A :milestone, after a3, 0d\n</code></pre> <p>Compl\u00e9tez:</p> Processus Temps de sejour Temps d'attente A B <ul> <li>Temps moyen de s\u00e9jour:</li> <li>Temps moyen d'attente:</li> </ul>"},{"location":"terminale/processus/#ressources-et-interblocage","title":"Ressources et interblocage","text":"<p>L'ex\u00e9cution d'un processus n\u00e9cessite un ensemble de ressources (m\u00e9moire principale, disques, fichiers, p\u00e9riph\u00e9riques, etc.) qui lui sont attribu\u00e9es par le syst\u00e8me d'exploitation. L'utilisation d'une ressource passe par les \u00e9tapes suivantes :</p> <ul> <li>Demande de la ressource : Si l'on ne peut pas satisfaire la demande, il faut attendre. La demande sera mise dans une table d'attente des ressources.</li> <li>Utilisation de la ressource : Le processus peut utiliser la ressource.</li> <li>Lib\u00e9ration de la ressource : Le processus lib\u00e8re la ressource demand\u00e9e et allou\u00e9e. </li> </ul> <p>Lorsqu'un processus demande un acc\u00e8s exclusif \u00e0 une ressource d\u00e9j\u00e0 allou\u00e9e \u00e0 un autre processus, le syst\u00e8me d'exploitation d\u00e9cide de le mettre en attente jusqu'\u00e0 ce que la ressource demand\u00e9e devienne disponible ou lui retourner un message indiquant que la ressource n'est pas disponible: r\u00e9essayer plus tard.</p> <p>Interblocage (deadlock)</p> <p>Des probl\u00e8mes peuvent survenir, lorsque les processus obtiennent des acc\u00e8s exclusifs aux ressources. Par exemple, un processus A d\u00e9tient une ressource P et attend une autre ressource Q qui est utilis\u00e9e par un autre processus B; le processus B d\u00e9tient la ressource Q et attend la ressource P. On a une situation d'interblocage (deadlock en anglais) car Les deux processus attendent mutuellement des ressources qui ne seront jamais lib\u00e9r\u00e9es. Les deux processus vont attendre ind\u00e9finiment.</p> <p>En g\u00e9n\u00e9ral, un ensemble de processus est en interblocage si chaque processus attend la lib\u00e9ration d'une ressource qui est allou\u00e9e \u00e0 un autre processus de l'ensemble. Comme tous les processus sont en attente, aucun ne  pourra s'ex\u00e9cuter et donc lib\u00e9rer les ressources demand\u00e9es par les autres. Ils attendront tous ind\u00e9finiment</p> <p>Conditions d'interblocage</p> <p>Pour qu'une situation d'interblocage ait lieu, les quatre conditions suivantes doivent \u00eatre remplies (Conditions de Coffman) :</p> <ul> <li>L'exclusion mutuelle. A un instant pr\u00e9cis, une ressource est allou\u00e9e \u00e0 un seul processus.</li> <li>La d\u00e9tention et l'attente. Les processus qui d\u00e9tiennent des ressources peuvent en demander d'autres.</li> <li>Pas de pr\u00e9emption. Les ressources allou\u00e9es \u00e0 un processus sont lib\u00e9r\u00e9es uniquement par le processus.</li> <li>L'attente circulaire. Il existe une cha\u00eene de deux ou plus processus de telle mani\u00e9re que chaque processus dans la cha\u00eene requiert une ressource allou\u00e9e au processus suivant dans la cha\u00eene.</li> </ul> <p>Acc\u00e8s \u00e0 une base de donn\u00e9es</p> <p>Supposons deux processus A et B qui demandent des acc\u00e8s exclusifs aux enregistrements d'une base de donn\u00e9es. On arrive \u00e0 une situation d'interblocage si :</p> <ul> <li>Le processus A a verrouill\u00e9 l'enregistrement P et demande l'acc\u00e8s \u00e0 l'enregistrement Q.</li> <li>Le processus B a verrouill\u00e9 l'enregistrement Q et demande l'acc\u00e8s \u00e0 l'enregistrement P.</li> </ul> <p>circulation routi\u00e8re</p> <p>Consid\u00e9rons deux routes \u00e0 double sens qui se croisent comme dans la figure suivante, o\u00f9 la circulation est impossible. Un probl\u00e8me d'interblocage y est pr\u00e9sent. A chaque intersection, une voiture (processus) attend que la route (ressource) se lib\u00e8re.</p> <p></p> <p>acc\u00e8s p\u00e9riph\u00e9riques</p> <p>Supposons que deux processus A et B veulent imprimer, en utilisant la m\u00eame imprimante, un fichier stock\u00e9 sur une bande magn\u00e9tique. La taille de ce fichier est sup\u00e9rieure \u00e0 la capacit\u00e9 du disque. Chaque processus a besoin d'un acc\u00e8s exclusif au d\u00e9rouleur et \u00e0 l'imprimante simultan\u00e9ment. On a une situation d'interblocage si :</p> <ul> <li>Le processus A utilise l'imprimante et demande l'acc\u00e8s au d\u00e9rouleur.</li> <li>Le processus B d\u00e9tient le d\u00e9rouleur de bande et demande l'imprimante.</li> </ul> <p>Question</p> <p>Le programme imprimante.py donn\u00e9 permet de rendre compte de cet interblocage. (Il utilise de ce fait une mauvaise fa\u00e7on de programmer) Les instructions sleep permettent de simuler des actions suppl\u00e9mentaires (et de passer la main aux autres processus entre temps). L'instruction with verrou signifie \"attend que la ressource soit disponible et ex\u00e9cute le bloc ensuite en la verrouillant, puis d\u00e9v\u00e9rouille la ressource. C'est pour \u00e7a qu'on utilise with pour lire et \u00e9crire dans des fichiers.</p> <p>Proposez une r\u00e9solution de cette situation d'interblocage en modifiant sensiblement le programme python.</p> <p>D\u00e9tection d'interblocage</p> <p>Le graphe d'allocation des ressources est un graphe biparti compos\u00e9 de deux types de n\u0153uds et d'un ensemble d'arcs :</p> <ul> <li>Les processus qui sont repr\u00e9sent\u00e9s par des cercles.</li> <li>Les ressources qui sont repr\u00e9sent\u00e9es par des rectangles. Chaque rectangle contient autant de points qu'il y a d'exemplaires de la ressource repr\u00e9sent\u00e9e.</li> <li>Un arc orient\u00e9 d'une ressource vers un processus signifie que la ressource est allou\u00e9e au processus.</li> <li>Un arc orient\u00e9 d'un processus vers une ressource signifie que le processus est bloqu\u00e9 en attente de la ressource</li> </ul> <p>Exemple de graphe d'allocation des ressources au moment de l'interblocage. On remarque qu'il est cyclique.</p> <p>L'apparition d'un cycle dans le graphe d'allocation des ressources indique une situation d'interblocage. </p> <p></p> <p>Mise en \u00e9vidence d'interblocages</p> <p>Soient trois processus A, B et C qui utilisent trois ressources R, S et T.</p> A B C Demande R Demande S Demande T Demande S Demande T Demande R Lib\u00e8re R Lib\u00e8re S Lib\u00e8re T Lib\u00e8re S Lib\u00e8re T Lib\u00e8re R <p>Pour r\u00e9pondre aux question suivantes, on dessinera progressivement le graphe d'allocation des ressources. S'il y a un interblocage possible, on pourra r\u00e9pondre en dessinant le graphe au crayon gris pour l'expliquer. Il faut dessiner le graphe \u00e9tape par \u00e9tape, et ne pas oublier d'effacer les ar\u00eates correspondant \u00e0 la lib\u00e9ration de ressources ou au d\u00e9blocage des processus</p> <ol> <li>Si les processus sont ex\u00e9cut\u00e9s s\u00e9quentiellement, les uns apr\u00e8s les autres, y-a-t-il interblocage possible?</li> <li>Si l'ex\u00e9cution est g\u00e9r\u00e9e par un ordonnanceur de type circulaire, y-a-t'il interblocage? (A demande R, B demande S, ...)</li> </ol> <p>R\u00e9solution d'interblocages</p> <p>La plupart du temps, il suffit de se donner une ligne de conduite:</p> <p>Tous les processus doivent bloquer les ressources dans le m\u00eame ordre et les lib\u00e9rer dans le m\u00eame ordre. Attention, c'est un sujet extr\u00eamement vaste et pris\u00e9 de la recherche, et \u00e7a ne se r\u00e9sume pas qu'\u00e0 \u00e7a, mais c'est un tr\u00e8s bon d\u00e9but.</p> <p>Question</p> <p>R\u00e9ordonnez le contenu des programmes des processus A, B et C pour se d\u00e9faire de l'interblocage pr\u00e9c\u00e9dent.</p> A B C"},{"location":"terminale/processus/#bidouiller-du-processus-les-trucs-qui-servent-tout-le-temps","title":"Bidouiller du processus &gt; Les trucs qui servent tout le temps","text":"<p>Un processus peut cr\u00e9er un ou plusieurs processus \u00e0 l'aide d'une commande syst\u00e8me (\"fork\" sous les syst\u00e8mes de type Unix).</p> <p>Imaginons un processus A qui cr\u00e9e un processus B. On dira que A est le p\u00e8re de B et que B est le fils de A. B peut, \u00e0 son tour cr\u00e9\u00e9 un processus C (B sera le p\u00e8re de C et C le fils de B). On peut mod\u00e9liser ces relations p\u00e8re/fils par une structure arborescente</p> <p>Si un processus est cr\u00e9\u00e9 \u00e0 partir d'un autre processus, comment est cr\u00e9\u00e9 le tout premier processus ?</p> <p>Sous un syst\u00e8me d'exploitation comme Linux, au moment du d\u00e9marrage de l'ordinateur un tout premier processus (appel\u00e9 processus 0 ou encore Swapper) est cr\u00e9\u00e9 \u00e0 partir de \"rien\" (il n'est le fils d'aucun processus). Ensuite, ce processus 0 cr\u00e9e un processus souvent appel\u00e9 \"init\" (\"init\" est donc le fils du processus 0).</p> <p>La base 1</p> <p>Pour installer les utilitaires de gestion des processus, entrez la commande suivante dans le shell de MSYS2 (Notez que sous linux, ces utilitaires sont intall\u00e9s par d\u00e9faut)</p> <p><code>pacman -S procps-ng psmisc</code></p> <p>Lancez le programme perl qui vous a \u00e9t\u00e9 donn\u00e9: <pre><code>./process_create.pl\n</code></pre></p> <p>Ce programme permet de cr\u00e9er une arborescence de processus (qui ne font pas grand chose \u00e0 part \u00eatre l\u00e0).</p> <p>Le prompt ne revient pas. En effet, le processus que vous avez lanc\u00e9 est en \"avant plan\" (foreground).</p> <p>On va le mettre en \"arri\u00e8re plan\" (background). Pour commencer, appuyez sur Ctrl+Z</p> <p>Cette commande permet d'envoyer un signal de suspension sp\u00e9cial SIGTSTP (Signal Terminal STOP) au processus en avant plan dans un terminal.</p> <p>Ex\u00e9cutez maintenant la commande <code>ps</code>. Elle permet de lister les processus (sous MSYS2, on ne voit pas tout, mais c'est justement bien suffisant).</p> <pre><code>$ ps\n      PID    PPID    PGID     WINPID   TTY         UID    STIME COMMAND\n     7359     628    7359      24820  cons0     197612 17:12:20 /usr/bin/ps\n      628       1     628      99764  cons0     197612 17:06:56 /usr/bin/bash\nS    7328     628    7328      71104  cons0     197612 17:11:38 /usr/bin/perl\n...\n...\n</code></pre> <p>Ici, un processus associ\u00e9 \u00e0 l'ex\u00e9cution de notre programme perl est en troisi\u00e8me ligne. Il est suspendu, mais il existe toujours.</p> <p>Commande ps</p> <ul> <li>Chaque ligne repr\u00e9sente un processus. </li> <li>PID signifie Processus ID. C'est l'identifiant unique donn\u00e9 au processus par le syst\u00e8me d'exploitation.</li> <li>PPID signifie Parent Processus ID. C'est l'identifiant du processus qui a cr\u00e9\u00e9 ce processus.</li> <li>COMMAND repr\u00e9sente le programme que fait tourner le processus</li> <li>Le reste on s'en fiche</li> </ul> <p>Vu qu'il y a des parents et des enfants on se doute bien maintenant que \u00e7a fait un arbre de processus. On voit d'ailleurs que c'est le bash qui a cr\u00e9\u00e9 les 2 autres processus. Si vous ne voyez pas, demandez.</p> <p>Vous pouvez maintenant demander sa mise en arri\u00e8re plan avec la commande <code>bg</code>.</p> <p>Si vous r\u00e9ex\u00e9cutez la commande ps, le S aura disparu.</p> <p>Remettez le processus en avant plan avec la commande <code>fg</code></p> <p>On va maintenant killer le processus. Entrez la combinaison de touches Ctrl+C. Cette combinaison envoie un signal SIGKILL pour tuer le processus en avant plan.</p> <p>refaites un <code>ps</code>, le processus perl a disparu.</p> <p>Vous avez la base de la gestion des process dans un terminal. (Et oui, on peut causer avec les processus par le biais de signaux, on ne les abordera pas, mais il vous faut le guide de survie minimum)</p> <p>On y retourne (la base 2)</p> <p>Pour lancer directement le programme en arri\u00e8re plan, lancez la commande</p> <pre><code>./create_process.pl &amp;\n</code></pre> <p>Les processus cr\u00e9\u00e9s ne vivront qu'une minute. Relancez la commande si les processus disparaissent.</p> <p>Comme vous l'avez devin\u00e9, mettre un &amp; \u00e0 la fin d'une commande permet de lancer le processus associ\u00e9 en arri\u00e8re plan.</p> <p>Vu que le process \u00e9crit sur la sortie standard, il faut appuyer sur entr\u00e9e pour avoir le retour du prompt.</p> <p>vous pouvez observer les processus cr\u00e9\u00e9s gr\u00e2ce \u00e0 la commande <code>top</code>. Elle dispose d'une multitude de param\u00e8tres et d'interactions possibles. Pour quitter la commande top, appuyez sur la touche q</p> <p>Vous pouvez demander l'affichage de l'arborescence des processus avec la commande <code>pstree -p</code></p>"},{"location":"terminale/processus/#exercices-a-realiser-apres-avoir-travaille-et-compris-le-cours","title":"Exercices \u00e0 r\u00e9aliser apr\u00e8s avoir travaill\u00e9 et compris le cours.","text":"<ul> <li>Q1. Qu'est-ce qu'un processus informatique ?</li> <li>Q2. Quels sont les \u00e9tats dans lequel un processus peut se trouver ?</li> <li>Q3. Quel dispositif attribue \u00e0 un processus un \u00e9tat ?</li> <li>Q4. Dans quel \u00e9tat se trouve un processus en cours d'ex\u00e9cution par le microprocesseur ?</li> <li>Q5. Par quoi est identifi\u00e9 un processus ?</li> <li>Q6. Qu'est-ce que l'ordonnancement des processus ?</li> <li>Q7. Nommez les 2 grandes famille d'ordonnanceurs et d\u00e9crivez leur diff\u00e9rence fondamentale.</li> <li>Q8. Consid\u00e9rons cinq processus not\u00e9s A, B, C, D et E dans une file d'attente. Les dur\u00e9es d'ex\u00e9cution et leurs dates d'arrivage respectifs sont donn\u00e9s dans le tableau ci-dessous.</li> </ul> Processus Dur\u00e9e d'ex\u00e9cution Date d'arrivage A 10 0 B 1 1 C 2 2 D 1 3 E 5 4 <p>Donner le sch\u00e9ma d'ex\u00e9cution des algorithmes d'ordonnancement suivants :</p> <ul> <li>First-Come First-Served (FCFS)</li> <li>Short Job First (SJF)</li> <li>Shortest Remaining Time (SRT)</li> <li>Round Robin (RR) avec un quantum de 2</li> </ul> <p>Quelle politique d'ordonnancement donne le meilleur r\u00e9sultat, c'est-\u00e0-dire celui correspondant \u00e0 la dur\u00e9e minimale d'attente moyenne par processus ?</p> <ul> <li>Q9. Trois processus A, B et C ont \u00e9t\u00e9 charg\u00e9s dans un syst\u00e8me informatique comme indiqu\u00e9 ci-dessous :</li> </ul> Processus Dur\u00e9e d'ex\u00e9cution Date d'arrivage A 4 0 B 2 0 C 1 3 <p>Donner le sch\u00e9ma d'ex\u00e9cution des algorithmes d'ordonnancement suivants (il n'est pas requis de conna\u00eetre ces termes. Ils vous seront rappel\u00e9s. Round Robin est quand m\u00eame super utilis\u00e9, c'est bien de se souvenir de son fonctionement):</p> <ul> <li>First-Come First-Served (FCFS)</li> <li>Short Job First (SJF)</li> <li>Shortest Remaining Time (SRT)</li> <li>Round Robin (RR) avec un quantum de 1</li> </ul> <p>Quelle politique d'ordonnancement donne le meilleur r\u00e9sultat c'est-\u00e0-dire celui correspondant \u00e0 la dur\u00e9e minimale d'attente moyenne par processus ?</p> <ul> <li>Q10. Quelle commande permet de lister les processus en cours sur la machine?</li> <li>Q11. Quelle Combinaison de touche permet de killer un processus dans un terminal?</li> <li>Q12. Quelle Combinaison de touche permet de killer le processus en avant plan dans un terminal?</li> <li>Q13. R\u00e9alisez le diagramme d'\u00e9tat d'un processus.</li> </ul>"},{"location":"terminale/structures-de-donnees/arbrebinaire/","title":"Arbres enracin\u00e9s","text":"<p>Pr\u00e9-requis</p> <p>Si les listes sont ma\u00eetris\u00e9es, ceci ne devrait presque \u00eatre qu'une formalit\u00e9.</p>"},{"location":"terminale/structures-de-donnees/arbrebinaire/#arbre-enracine-quelconque","title":"Arbre enracin\u00e9 quelconque","text":"<p>Voici un arbre enracin\u00e9 quelconque:</p> <pre><code>\ngraph TD;\n    A((3))\n    A --&gt; B((7))\n    A --&gt; C((2))\n    B --&gt; D((9))\n    B --&gt; E((18))\n    C --&gt; F((15))\n    C --&gt; G((6))\n    C --&gt; H((5))\n    F --&gt; I((8))</code></pre> <p>Arbre (enracin\u00e9)</p> <p>Un arbre est soit vide, soit compos\u00e9 d'un noeud portant une donn\u00e9e ainsi qu'une for\u00eat.</p> <p>Une for\u00eat est vide ou c'est un ensemble d'arbres disjoints.</p> <p>On appelle racine un noeud qui n'a pas de parent.</p> <p>On appelle feuille un noeud n'ayant pas d'enfant.</p> <p>La taille d'un arbre est son nombre de noeuds.</p> <p>La hauteur d'un arbre poss\u00e8de 2 d\u00e9finitions impactant la d\u00e9finition de la hauteur de l'arbre vide:</p> <ul> <li>Longueur du chemin \u00e0 la feuille la plus \u00e9loign\u00e9e (\\(hauteur(\\empty)=-1\\))</li> <li>Nombre de noeuds dans le chemin \u00e0 la feuille la plus \u00e9loign\u00e9e. (\\(hauteur(\\empty)=0\\))</li> </ul> <p>Dans un premier temps, nous allons nous int\u00e9resser \u00e0 une forme sp\u00e9ciale d'arbre, les arbres binaires.</p>"},{"location":"terminale/structures-de-donnees/arbrebinaire/#arbres-binaires","title":"Arbres binaires","text":"<p>Arbre binaire</p> <p>Un arbre binaire est une structure compos\u00e9e d'une cl\u00e9 (ou \u00e9tiquette), ainsi que de 2 arbres, le sous-arbre gauche (sag) ainsi que le sous-arbre droit (sad). C'est un arbre tr\u00e8s particulier car on distingue bien la position de chaque sous-arbre.</p> <p></p> <p>Exercice</p> <p>Proposez une impl\u00e9mentation python immuable du type arbrebin.</p> <p>Exercices</p> <p>Impl\u00e9menter les fonctions d'acc\u00e8s de base:</p> <ul> <li><code>cle(a: arbrebin) -&gt; int</code></li> <li><code>sag(a: arbrebin) -&gt; arbrebin</code></li> <li><code>sad(a: arbrebin) -&gt; arbrebin</code></li> <li><code>est_vide(a: arbrebin) -&gt; bool</code></li> <li><code>est_feuille(a: arbrebin) -&gt; bool</code></li> </ul> <p>Impl\u00e9menter en cons\u00e9quence les fonctions r\u00e9cursives:</p> <ul> <li><code>hauteur</code> calcule la hauteur d'un arbre<ul> <li>(je suis un arbre, je pose la question \u00e0 mon sag et mon sad, qu'est-ce que je fais avec leurs r\u00e9ponse?)</li> </ul> </li> <li><code>taille</code> calcule le nombre de noeuds d'un arbre</li> <li><code>somme</code> calcule la somme des cl\u00e9s d'un arbre</li> <li><code>to_str</code> renvoie une str comportant toutes les cl\u00e9s d'un arbre.</li> <li><code>minimum</code> renvoie la cl\u00e9 minimum d'un arbre binaire.</li> <li><code>maximum</code> renvoie la cl\u00e9 maximum d'un arbre binaire.</li> <li><code>sont_egaux</code> renvoie si 2 arbres sont identiques.</li> </ul> <p>Arbre al\u00e9atoire</p> <ul> <li>Cr\u00e9er une fonction r\u00e9cursive <code>genere_alea(h: int) -&gt; arbrebin</code> qui g\u00e9n\u00e8re un arbre complet ayant pour hauteur h, comportant des cl\u00e9s al\u00e9atoires de 1 \u00e0 100.</li> <li>Sp\u00e9 maths: Cr\u00e9er une fonction r\u00e9cursive <code>genere_alea2() -&gt; arbrebin</code> qui g\u00e9n\u00e8re un arbre comportant des cl\u00e9s al\u00e9atoires de 1 \u00e0 100. La probabilit\u00e9 de cr\u00e9er un noeud doit \u00eatre l'inverse de sa hauteur.</li> <li>Sp\u00e9 Maths: Etudiez les fonctions \\(f_\\alpha(x)=e^{-\\alpha  x^2}, x\\in \\mathbb{R^+},  \\alpha \\in \\mathbb{R}^{*+}\\)<ul> <li>Variations, limites, convexit\u00e9</li> <li>Trouvez les coordonn\u00e9es de leur point d'inflexion.</li> <li>Proposez comment utiliser cette fonction pour g\u00e9n\u00e9rer la probabilit\u00e9 de cr\u00e9er un noeud de hauteur \\(x\\), pour que l'arbre ait \u00e0 peu pr\u00e8s la hauteur \\(h\\). (on estimera que la probabilit\u00e9 renvoy\u00e9e au del\u00e0 du point d'inflexion est rapidement trop faible pour aller bien loin, et qu'il est d\u00e9j\u00e0 probable que certaines branches se soient d\u00e9j\u00e0 arr\u00eat\u00e9es avant d'atteindre la hauteur \\(h\\))</li> </ul> </li> </ul> <p>Arbre \u00e9quilibr\u00e9</p> <p>Un arbre est \u00e9quilibr\u00e9 s'il est vide ou que, \u00e0 la fois:</p> <ul> <li>La distance entre la hauteur de ses enfants est au maximum 1.</li> <li>Ses enfants sont \u00e9quilibr\u00e9s.</li> </ul> <p>Dessinez un arbre \u00e9quilibr\u00e9. Ecrire la fonction <code>est_equilibre(a: arbrebin) -&gt; bool</code>.</p> <p>Impl\u00e9mentation mutable</p> <p>L'impl\u00e9mentation ci-dessous utilise aussi une sentinelle, mais ne l'utilise pas de mani\u00e8re aussi sioux que pour les listes. Rien dde circulaire. Elle signifie seulement l'arbre vide. La cr\u00e9ation d'une sentinelle nous permet de ne pas utiliser la valeur g\u00e9n\u00e9rique None, qui pourrait signifier bien autre chose qu'une absence d'enfant, car None n'est pas propre \u00e0 notre structure.</p> <pre><code>class ArbreBin:\n    def __init__(self, cle, gauche: 'ArbreBin', droit: 'ArbreBin'):\n        self.cle = cle\n        self.gauche = gauche\n        self.droit = droit\n\n    def est_feuille(self):\n        return self.gauche is ARBRE_VIDE and self.droite is ARBRE_VIDE\n\n    def est_vide(self):\n        return self.gauche is ARBRE_VIDE and self.droite is ARBRE_VIDE\n\n    def taille(self) -&gt; int:\n        if self.est_vide():\n            return -1\n        return 1 + self.gauche.taille() + self.droit.taille()\n\n\nclass Sentinelle(ArbreBin):\n    def __init__(self):\n        super().__init__(0, self, self)\n\nARBRE_VIDE = Sentinelle()\n</code></pre> <p>Un autre possibilt\u00e9 est celle-ci, cette fois-ci avec l'utilisation de None:</p> <pre><code>class Noeud:\n    def __init__(self, cle, gauche: 'Noeud|None', droit: 'Noeud|None'):\n        self.cle = cle\n        self.gauche = gauche\n        self.droit = droit\n\n    def est_feuille(self):\n        return self.gauche is None and self.droite is None\n\n    ## Ici, on ne peut pas avoir de m\u00e9thode est_vide() car self ne peut jamais \u00eatre None. \n    ## Si self existe, c'est qu'un objet a \u00e9t\u00e9 instanci\u00e9, donc qu'il n'est n\u00e9cessairement pas rien.\n\n    def taille(self) -&gt; int:\n        \"\"\"\n        self ne pouvant pas \u00eatre None, le cas de base est qu'il est une feuille.\n        Ca nous oblige \u00e0 tester que self.gauche et self.droite ne sont pas None, car None n'a pas de m\u00e9thode taille()\n        Comparez ceci avec l'impl\u00e9mentation ci-dessus. \n        \"\"\"\n        if self.is_feuille():\n            return 0\n        tg, td = 0, 0\n        if self.gauche:\n            td = self.gauche.taille()\n        if self.droite:\n            tg = self.droite.taille()\n        return 1 + tg + td\n</code></pre> <p>Exercice</p> <p>Impl\u00e9mentez les m\u00eames fonctions pour les versions mutables propos\u00e9es.</p>"},{"location":"terminale/structures-de-donnees/arbrebinaire/#les-methodes-de-parcours-en-profondeur-dun-arbre","title":"Les m\u00e9thodes de parcours en profondeur d'un arbre","text":""},{"location":"terminale/structures-de-donnees/arbrebinaire/#prefixe","title":"pr\u00e9fixe","text":""},{"location":"terminale/structures-de-donnees/arbrebinaire/#infixe","title":"infixe","text":""},{"location":"terminale/structures-de-donnees/arbrebinaire/#postfixe","title":"postfixe","text":""},{"location":"terminale/structures-de-donnees/arbrebinaire/#parcours-en-largeur-dun-arbre","title":"Parcours en largeur d'un arbre.","text":"<p>Parcourir un arbre en largeur revient \u00e0 le parcourir \u00e9tage par \u00e9tage, de gauche \u00e0 droite.</p> <p>Nous allons, pour ce faire, nous appuyer sur la structure de file.</p> <ul> <li>On initialise une file avec la racine.</li> <li>Tant que la file n'est pas vide:<ul> <li>On d\u00e9file un noeud</li> <li>On l'affiche (ou autre action)</li> <li>On enfile ses enfants.</li> </ul> </li> </ul> <p>Impl\u00e9mentation</p> <ul> <li>Ecrire une fonction de parcours en largeur qui affiche un arbre.</li> <li>Modifier sensiblement la fonction pour qu'elle retourne une liste de ses \u00e9l\u00e9ments.</li> <li>Remplacez le m\u00e9canisme de file par un m\u00e9canisme de pile. Que se passe-t-il?</li> </ul>"},{"location":"terminale/structures-de-donnees/arbrebinaire/#arbre-binaire-de-recherche","title":"Arbre binaire de recherche","text":"<p>Arbre binaire de recherche (ABR)</p> <p>Un arbre binaire de recherche (ABR) est un arbre binaire vide ou poss\u00e8dant ces propri\u00e9t\u00e9s:</p> <ul> <li>le max des cl\u00e9s de son sag est inf\u00e9rieur \u00e0 sa cl\u00e9</li> <li>le min des cl\u00e9s de son sad est sup\u00e9rieur \u00e0 sa cl\u00e9</li> <li>son sag et son sad sont des abr</li> </ul> <p>D\u00e9finition \u00e9quivalente: Pour chaque noeud d'un ABR:</p> <ul> <li>Toutes les cl\u00e9s de son sag sont inf\u00e9rieures ou \u00e9gales \u00e0 sa cl\u00e9</li> <li>Toutes les cl\u00e9s de son sad sont sup\u00e9rieures ou \u00e9gales \u00e0 sa cl\u00e9</li> </ul> <p>L'objectif est ici de disposer d'une structure qui nous permette de rechercher de l'information tr\u00e8s rapidement.</p> <p>On consid\u00e8re dans le cours que les cl\u00e9s sont uniques, ce qui est habituellement le cas, mais on pourrait aussi prendre en compte des cl\u00e9s dupliqu\u00e9es, auquel cas, on travaillerait sur des in\u00e9galit\u00e9s au sens large.</p> <pre><code>graph TD;\n    A[8] --&gt; B[4]\n    A --&gt; C[12]\n    B --&gt; D[2]\n    B --&gt; E[6]\n    C --&gt; F[10]\n    C --&gt; G[14]\n    D --&gt; H[1]\n    D --&gt; I[3]\n    E --&gt; J[5]\n    E --&gt; K[7]\n    F --&gt; L[9]\n    F --&gt; M[11]\n    G --&gt; N[13]\n    G --&gt; O[15]</code></pre> <p>Exercices</p> <ul> <li> <p>Dessiner 3 ABR o\u00f9, partant d'un arbre vide, on ins\u00e8re successivement les valeurs:</p> <ul> <li>3, 7, 1, 9, 4, 8, 2, 5, 6</li> <li>6, 2, 9, 1, 5, 3, 8, 4, 7</li> <li>9, 5, 3, 7, 2, 6, 1, 8, 4</li> </ul> </li> <li> <p>Ecrire une fonction <code>est_abr(a: arbrebin) -&gt; bool</code></p> </li> <li>Ecrire une fonction <code>insere_abr(e: int, a: arbrebin) -&gt; arbrebin</code></li> <li>Ecrire une fonction <code>recherche_abr(e: int, a: arbrebin) -&gt; bool</code></li> <li> <p>Discussion: Quelle est la complexit\u00e9 de <code>recherche_abr</code>? </p> <ul> <li>Pour un arbre filiforme</li> <li>Pour un arbre parfait</li> </ul> </li> <li> <p>Impl\u00e9mentez ces fonctions pour la version mutable (important)</p> </li> </ul> <p>Arbre sym\u00e9trique</p> <pre><code>graph TD\nA1[\"10\"] --- B1[\"5\"]\nA1 --- C1[\"15\"]\nB1 --- D1[\"3\"]\nB1 --- E1[\"7\"]\nC1 --- F1[\"12\"]\nC1 --- G1[\"18\"]\n\n%% Arbre miroir\nA2[\"10\"] --- B2[\"15\"]\nA2 --- C2[\"5\"]\nB2 --- D2[\"18\"]\nB2 --- E2[\"12\"]\nC2 --- F2[\"7\"]\nC2 --- G2[\"3\"]</code></pre> <p>Les deux arbres ci-dessus sont des miroirs l'un de l'autre.</p> <p>Ecrire une fonction <code>sont_miroirs[T](a1: arbrebin[T], a2: arbrebin[T]) -&gt; bool</code>.</p> <p>L'arbre ci-dessous est sym\u00e9trique. <pre><code>graph TD\nA[\"10\"] --- B[\"5\"]\nA --- C[\"5\"]\nB --- D[\"3\"]\nB --- E[\"7\"]\nC --- F[\"7\"]\nC --- G[\"3\"]\nD --- H[\"1\"]\nD --- I[\"2\"]\nG --- J[\"2\"]\nG --- K[\"1\"]\nE --- L[\"4\"]\nE --- M[\"6\"]\nF --- N[\"6\"]\nF --- O[\"4\"]</code></pre></p> <p>Ecrire une fonction <code>est_symetrique[T](a: arbrebin[T]) -&gt; bool</code>.</p> <p>Application \u00e0 la compression de donn\u00e9es - Codage de Huffman</p> <p></p> <p>Liens \u00e0 consulter:</p> <ul> <li>https://www.youtube.com/watch?v=iiGZ947Tcck</li> <li>https://cmps-people.ok.ubc.ca/ylucet/DS/Huffman.html</li> <li>https://www.csfieldguide.org.nz/en/interactives/huffman-tree/</li> </ul> <p>Cr\u00e9ez un package \"projets\" \u00e0 la racine de votre repo. N'oubliez pas de mettre <code>__init__.py</code> dans le dossier.</p> <pre><code>from structures.hierarchiques import arbrebin_mutable as ab\nfrom structures.hierarchiques import dessin\n\ndef get_dicofreq(texte: str) -&gt; dict[str, int]:\n    \"\"\"Renvoie un dictionnaire de fr\u00e9quence des lettres du texte en entr\u00e9e\"\"\"\n    pass\n\ndef get_arbre_huffman(dicofreq: dict[str, int]) -&gt; ab.ArbreBin:\n    \"\"\"Renvoie un arbre de Huffman d'apr\u00e8s le dictionnaire de fr\u00e9quences des lettres\"\"\"\n    # Etape 1: Construire EN COMPREHENSION une liste de feuilles d'apr\u00e8s le dictionnaire de fr\u00e9quences\n\n    # Etape 2: Construire l'arbre de Huffman en agr\u00e9geant progresivement les arbres de la liste\n\n    pass\n\ndef get_codes(arbre: ab.ArbreBin) -&gt; dict[str, str]:\n    \"\"\"\n    Fonction r\u00e9cursive.\n    Renvoie un dictionnaire contenant la codification binaire de chaque caract\u00e8re\n    \"\"\"\n    pass\n\ndef compresser(texte, codes: dict[str, str]) -&gt; str:\n    \"\"\"Compresse un texte en utilisant le dictionnaire d'encodage\"\"\"\n    pass\n\ndef decompresser(texte, codes: dict[str, str]) -&gt; str:\n    \"\"\"D\u00e9compresse un texte en utilisant le dictionnaire d'encodage\"\"\"\n    pass\n</code></pre> <p>Encadrement de la hauteur d'un arbre binaire</p> <p>\\(hauteur(\\empty)=-1\\)</p> <p>Comment encadrer</p> <p>Avec \\(n\\) noeuds, l'arbre le plus haut qu'on puisse construire est filiforme, et l'arbre le moins haut est un arbre o\u00f9 tous les niveaux sont remplis sauf ev\u00e9ntuellement le dernier. </p> <p>Hauteur d'un arbre filiforme</p> <p>Un arbre filiforme de taille \\(n\\) est de hauteur \\(n-1\\)</p> <p>Hauteur d'un arbre parfait \u00e0 \\(n\\) noeuds*</p> <p><pre><code>graph TD\nsubgraph Niveau0 [\"2^0 n\u0153ud\"]\n    A[\"1\"]\nend\nsubgraph Niveau1 [\"2^1 n\u0153uds\"]\n    A --- B[\"2\"]\n    A --- C[\"3\"]\nend\nsubgraph Niveau2 [\"2^2 n\u0153uds\"]\n    B --- D[\"4\"]\n    B --- E[\"5\"]\n    C --- F[\"6\"]\n    C --- G[\"7\"]\nend\nsubgraph Niveau3 [\"2^3 n\u0153uds\"]\n    D --- H[\"8\"]\n    D --- I[\"9\"]\n    E --- J[\"10\"]\n    E --- K[\"11\"]\n    F --- L[\"12\"]\n    F --- M[\"13\"]\n    G --- N[\"14\"]\n    G --- O[\"15\"]\nend</code></pre> Cet arbre de hauteur 3 a \\(2^0 + 2^1 + 2^2 + 2^3 = 15\\) n\u0153uds (\\(2^{4}-1\\)).</p> <p>Un arbre parfait de hauteur \\(h\\) a \\(\\displaystyle \\sum_{k=0}^h 2^k\\) noeuds.</p> <p>On reconna\u00eet la somme des termes d'une suite g\u00e9om\u00e9trique de raison 2.</p> <p>Un arbre parfait de hauteur \\(h\\) a donc \\(N=2^{h+1}-1\\) n\u0153uds.</p> <p>\\(N = 2^{h+1} - 1\\)</p> <p>\\(2^{h+1} = N + 1\\)</p> <p>En passant au logarithme de base 2 de chaque c\u00f4t\u00e9, la hauteur d'un arbre parfait ayant \\(n\\) noeuds est donn\u00e9e par la formule \\(h = \\log_2(n+1)-1\\).</p> <p>Encadrement</p> <p>En tenant compte du fait que l'arbre n'est pas n\u00e9cessairement rempli au dernier niveau, sa hauteur minimum est celle de l'arbre parfait associ\u00e9:</p> <p>\\(\\lceil \\log_2(n+1) - 1 \\rceil\\), donc \\(\\lceil \\log_2(n+1) \\rceil - 1\\) </p> <p>On en d\u00e9duit l'encadrement de la hauteur \\(h\\) de tout arbre binaire de taille \\(n\\):</p> <p>\\(\\lceil \\log_2(n+1) \\rceil - 1 \\leq h \\leq n - 1.\\)</p> <p>Soit \\( n \\ge 1 \\). Nous allons d\u00e9montrer que : \\(\\lfloor \\log_2(n) \\rfloor = \\lceil \\log_2(n+1) \\rceil - 1\\)</p> <p>Posons \\(k = \\lfloor \\log_2(n) \\rfloor\\)</p> <p>Par d\u00e9finition de la fonction partie enti\u00e8re inf\u00e9rieure, cela signifie que : </p> <p>\\(k \\le \\log_2(n) &lt; k+1\\)</p> <p>(Le but ici, c'est de faire appara\u00eetre du \\(n+1\\) au milieu, de passer l'in\u00e9galit\u00e9 de gauche en strict et celle de droite en large. Et comme ce qu'on veut d\u00e9montrer est cens\u00e9 \u00eatre vrai, \u00e7a devrait bien se goupiller)</p> <p>En appliquant la fonction \\(x \\mapsto 2^x\\), on obtient : \\(2^k \\le n &lt; 2^{k+1}\\)</p> <p>En ajoutant 1 \u00e0 chaque terme, nous avons : \\(2^k + 1 \\le  \\textcolor{red}{n + 1 \\le} 2^{k+1}\\)</p> <p>En prenant le logarithme en base 2 de ces in\u00e9galit\u00e9s, on trouve : </p> <p>\\(\\log_2(2^k + 1) \\le \\log_2(n+1) \\le \\log_2(2^{k+1}) = k+1\\)</p> <p>Comme \\(\\log_2(2^k + 1) &gt; \\log_2(2^k) = k\\), on obtient \\(k \\textcolor{red}{&lt;} \\log_2(n+1) \\le k+1\\)</p> <p>i.e., par d\u00e9finition de la fonction partie enti\u00e8re sup\u00e9rieure, \\(\\lceil \\log_2(n+1) \\rceil = k+1\\)</p> <p>En isolant \\(k\\), nous avons  \\(k = \\lceil \\log_2(n+1) \\rceil - 1\\)</p> <p>Comme nous avons d\u00e9fini $ k = \\lfloor \\log_2(n) \\rfloor $, nous concluons que :</p> \\[\\lfloor \\log_2(n) \\rfloor = \\lceil \\log_2(n+1) \\rceil - 1\\] <p>l'encadrement de la hauteur \\(h\\) de tout arbre binaire de taille \\(n \\geq 1\\) est donc:</p> \\[\\Huge \\lfloor \\log_2(n) \\rfloor \\leq h \\leq n - 1\\] <p>Avanc\u00e9 - Rotations</p> <p></p> <ul> <li>Montrer que la rotation pr\u00e9serve les propri\u00e9t\u00e9s d'ABR</li> <li>Ecrire une fonction <code>rotation_droite</code></li> <li>Ecrire une fonction <code>rotation_gauche</code></li> <li>En consid\u00e9rant les hauteurs des sad et sag avant et apr\u00e8s rotation, discuter \u00e0 quoi pourraient servir les rotations.</li> </ul> <p>Recherche - Python avanc\u00e9</p> <p>Sans l'ex\u00e9cuter, \u00e9tudier ce que fait la fonction suivante:</p> <pre><code>type vide = tuple[()]\ntype arbrebin[T] = vide|tuple[T, arbrebin[T], arbrebin[T]] \nARBRE_VIDE = ()\n\ndef mystere[T](a: arbrebin[T]) -&gt; list[T]:\n    def aux(f: list[arbrebin[T]]) -&gt; list[T]:\n        match f:\n            case []:     # cas o\u00f9 f est la liste vide\n                return []\n            case (), *reste:   # cas ou le premier element de f est l'arbre vide (), et on affecte le reste de la liste \u00e0 la variable reste.\n                return aux(reste)\n            case (cle, (), ()), *reste: # cas o\u00f9 le premier \u00e9l\u00e9ment est une feuille\n                return [cle] + aux(reste)\n            case (cle, sag, sad), *reste: # cas o\u00f9 le premier \u00e9l\u00e9ment est un noeud quelconque.\n                return [cle] + aux(reste + [sag] + [sad])\n            case _:  # sp\u00e9cial python, car python n'\u00e9tant pas fortement typ\u00e9, la fonction accepte n'importe quoi en param\u00e8tre.\n                raise ValueError(\"Ce cas ne peut pas arriver, le type de a doit \u00eatre arbrebin[T], vous avez mis n'importe quoi dans la fonction\")\n    return aux([a])\n</code></pre> <p>MP2I</p> <p>Impl\u00e9mentez doctement toutes les fonctions en OCaml. (seulement la version immuable. Il est aussi possible d'impl\u00e9menter la version mutable en OCaml, mais chaque chose en son temps)</p> <p>On utilisera cette d\u00e9finition d'un arbre binaire:</p> <pre><code>type 'a arbrebin = Vide | Noeud of 'a * 'a arbrebin * 'a arbrebin\n</code></pre> <p><code>'a</code> est l'\u00e9quivalent du type g\u00e9n\u00e9rique T qu'on a utilis\u00e9 en python. <code>'a arbrebin</code> veut dire arbre binaire portant des donn\u00e9es de type <code>'a</code></p>"},{"location":"terminale/structures-de-donnees/listes/","title":"Listes - Paradigme fonctionnel","text":"<p>Attention</p> <p>Ici, nous ne parlons pas du tout des listes python. Nous n'en utiliserons d'ailleurs pas.</p>"},{"location":"terminale/structures-de-donnees/listes/#definition","title":"D\u00e9finition","text":"<p>Les listes sont une structure de donn\u00e9es lin\u00e9aire qui permet de stocker une s\u00e9quence d'\u00e9l\u00e9ments. Il existe une multitude de mani\u00e8re de les impl\u00e9menter. Nous en verrons 2. </p> <p>Les listes sont un outil formidable pour faire ses premiers pas en r\u00e9cursivit\u00e9. C'est aussi l'occasion de d\u00e9couvrir le paradigme fonctionnel, et aussi d'aller juste un peu plus loin dans le paradigme orient\u00e9 objet.</p> <p>Ici, nous allons cr\u00e9er des listes immuables, ce qui signifie qu'elles ne peuvent pas \u00eatre modifi\u00e9es une fois cr\u00e9\u00e9es. Toute op\u00e9ration qui \"modifie\" une liste renvoie une nouvelle liste, tout en pr\u00e9servant l'ancienne.</p> <p>D\u00e9finition r\u00e9cursive</p> <p>Nous travaillerons avec des listes o\u00f9 chaque \u00e9l\u00e9ment est un entier. </p> <p>Chaque liste peut \u00eatre :</p> <ol> <li>vide</li> <li>Contenir un \u00e9l\u00e9ment appel\u00e9 la t\u00eate, suivi de la queue, qui est une autre liste.</li> </ol> <p>Nous d\u00e9finissons une liste \u00e0 l'aide de sa propre d\u00e9finition. Selon cette d\u00e9finition, nous travaillons sur une structure d\u00e9finie r\u00e9cursivement.</p>"},{"location":"terminale/structures-de-donnees/listes/#implementation-en-python","title":"Impl\u00e9mentation en python","text":"<p>Nous utiliserons des tuples pour contenir une liste car les tuples sont immuables, ils collent bien au cadre de la programmation fonctionnelle.</p> <p>Nous mat\u00e9rialiserons la liste vide par un tuple vide.</p> <p>Une liste non vide sera un tuple contienant 2 \u00e9l\u00e9ments, la t\u00eate, ainsi que la queue.</p> <p>Le tuple suivant repr\u00e9sente une liste o\u00f9 la t\u00eate est <code>2</code>, et la queue est une liste dont la t\u00eate est <code>3</code>, suivie d'une liste ou la tete est 4, suivie elle-m\u00eame de la liste vide.</p> <pre><code>(2, (3, (4, ())))\n</code></pre>"},{"location":"terminale/structures-de-donnees/listes/#traduction-de-notre-definition-en-python","title":"Traduction de notre d\u00e9finition en python:","text":"<p><pre><code>type vide = tuple[()]\nLISTE_VIDE: vide = ()\n\ntype liste = vide | tuple[int, liste]\n</code></pre> Nous cr\u00e9ons ici deux types :</p> <ul> <li><code>vide</code> repr\u00e9sente le vide mod\u00e9lis\u00e9 par un tuple vide.</li> <li><code>liste</code> est une structure r\u00e9cursive qui peut \u00eatre soit vide, soit un 2-uplet: t\u00eate (int) et queue(liste).</li> </ul>"},{"location":"terminale/structures-de-donnees/listes/#creation-et-acces-aux-elements","title":"Cr\u00e9ation et Acc\u00e8s aux \u00c9l\u00e9ments","text":""},{"location":"terminale/structures-de-donnees/listes/#creation-dune-liste","title":"Cr\u00e9ation d'une Liste","text":"<p>Une fonction typique pour cr\u00e9er une nouvelle liste \u00e0 partir d'un entier et d'une autre liste : <pre><code>def creer(t: int, q: liste) -&gt; liste:\n    return (t, q)\n</code></pre> Elle prend deux arguments :</p> <ul> <li><code>t</code> : la t\u00eate (l'\u00e9l\u00e9ment \u00e0 ajouter).</li> <li><code>q</code> : la queue (la liste suivante).</li> </ul>"},{"location":"terminale/structures-de-donnees/listes/#acces-aux-elements","title":"Acc\u00e8s aux \u00c9l\u00e9ments","text":"<p>Les deux op\u00e9rations d'acc\u00e8s principales sont : - T\u00eate : obtenir le premier \u00e9l\u00e9ment de la liste. - Queue : obtenir la sous-liste \u00e0 partir du deuxi\u00e8me \u00e9l\u00e9ment.</p> <pre><code>def tete(lst: liste) -&gt; int:\n    assert len(lst) == 2, \"Liste vide\"\n    return lst[0]\n\ndef queue(lst: liste) -&gt; liste:\n    assert len(lst) == 2, \"Liste vide\"\n    return lst[1]\n</code></pre> <p>Nous reviendrons sur ces fonctions car il se peut qu'on les modifie juste un peu en fin de parcours.</p> <p>Attention</p> <p>A partir de maintenant, nous n'utiliserons plus les tuples. Nous n'utiliserons que les fonctions que nous avons d\u00e9finies ainsi que la constante LISTE_VIDE.</p>"},{"location":"terminale/structures-de-donnees/listes/#fonctions-en-lecture","title":"Fonctions en lecture","text":""},{"location":"terminale/structures-de-donnees/listes/#tester-si-une-liste-est-vide","title":"Tester si une Liste est Vide","text":"<pre><code>def est_vide(lst: liste) -&gt; bool:\n    return lst == LISTE_VIDE\n</code></pre>"},{"location":"terminale/structures-de-donnees/listes/#calculer-la-taille-dune-liste","title":"Calculer la Taille d'une Liste","text":"<pre><code>def taille(lst: liste) -&gt; int:\n    if est_vide(lst):\n        return 0\n    return 1 + taille(queue(lst))\n</code></pre>"},{"location":"terminale/structures-de-donnees/listes/#calculer-la-somme-des-elements","title":"Calculer la Somme des \u00c9l\u00e9ments","text":"<pre><code>def somme(lst: liste) -&gt; int:\n    if est_vide(lst):\n        return 0\n    return tete(lst) + somme(queue(lst))\n</code></pre> <p>A vous</p> <p>Ecrivez toutes les autres fonctions demand\u00e9es. On r\u00e9alisera une disjonction de cas au papier avant de coder. </p>"},{"location":"terminale/structures-de-donnees/listes/#fonctions-en-creation","title":"Fonctions en cr\u00e9ation","text":"<p>Attention</p> <p>Bien comprendre que les listes sont immuables. On ne peut pas les modifier. Par \"Ins\u00e9rer\", on entendra \"Renvoyer une liste dans laquelle on a ins\u00e9r\u00e9\".</p>"},{"location":"terminale/structures-de-donnees/listes/#ajouter-un-element-a-la-fin","title":"Ajouter un \u00c9l\u00e9ment \u00e0 la fin","text":"<pre><code>def ajouter_fin(e: int, lst: liste) -&gt; liste:\n    if est_vide(lst):\n        return LISTE_VIDE\n    else:\n        return creer(tete(lst), ajouter_fin(queue(lst)))\n</code></pre> <p>Si on reprend la m\u00e9taphore des lutins.</p> <p></p> <p>Je suis un lutin-ajouteur. </p> <ul> <li>Si on me donne une liste vide et qu'on me dit d'y ajouter l'\u00e9l\u00e9ment e, je renvoie une liste ne comportant que l'\u00e9l\u00e9ment e</li> <li>Sinon, c'est qu'on me donne une liste avec une tete et une queue. Alors je cr\u00e9\u00e9 une liste avec la m\u00eame t\u00eate, et pour la queue, je la donne \u00e0 un autre lutin ajouteur pour qu'il me la renvoie augment\u00e9e de e</li> </ul> <p>A vous</p> <p>Ecrivez toutes les autres fonctions demand\u00e9es. On r\u00e9alisera une disjonction de cas au papier avant de coder. </p>"},{"location":"terminale/structures-de-donnees/listeschainees/","title":"Listes cha\u00een\u00e9es - Approche Orient\u00e9e Objet","text":"<p>Requis</p> <p>Vous devez savoir refaire les exercices sur la cr\u00e9ation et l'utilisation de classes en POO sans regarder le corrig\u00e9.</p>"},{"location":"terminale/structures-de-donnees/listeschainees/#introduction","title":"Introduction","text":"<p>Une liste cha\u00een\u00e9e est aussi une structure permettant d'impl\u00e9menter une liste.</p> <p>La cha\u00eene que repr\u00e9sente la liste est compos\u00e9e de plusieurs maillons.</p> <p>Chaque Maillon est compos\u00e9 d'un \u00e9l\u00e9ment et d'une r\u00e9f\u00e9rence vers le maillon suivant.</p> <p>Il existe plusieurs fa\u00e7ons d'organiser ces maillons:</p> <p></p> <p>Il reste un bon exercice d'essayer de temps en temps d'impl\u00e9menter une autre version de liste cha\u00een\u00e9e.</p>"},{"location":"terminale/structures-de-donnees/listeschainees/#definition-de-la-classe-maillon","title":"D\u00e9finition de la classe <code>Maillon</code>","text":"<p>Un <code>Maillon</code> de la cha\u00eene poss\u00e8de une donn\u00e9e ainsi qu'une r\u00e9f\u00e9rence \u00e0 son maillon suivant. </p> <p>Un maillon a donc deux attributs :</p> <ol> <li><code>data</code> : La donn\u00e9e contenue dans le maillon (ici un entier).</li> <li><code>next</code> : Une r\u00e9f\u00e9rence vers le maillon suivant.</li> </ol> <pre><code>class Maillon:\n    def __init__(self, data: int, next: 'Maillon'):\n        self.data = data\n        self.next = next\n</code></pre>"},{"location":"terminale/structures-de-donnees/listeschainees/#probleme-initial","title":"Probl\u00e8me initial","text":"<p>Cette d\u00e9finition pr\u00e9sente un probl\u00e8me. Lorsqu\u2019on cr\u00e9e un maillon, on doit sp\u00e9cifier le maillon suivant (<code>next</code>), mais ce maillon suivant n\u2019existe pas encore \u00e0 ce stade de la cr\u00e9ation. Nous devons r\u00e9soudre ce probl\u00e8me pour pouvoir cr\u00e9er une cha\u00eene. </p> <pre><code>premier_maillon = Maillon(3, ...euh, j'ai pas de maillon...)\n</code></pre>"},{"location":"terminale/structures-de-donnees/listeschainees/#sentinelle","title":"Sentinelle","text":"<p>D\u00e9finition</p> <p>En informatique, une sentinelle est une valeur sp\u00e9ciale qui indique une ou plusieurs bornes d'une structure de donn\u00e9es. </p> <p>Appliqu\u00e9 \u00e0 notre cas, en consid\u00e9rant que la sentinelle et dans notre cha\u00eene, et qu'il n'y a que des maillons dans la cha\u00eene:</p> <ul> <li>La sentinelle est dans la cha\u00eene, donc la Sentinelle EST UN Maillon.</li> <li>Mais tout maillon a un prochain maillon.    </li> <li>Vu que la sentinelle est un Maillon, elle doit donc avoir un prochain maillon. </li> </ul> <p>Il semble que nous soyons de retour \u00e0 notre probl\u00e8me initial, mais en r\u00e9alit\u00e9, pas du tout. Pour r\u00e9soudre ce casse t\u00eate, On va lui dire que son prochain maillon, c'est initialement elle-m\u00eame.</p>"},{"location":"terminale/structures-de-donnees/listeschainees/#classe-sentinelle","title":"Classe <code>Sentinelle</code>","text":"<pre><code>class Sentinelle(Maillon):    # Une Sentinelle EST UN Maillon\n    def __init__(self):\n        super().__init__(0, self)   # Son prochain Maillon est initialement elle-m\u00eame\n</code></pre> <p>Cette classe h\u00e9rite de la classe <code>Maillon</code>.  Gr\u00e2ce \u00e0 l\u2019appel de <code>super()</code>, nous invoquons le constructeur de <code>Maillon</code> tout en assignant la sentinelle comme le maillon suivant d'elle-m\u00eame. Sa donn\u00e9e est arbitrairement mise \u00e0 0.</p> <p>Voici comment \u00e9voluera progressivement notre sentinelle (0) lorsqu'on ajoutera en t\u00eate les \u00e9l\u00e9ments 5, 3, puis 12:</p> <pre><code>---\ntitle: Maillon sentinelle\n---\ngraph LR\n0((0)) --&gt; 0</code></pre> <pre><code>---\ntitle: Ajout de la donn\u00e9e 5\n---\ngraph LR\n0((0)) --&gt; 5((5))\n5 --&gt; 0</code></pre> <pre><code>---\ntitle: Ajout de la donn\u00e9e 3\n---\ngraph LR\n0((0)) --&gt; 3((3))\n3 --&gt; 5((5))\n5 --&gt; 0</code></pre> <pre><code>---\ntitle: Ajout de la donn\u00e9e 12\n---\ngraph LR\n0((0)) --&gt; 12((12))\n12((12)) --&gt; 3((3))\n3 --&gt; 5((5))\n5 --&gt; 0</code></pre> <p>Sauf lorsque la liste est vide, le premier \u00e9l\u00e9ment de la liste est juste apr\u00e8s la sentinelle. Le dernier est juste avant.</p> <p>Note</p> <p>Il est important de r\u00e9aliser que l'attribut next est une r\u00e9f\u00e9rence \u00e0 un noeud. \"next, c'est la fl\u00e8che qui va vers\"</p>"},{"location":"terminale/structures-de-donnees/listeschainees/#definition-de-la-classe-liste","title":"D\u00e9finition de la classe <code>Liste</code>","text":"<p>Nous allons g\u00e9rer une liste \u00e0 partir de sa sentinelle. Nous assimilerons alors une liste \u00e0 sa sentinelle, en renommant tout simplement la classe sentinelle en Liste. On OUBLIE donc la classe sentinelle qui n'\u00e9tait l\u00e0 que pour la d\u00e9marche de r\u00e9flexion. La sentinelle d'une liste, c'est elle-m\u00eame en tant que Maillon.</p> <p>La classe <code>Liste</code> h\u00e9rite de <code>Maillon</code> et repr\u00e9sente notre liste cha\u00een\u00e9e compl\u00e8te.</p> <p>Lorsqu'elle est cr\u00e9\u00e9e (donc vide), c'est un maillon pointant sur lui-m\u00eame et qui repr\u00e9sentera toujours sa propre sentinelle.</p>"},{"location":"terminale/structures-de-donnees/listeschainees/#attributs-de-liste","title":"Attributs de <code>Liste</code>","text":"<ul> <li><code>__taille</code> : Stocke la taille de la liste.</li> <li><code>ajouter_tete</code> : Ajoute un nouvel \u00e9l\u00e9ment en t\u00eate de la liste.</li> </ul> <pre><code>class Liste(Maillon):\n    def __init__(self):\n        super().__init__(0, self)\n        self.__taille = 0\n</code></pre> <p>Dans une m\u00e9thode, self.next repr\u00e9sente toujours le premier Maillon, \u00e0 moins que la liste ne soit vide, auquel cas elle pointe sur elle m\u00eame.</p> <p>Ici, on choisit de plus de maintenir la taille du maillon en permanence. On marque cet attribut comme priv\u00e9 gr\u00e2ce au double underscore, afin de signifier qu'il ne doit pas \u00eatre modifi\u00e9 par les programmeurs qui utilisent cette classe.</p> <p>Vu que la r\u00e9cup\u00e9ration de la taille est une op\u00e9rationn courante, sa r\u00e9cup\u00e9ration sera donc en \\(\\mathcal{O}(1)\\), au lieu de \\(\\mathcal{O}(n)\\) s'il faut parcourir tous les maillons d'une liste de taille \\(n\\). Ceci se fait au prix de l'augmentation de la taille de stockage de la liste, mais on ne peut pas tout avoir.</p> <p>Tout ce qui suit est du l\u00e9go avec les maillons, il faut juste penser \u00e0 bien faire les op\u00e9rations dans l'ordre \u00e0 chaque fois. On proc\u00e8dera de mani\u00e8re imp\u00e9rative, avec des while.</p>"},{"location":"terminale/structures-de-donnees/listeschainees/#ajouter-un-element","title":"Ajouter un \u00e9l\u00e9ment","text":"<p>On veut ajouter un nouveau maillon portant la donn\u00e9e 12 en t\u00eate de liste:</p> <pre><code>---\ntitle: Liste initiale\n---\ngraph LR\n0((0)) --&gt; 3((3))\n3 --&gt; 5((5))\n5 --&gt; 0</code></pre> <ol> <li>On cr\u00e9\u00e9 un Maillon portant la donn\u00e9e 12 et pointant vers le Maillon suivant la sentinelle (donc suivant la liste elle meme, puisqu'elle est sa sentinelle) <pre><code>---\ntitle: \n---\ngraph LR\n0((0)) ====&gt; 3((3))\n12((12)) --&gt; 3\n3 --&gt; 5((5))\n5 --&gt; 0</code></pre></li> <li>La fl\u00e8che 0-&gt;3 repr\u00e9sente la r\u00e9f\u00e9rence self.next il faut la remplacer par une r\u00e9f\u00e9rence au maillon 12 <pre><code>---\ntitle: \n---\ngraph LR\n0((0)) ==&gt; 12((12))\n12 --&gt; 3((3))\n3 --&gt; 5((5))\n5 --&gt; 0</code></pre></li> <li>Vu qu'on a choisi de maintenir la taille, il ne faut pas oublier de lui ajouter 1</li> </ol> <p>La m\u00e9thode <code>ajouter_tete</code> \u00e9crite en cons\u00e9quence ins\u00e8re un nouveau maillon juste apr\u00e8s la sentinelle.</p> <pre><code>def ajouter_tete(self, e: int):\n    m = Maillon(e, self.next)     # 1\n    self.next = m                 # 2\n    self.__taille += 1            # 3\n</code></pre> <p>L'approche propos\u00e9e permet de simplifier le code des m\u00e9thodes. En effet, \u00e7a marche ind\u00e9pendamment du fait que la liste soit vide ou pas.</p> <p><pre><code>---\ntitle: Liste initiale\n---\ngraph RL\n0((0)) --&gt; 0</code></pre> 1. On cr\u00e9\u00e9 un Maillon portant la donn\u00e9e 12 et pointant vers le Maillon suivant la sentinelle  <pre><code>---\ntitle: \n---\ngraph RL\n0((0)) ==&gt; 0\n12((12)) --&gt; 0</code></pre></p> <ol> <li>La fl\u00e8che en gras repr\u00e9sente la r\u00e9f\u00e9rence self.next il faut la remplacer par une r\u00e9f\u00e9rence au maillon 12</li> </ol> <pre><code>---\ntitle: \n---\ngraph LR\n0((0)) ==&gt; 12((12))\n12 --&gt; 0</code></pre>"},{"location":"terminale/structures-de-donnees/listeschainees/#methodes-de-depart","title":"M\u00e9thodes de d\u00e9part","text":"<p>Afin de vous lancer sur le parcours de cette structure, je vous donne votre deuxi\u00e8me m\u00e9thode, la m\u00e9thode <code>est_vide</code>.</p> <pre><code>def est_vide(self) -&gt; bool:\n    \"\"\"\n    Renvoie True si la liste est vide, False sinon.\n    \"\"\"\n    return self.next is self\n</code></pre> <p>ainsi que la m\u00e9thode longueur, qui renvoie la taille calcul\u00e9e de la liste.</p> <p>A l'origine, le maillon courant est le premier maillon de la liste, ou elle m\u00eame si la liste est vide. Tant que courant n'est pas self (sinon \u00e7a veut dire qu'on est revenu \u00e0 la sentinelle), on incremente l'accumulateur et on passe au maillon suivant.</p> <pre><code>def longueur(self) -&gt; int:\n    \"\"\"\n    Renvoie la taille calcul\u00e9e de la liste.\n    \"\"\"\n    acc = 0\n    courant = self.next\n    while courant is not self:\n        acc += 1\n        courant = courant.next\n    return acc\n</code></pre> <p>Tip</p> <p>l'op\u00e9rateur is sert \u00e0 comparer les objets, non pas en termes de valeur, mais en termes d'adresse m\u00e9moire.</p> <p>Question</p> <p>A vous maintenant de recr\u00e9er les fonctions que vous avez vues en programmation fonctionnelles en tant que m\u00e9thodes de la classe liste en commen\u00e7ant par la m\u00e9thode ajouter_fin. Vous n'utiliserez pas la r\u00e9cursivit\u00e9.</p> <p>Tout comme nous l'avons fait avec OCaml en programmation fonctionnelle, compl\u00e9tez aussi le programme en C++.</p>"},{"location":"terminale/structures-de-donnees/graphes/dijkstra/","title":"Algorithme de Dijkstra","text":"<p>Dijkstra est un algorithme de plus court chemin dans un graphe pond\u00e9r\u00e9 (avec des poids non n\u00e9gatifs) qui permet, \u00e0 partir d\u2019un sommet source s, de trouver les distances minimales vers tous les autres sommets.</p> <p>Le principe est le suivant :</p> <ul> <li>L\u2019algorithme maintient un tableau (ou dictionnaire) <code>distance</code>, qui stocke pour chaque sommet \\(v\\) une valeur estim\u00e9e de la distance minimale \\(d(v)\\) depuis la source \\(s\\).</li> <li>\u00c0 chaque it\u00e9ration, Dijkstra choisit parmi les sommets non encore \"retir\u00e9s\" celui qui a la plus petite distance estim\u00e9e et le \"verrouille\"</li> <li>Pour ce sommet \\(u\\) ainsi choisi, on dit que sa distance est d\u00e9finitive, car on ne la modifiera plus ensuite.</li> <li>Puis on rel\u00e2che toutes les ar\u00eates sortant de \\(u\\), si on d\u00e9couvre un chemin plus court via \\(u\\).</li> </ul> <pre><code>distance_depart : dict[str, int]\npr\u00e9d\u00e9cesseur : dict[str, str]\n\npour chaque sommet v de V :\n    distance_depart[v] = \u221e\n    pr\u00e9d\u00e9cesseur[v] = NIL\ndistance_depart[s] = 0\n\nQ = ensemble de tous les sommets\n</code></pre> <p>Puis:</p> <pre><code>Tant que Q n'est pas vide:\n    Extraire de Q le sommet u tel que distance[u] est minimal\n\n    Pour chaque voisin v de u :\n        relacher l'ar\u00eate (u, v) si n\u00e9cessaire\n</code></pre> <p>Relacher l'arc (u, v) signifie que, si la distance de la source \u00e0 v en passant par u est plus petite que la distance d\u00e9j\u00e0 connue, on met \u00e0 jour cette distance dans le dictionnaire (on a trouv\u00e9 une plus petite distance source-&gt;v).</p> <p>Pourquoi le mot \"rel\u00e2cher\"? Ca vient de la terminologie de l\u2019optimisation. On dit qu\u2019on \"rel\u00e2che\" une contrainte ou un majorant quand on le r\u00e9duit si une meilleure valeur est trouv\u00e9e. On rel\u00e2che l'ancienne valeur pour adopter la nouvelle.</p> <pre><code>def dijkstra(depart: str, g: gr.graphe) -&gt; tuple[dict[str, float], dict[str, str]]:\n    \"\"\"\n    Version dite na\u00eeve d'impl\u00e9mentation de l'algorithme de dijkstra.\n    Normalement, f est une file de priorit\u00e9 pour des raisons de r\u00e9duction drastique de complexit\u00e9, mais cette structure n'est pas au programme.\n    Le principe de l'algorithme reste exactement le m\u00eame cependant.\n    \"\"\"\n    f = [depart]\n\n    # Initialisation des distances au sommet de d\u00e9part (infinies \u00e0 l'origine, sauf pour le sommet de d\u00e9part)\n    distance_depart = {s: float('inf') for s in gr.sommets(g)}\n    distance_depart[depart] = 0\n    # Initialisation du dictionnaire des sommets pr\u00e9c\u00e9dents.\n    # avoir \"A\":\"Z\" dedans signifie que \"Z\" est avant \"A\" dans le plus court chemin du depart \u00e0 \"A\"\n    # Ce dictionnaire permettra de reconstituer tous les plus courts chemins au sommet de d\u00e9part.\n    precedent: dict[str, str] = dict()\n\n    while len(f) &gt; 0:\n        # On d\u00e9file toujours le sommet dont la distance \u00e0 la source est la plus petite\n        u = min(f, key=lambda sommet: distance_depart[sommet])\n        f.remove(u)\n\n        # Pour chaque voisin v\n        for v in gr.get_voisins(u, g):\n            # si la nouvelle distance de v \u00e0 la source est plus courte que celle d\u00e9j\u00e0 calcul\u00e9e dans le dico\n            if distance_depart[v] &gt; distance_depart[u] + gr.poids(u, v, g):\n                # On met \u00e0 jour la distance dans le dico\n                distance_depart[v] = distance_depart[u] + gr.poids(u, v, g)\n                # Jusqu'ici, On vient de u pour le plus court chemin du depart \u00e0 v\n                precedent[v] = u\n                # Si v n'a pas encore fait partie de f, on l'enfile\n                if v not in f:\n                    f.append(v)\n    return distance_depart, precedent\n</code></pre> <p>Voici l\u2019id\u00e9e g\u00e9n\u00e9rale de la d\u00e9monstration de la correction de l\u2019algorithme de Dijkstra (dans un graphe \u00e0 poids d\u2019ar\u00eates non n\u00e9gatifs). On \u00e9nonce souvent cette preuve sous forme d\u2019un invariant qui est pr\u00e9serv\u00e9 \u00e0 chaque \u00e9tape, ou par induction sur la taille de l\u2019ensemble de sommets d\u00e9j\u00e0 \u201cfix\u00e9s\u201d par Dijkstra.</p>"},{"location":"terminale/structures-de-donnees/graphes/dijkstra/#enonce-de-linvariant","title":"\u00c9nonc\u00e9 de l\u2019invariant","text":"<p>Soit \\(S\\) l\u2019ensemble des sommets d\u00e9finitivement \u201cfix\u00e9s\u201d (ou \u00ab\u202fextraits\u202f\u00bb de la structure de priorit\u00e9, selon l\u2019impl\u00e9mentation). Invariant : Pour tout sommet \\(x \\in S\\), la valeur <code>distance[x]</code> co\u00efncide exactement avec la distance r\u00e9elle la plus courte de \\(s\\) \u00e0 \\(x\\).</p> <p>Nous allons montrer :</p> <ol> <li>L\u2019invariant est vrai avant toute it\u00e9ration (initialement, seul le sommet source \\(s\\) a <code>distance[s] = 0</code>, et c\u2019est bien la distance r\u00e9elle).  </li> <li>Il est pr\u00e9serv\u00e9 \u00e0 chaque \u00e9tape (si l\u2019invariant est vrai, alors apr\u00e8s avoir choisi le prochain sommet et fait les rel\u00e2chements, il reste vrai).  </li> <li>Quand l\u2019algorithme se termine, tous les sommets de \\(V\\) (ou en tout cas ceux qui sont atteignables depuis \\(s\\)) ont leur distance correcte.</li> </ol>"},{"location":"terminale/structures-de-donnees/graphes/dijkstra/#preuve-esquisse","title":"Preuve (esquisse)","text":"<ol> <li>Initialisation </li> <li>Au d\u00e9but, <code>distance[s] = 0</code> et <code>distance[v] = +\u221e</code> pour \\(v \\neq s\\). Le seul sommet \u00e9ventuellement \u201cfix\u00e9\u201d est \\(s\\), ou bien aucun si on attend la premi\u00e8re \u00e9tape pour \u201cfixer\u201d un sommet.  </li> <li> <p>De toute fa\u00e7on, <code>distance[s] = 0</code> est la bonne distance de \\(s\\) \u00e0 lui-m\u00eame, et <code>distance[v] = +\u221e</code> est un majorant correct pour les autres.</p> </li> <li> <p>Choix du sommet \\(u\\) et v\u00e9rification de sa distance    Supposons que tous les sommets d\u00e9j\u00e0 dans \\(S\\) (verrouill\u00e9s) ont leur distance exacte. L\u2019algorithme choisit un sommet \\(u\\notin S\\) qui a la plus petite distance estim\u00e9e parmi ceux restants.  </p> </li> <li>Id\u00e9e-cl\u00e9 : si <code>distance[u]</code> n\u2019\u00e9tait pas la v\u00e9ritable distance de \\(s\\) \u00e0 \\(u\\), cela signifierait qu\u2019il existerait un chemin plus court \\(\\pi\\) de \\(s\\) vers \\(u\\), passant (forc\u00e9ment) par un sommet \\(w\\) qui n\u2019est pas encore \u00ab\u202ffix\u00e9\u202f\u00bb.  </li> <li>Or, si un tel chemin plus court existait, alors <code>distance[w]</code> (ou un autre sommet interm\u00e9diaire) serait n\u00e9cessairement plus petit que <code>distance[u]</code>, donc on aurait extrait ce sommet \\(w\\) avant \\(u\\) (puisque Dijkstra choisit toujours le plus petit).  </li> <li>Cette contradiction montre que <code>distance[u]</code> est en r\u00e9alit\u00e9 exacte.  </li> <li> <p>On ajoute alors \\(u\\) \u00e0 \\(S\\).</p> </li> <li> <p>Rel\u00e2chements des ar\u00eates sortant de \\(u\\)    On met \u00e0 jour la distance de ses voisins \\(v\\). Cela ne viole pas l\u2019invariant pour les sommets d\u00e9j\u00e0 dans \\(S\\), puisqu\u2019on ne touche pas \u00e0 leurs distances (ils restent fix\u00e9s).  </p> </li> <li> <p>Pour les sommets hors de \\(S\\), on abaisse \u00e9ventuellement la distance estim\u00e9e si on d\u00e9couvre un chemin plus court passant par \\(u\\). Mais comme \\(u\\) est maintenant correct, ces nouvelles valeurs restent de bonnes estimations (ou s\u2019am\u00e9liorent).</p> </li> <li> <p>Induction </p> </li> <li>Au d\u00e9marrage, l\u2019invariant est vrai pour le sommet source \\(s\\).  </li> <li>Si, \u00e0 l\u2019it\u00e9ration \\(k\\), l\u2019invariant est vrai pour les sommets dans \\(S\\), alors apr\u00e8s avoir choisi un nouveau sommet \\(u\\) et rel\u00e2ch\u00e9 ses ar\u00eates, \\(S\\cup\\{u\\}\\) conserve la propri\u00e9t\u00e9.  </li> <li>Lorsque l\u2019algorithme se termine (ou quand tous les sommets atteignables depuis \\(s\\) ont \u00e9t\u00e9 choisis), chaque sommet de \\(S\\) a sa distance \u00ab\u202ffig\u00e9e\u202f\u00bb et exacte.</li> </ol> <p>Conclusion : L\u2019ensemble final des distances (\\(\\text{distance}[v]\\)) renvoy\u00e9 par Dijkstra co\u00efncide donc avec les plus courtes distances de \\(s\\) \u00e0 chaque sommet \\(v\\).  </p>"},{"location":"terminale/structures-de-donnees/graphes/graphes/","title":"Graphes - G\u00e9n\u00e9ralit\u00e9s et Impl\u00e9mentation","text":""},{"location":"terminale/structures-de-donnees/graphes/graphes/#introduction","title":"Introduction","text":"<p>Les graphes sont des structures de donn\u00e9es essentielles en informatique, permettant de mod\u00e9liser des relations entre des \u00e9l\u00e9ments. Que ce soit pour repr\u00e9senter un r\u00e9seau routier, un r\u00e9seau \u00e9lectrique, Internet ou des relations sociales, les graphes offrent une mani\u00e8re puissante de visualiser et d'analyser ces connexions. Toutes les structures que nous avons vues peuvent \u00eatre vues comme des cas particuliers de graphes.</p>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#i-definition-des-termes","title":"I. D\u00e9finition des Termes","text":""},{"location":"terminale/structures-de-donnees/graphes/graphes/#a-sommets-aretes-et-arcs","title":"A. Sommets, Ar\u00eates et Arcs","text":"<ol> <li> <p>Sommets (ou n\u0153uds) : Ce sont les entit\u00e9s de base du graphe, repr\u00e9sent\u00e9es par des points. Dans le contexte du r\u00e9seau routier, un sommet pourrait \u00eatre une intersection.</p> </li> <li> <p>Ar\u00eates : Ce sont les connexions entre les sommets. Dans le contexte d'un r\u00e9seau routier, une ar\u00eate pourrait \u00eatre une route reliant deux intersections.</p> </li> <li> <p>Arcs : Dans le cas des graphes orient\u00e9s, les connexions entre les sommets sont appel\u00e9es arcs. Ils ont une direction, ce qui signifie qu'ils vont d'un sommet source \u00e0 un sommet destination.</p> </li> <li> <p>Poids : Parfois, les ar\u00eates portent une information appel\u00e9e poids. Dans un graphe repr\u00e9sentant des interconnexions entre des villes, il peut s'agir d'une distance. Dans un graphe de neurones, il peut s'agir de l'importance \u00e0 accorder \u00e0 une connexion entre deux neurones. Dans un graphe de routage, il peut s'agir de la vitesse de connexion entre 2 routeurs. On appelle graphe pond\u00e9r\u00e9 un graphe dont les ar\u00eates portent un poids.</p> </li> </ol>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#b-graphes-orientes-et-non-orientes","title":"B. Graphes Orient\u00e9s et Non Orient\u00e9s","text":"<ol> <li>Graphes Orient\u00e9s : Les graphes orient\u00e9s ont des arcs avec une direction sp\u00e9cifi\u00e9e. Ils sont utilis\u00e9s pour repr\u00e9senter des relations asym\u00e9triques, comme les connexions dans un r\u00e9seau social o\u00f9 on peut suivre quelqu'un sans qu'il nous suive.</li> </ol> <ol> <li>Graphes Non Orient\u00e9s : Dans ces graphes, les ar\u00eates n'ont pas de direction. Ils sont utilis\u00e9s pour repr\u00e9senter des relations sym\u00e9triques, comme des amiti\u00e9s.</li> </ol> <ol> <li>Graphes pond\u00e9r\u00e9s : Les graphes pond\u00e9r\u00e9s sont des graphes dont les ar\u00eates portent un poids.</li> </ol> <p>Voici un exemple de graphe non orient\u00e9 pond\u00e9r\u00e9 o\u00f9 le poids repr\u00e9sente la distance entre les villes.  On peut aussi avoir des graphes orient\u00e9s pond\u00e9r\u00e9s.</p> <p></p>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#ii-modelisation-de-situations-sous-forme-de-graphes","title":"II. Mod\u00e9lisation de Situations sous Forme de Graphes","text":"<p>Les graphes peuvent \u00eatre utilis\u00e9s pour repr\u00e9senter diverses situations, notamment :</p>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#a-reseau-routier","title":"A. R\u00e9seau Routier","text":"<ul> <li>Sommets : Intersections ou points d'entr\u00e9e/sortie.</li> <li>Ar\u00eates : Routes reliant les intersections.</li> <li>Graphes Orient\u00e9s : Si les routes sont \u00e0 sens unique.</li> </ul>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#b-reseau-electrique","title":"B. R\u00e9seau \u00c9lectrique","text":"<ul> <li>Sommets : Stations \u00e9lectriques, points de distribution.</li> <li>Ar\u00eates : C\u00e2bles ou lignes \u00e9lectriques reliant les stations.</li> <li>Graphes Orient\u00e9s : La direction indique le flux d'\u00e9lectricit\u00e9.</li> </ul>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#c-internet","title":"C. Internet","text":"<ul> <li>Sommets : Serveurs, sites web.</li> <li>Ar\u00eates : Liens hypertextes ou connexions entre serveurs.</li> <li>Graphes Non Orient\u00e9s : Les liens peuvent \u00eatre bidirectionnels.</li> </ul>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#d-reseaux-sociaux","title":"D. R\u00e9seaux Sociaux","text":"<ul> <li>Sommets : Utilisateurs.</li> <li>Ar\u00eates : Amiti\u00e9s ou relations entre utilisateurs.</li> <li>Graphes Non Orient\u00e9s : Les relations peuvent \u00eatre mutuelles.</li> <li>Graphes Orient\u00e9s : On peut follow quelqu'un sans \u00eatre followed.</li> </ul>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#e-reseaux-de-neurones-intelligence-artificielle","title":"E. R\u00e9seaux de neurones (Intelligence artificielle)","text":"<ul> <li>Sommets : Neurones</li> <li>Ar\u00eates : Connexions entre neurones.</li> <li>Graphes Non Orient\u00e9s : Les relations peuvent \u00eatre mutuelles.</li> </ul>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#iii-implementations-des-graphes","title":"III. Impl\u00e9mentations des Graphes","text":"<p>Pour travailler avec des graphes, diff\u00e9rentes repr\u00e9sentations peuvent \u00eatre utilis\u00e9es :</p>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#a-matrice-dadjacence","title":"A. Matrice d'Adjacence","text":"<p>Pr\u00e9ambule: MATRICES</p> <p>En math\u00e9matiques, une matrice est un tableau rectangulaire d'\u00e9l\u00e9ments, organis\u00e9 en lignes et colonnes. Chaque \u00e9l\u00e9ment de la matrice est identifi\u00e9 par ses indices de ligne et de colonne. Une matrice de dimensions \\(m \\times n\\) a \\(m\\) lignes et \\(n\\) colonnes.</p> <p>Voici comment une matrice peut \u00eatre repr\u00e9sent\u00e9e :</p> \\[ A = \\begin{pmatrix} a_{11} &amp; a_{12} &amp; \\ldots &amp; a_{1n} \\\\ a_{21} &amp; a_{22} &amp; \\ldots &amp; a_{2n} \\\\ \\vdots &amp; \\vdots &amp; \\ddots &amp; \\vdots \\\\ a_{m1} &amp; a_{m2} &amp; \\ldots &amp; a_{mn} \\\\ \\end{pmatrix} \\] <p>Dans cette repr\u00e9sentation, \\(a_{ij}\\) repr\u00e9sente l'\u00e9l\u00e9ment situ\u00e9 \u00e0 la \\(i\\)-\u00e8me ligne et \\(j\\)-\u00e8me colonne de la matrice. Par convention, la notation math\u00e9matique commence souvent \u00e0 1 et non \u00e0 0. Ce qui ne sera \u00e9videmment pas le cas dans le code.</p> <p>Les matrices sont utilis\u00e9es dans divers domaines des math\u00e9matiques, de l'informatique, de la physique, et d'autres disciplines pour repr\u00e9senter et manipuler des donn\u00e9es. Les matrices jouent un r\u00f4le crucial dans la r\u00e9solution de syst\u00e8mes d'\u00e9quations lin\u00e9aires, la transformation g\u00e9om\u00e9trique, la th\u00e9orie des graphes, et de nombreux autres domaines.</p> <p>Les cartes graphiques sont des composants principalement cr\u00e9\u00e9s pour le calcul matriciel.</p> <p>Matrice d'adjacence - Graphes non-orient\u00e9s</p> <p>Une matrice o\u00f9 <code>mat[i][j]</code> vaut \\(1\\) si et seulement si il y a une ar\u00eate entre les sommets <code>i</code> et <code>j</code>, \\(0\\) sinon. Notez que la matrice est forc\u00e9ment sym\u00e9trique.</p> <p>Matrice sym\u00e9trique</p> <p>Une matrice \\(M\\) est dite sym\u00e9trique ssi $ \\forall (i,j), M_{i,j}=M_{j,i}$</p> <p> <p></p> <p></p> \\[ \\begin{array}{c|ccccc}  &amp; A &amp; B &amp; C &amp; D &amp; E \\\\ \\hline A &amp; 0 &amp; 1 &amp; 1 &amp; 0 &amp; 1 \\\\ B &amp; 1 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\\\ C &amp; 1 &amp; 1 &amp; 0 &amp; 1 &amp; 0 \\\\ D &amp; 0 &amp; 1 &amp; 1 &amp; 0 &amp; 1 \\\\ E &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ \\end{array} \\] <p>Matrice d'adjacence - Graphes orient\u00e9s</p> <p>Une matrice \u00e0 deux dimensions o\u00f9 <code>mat[i][j]</code> est Vrai si et seulement si il y a une ar\u00eate allant du sommet <code>i</code> au sommet <code>j</code>. <code>i</code> est l'indice ligne. <code>j</code> est l'indice colonnes. </p> <p> <p></p> <p></p> \\[  \\begin{array}{c|ccccc}  &amp; A &amp; B &amp; C &amp; D &amp; E \\\\ \\hline A &amp; 0 &amp; 1 &amp; 0 &amp; 0 &amp; 1 \\\\ B &amp; 0 &amp; 0 &amp; 1 &amp; 1 &amp; 0 \\\\ C &amp; 1 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ D &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 1 \\\\ E &amp; 0 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ \\end{array} \\] <p>Matrice d'adjacence - Graphes orient\u00e9s</p> <p>Une matrice \u00e0 deux dimensions o\u00f9 mati est \u00e9gal au poids de l\u2019ar\u00eate allant du sommet i au sommet j, et 0 s\u2019il n\u2019existe pas d\u2019ar\u00eate. i est l\u2019indice ligne. j est l\u2019indice colonne.</p> <p> <p></p> <p></p> \\[  \\begin{array}{c|ccccc}  &amp; A &amp; B &amp; C &amp; D &amp; E \\\\ \\hline A &amp; 0 &amp; 2 &amp; 0 &amp; 0 &amp; 6 \\\\ B &amp; 0 &amp; 0 &amp; 2 &amp; 3 &amp; 0 \\\\ C &amp; 5 &amp; 0 &amp; 0 &amp; 1 &amp; 0 \\\\ D &amp; 0 &amp; 0 &amp; 0 &amp; 0 &amp; 0 \\\\ E &amp; 0 &amp; 0 &amp; 0 &amp; 4 &amp; 0 \\\\ \\end{array} \\] <p>Impl\u00e9mentations possible</p> <p>On peut utiliser une liste de listes  pour mat\u00e9rialiser la matrice et assimiler le graphe \u00e0 la matrice, sans consid\u00e9ration des \u00e9tiquettes.</p> <pre><code>    type num = int|float\n    type graphe = list[list[num]]\n</code></pre> <p>On peut vouloir aussi int\u00e9grer l'\u00e9tiquette des sommets.</p> <pre><code>    type num = int|float\n    type matrice = list[list[num]]\n    type graphe = tuple[list[str], matrice]\n\n    def creer_vide() -&gt; graphe:\n        return ([], [])\n\n    def sommets(g: graphe) -&gt; list[str]:\n        return g[0]\n\n    def matrice(g: graphe) -&gt; matrice:\n        return g[1]\n\n    def poids(i: int, j: int, g: graphe) -&gt; matrice:\n        return matrice(g)[i][j]\n\n    def index_sommet(g: graphe, s: str) -&gt; int:\n        return sommets(g).index(s)\n</code></pre> <p>L'impl\u00e9mentation des graphes est rarement effectu\u00e9e en POO, ou alors tout simplement pour encapsuler les m\u00e9thodes pr\u00e9c\u00e9dentes pour \u00eatre raccord avec le paradigme du langage d'impl\u00e9mentation.</p> <pre><code>class GrapheNO:\n    \"\"\"Graphe non orient\u00e9\"\"\"\n    def __init__(self, mat: list[list[int]], sommets: list[str]):\n        self.mat = mat\n        self.sommets = sommets\n\n    def nb_voisins(self, s: str) -&gt; int:\n        return sum(self.mat[self.sommets.index[s]])\n</code></pre> <p>Graphes non orient\u00e9s</p> <p>Compl\u00e9tez le code du fichier python fourni impl\u00e9mentant un graphe non orient\u00e9 pond\u00e9r\u00e9.</p>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#b-listes-dadjacence","title":"B. Listes d'adjacence","text":"<p>Chaque sommet est repr\u00e9sent\u00e9 par une liste contenant les sommets adjacents. Dans le cas des graphes orient\u00e9s, on peut avoir une liste de successeurs (suivants) ou une liste de pr\u00e9d\u00e9cesseurs (pr\u00e9c\u00e9dents). Dans les exercices, on aura une liste de successeurs.</p> <p>Impl\u00e9mentation possible</p> <p>On peut utiliser <code>dict[str, list[str]]</code> pour un graphe non pond\u00e9r\u00e9.</p> <p>Chaque cl\u00e9 sera un sommet, chaque valeur sera la liste des sommets sortants.</p> <p>Dans le cas d'un graphe pond\u00e9r\u00e9, on peut utiliser <code>dict[str, dict[str, int|float]]</code>.</p> <p>Chaque cl\u00e9 sera un sommet, chaque valeur sera un dictionnaire contenant les sommets sortants assortis de leur poids.</p> <p>Question</p> <p>Compl\u00e9ter le code suivant pour le graphe orient\u00e9, et aussi pour le graphe non orient\u00e9:</p> <pre><code>listes_adj_NO = {\n    \"A\": [...],\n    \"B\": [...],\n    ...\n}\n</code></pre> <pre><code>listes_adj_O = {\n    \"A\": [...],\n    \"B\": [...],\n    ...\n}\n</code></pre> <p>Graphes orient\u00e9s pond\u00e9r\u00e9s</p> <p>Compl\u00e9tez le code du fichier python fourni impl\u00e9mentant un graphe orient\u00e9 pond\u00e9r\u00e9.</p> <p>Graphes complets et densit\u00e9:</p> <p>On ne parlera ici de de graphes non orient\u00e9s.</p> <p>Un graphe est complet si chaque sommet est reli\u00e9 \u00e0 tous les autres. On appelle \\(K_n\\) le graphe complet \u00e0 \\(n\\) sommets.</p> <ol> <li>Dessiner $K_n, n \\in \\llbracket 1, 5 \\rrbracket $ </li> <li>Soit un graphe complet \u00e0 n sommets. <ul> <li>Combien d'ar\u00eates ajoute-t-on \u00e0 \\(K_{n-1}\\) pour obtenir \\(K_n\\)?</li> <li>Soit \\(A_n\\) le nombre d'arrete d'un graphe complet \u00e0 n sommets. Exprimer \\(A_n\\) en fonction de \\(A_{n-1}\\)</li> <li>D\u00e9montrer par r\u00e9currence que \\(A_n = \\frac{n(n-1)}{2}\\)</li> <li>Donner une fonction <code>nb_aretes_complet(n: int) -&gt; int</code> ou n est le nombre de sommets d'un graphe complet ayant n sommets.</li> </ul> </li> <li>La densit\u00e9 d'un graphe \u00e0 \\(n\\) sommets et \\(m\\) ar\u00eates est la quantit\u00e9 \\(\\delta(n, m)\\) repr\u00e9sentant le rapport de son nombre d'aretes au nombre d'aretes du graphe complet associ\u00e9 aux sommets.<ul> <li>Quelle est la densit\u00e9 de \\(K_n, n&gt;1\\)?</li> <li>Quelle est la densit\u00e9 d'un graphe \u00e0 n sommets sans ar\u00eates?</li> <li>La densit\u00e9 d'un graphe est toujours comprise entre 2 valeurs enti\u00e8res. Lesquelles et pourquoi?. Que repr\u00e9sentent-elles comme information?</li> <li>Donner l'expression de \\(\\delta(n, m)\\)</li> <li>Ecrire une fonction <code>densite</code> qui calcule la densit\u00e9 d'un graphe.</li> </ul> </li> </ol> <p>Graphes orient\u00e9s pond\u00e9r\u00e9s</p> <ul> <li>Ajoutez une fonction get_listes_adjacences \u00e0 l'impl\u00e9mentation du graphe non orient\u00e9 pond\u00e9r\u00e9.</li> <li>Ajoutez une fonction get_matrice_adjacence \u00e0 l'impl\u00e9mentation du graphe orient\u00e9 pond\u00e9r\u00e9.</li> </ul>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#iv-passage-entre-les-representations","title":"IV. Passage entre les Repr\u00e9sentations","text":"<p>Il est parfois n\u00e9cessaire de passer d'une repr\u00e9sentation \u00e0 une autre en fonction des op\u00e9rations que l'on souhaite effectuer, car certaines t\u00e2ches seront moins complexes en fonction de la repr\u00e9sentation. Par exemple, dans le cas de la repr\u00e9sentation par listes d'adjacence, la complexit\u00e9 de l'algorithme de parcours en profondeur est g\u00e9n\u00e9ralement proportionnelle au nombre total d'ar\u00eates dans le graphe. En revanche, dans le cas de la matrice d'adjacence, la complexit\u00e9 d\u00e9pend du nombre total de sommets dans le graphe, car il faut parcourir la ligne correspondant au sommet de d\u00e9part pour trouver ses voisins. Ainsi, la complexit\u00e9 peut varier en fonction de la densit\u00e9 du graphe et du choix de la repr\u00e9sentation.</p>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#a-de-la-matrice-dadjacence-a-la-liste-de-successeurs","title":"A. De la Matrice d'Adjacence \u00e0 la Liste de Successeurs","text":"<ul> <li>Parcourir chaque ligne de la matrice.</li> <li>Pour chaque ligne, cr\u00e9er une liste contenant les indices des sommets adjacents.</li> </ul>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#b-de-la-liste-de-successeurs-a-la-matrice-dadjacence","title":"B. De la Liste de Successeurs \u00e0 la Matrice d'Adjacence","text":"<ul> <li>Cr\u00e9er une matrice vide.</li> <li>Pour chaque liste de successeurs, marquer les \u00e9l\u00e9ments correspondants dans la matrice.</li> </ul>"},{"location":"terminale/structures-de-donnees/graphes/graphes/#v-exercices-fondamentaux","title":"V. Exercices fondamentaux","text":"<p>Exercice 1 :</p> <p>Consid\u00e9rez le graphe suivant :</p> <p></p> <p>Cycles</p> <p>Dans un graphe non orient\u00e9, un cycle est une suite d'ar\u00eates cons\u00e9cutives distinctes (chaine simple) dont les deux sommets extr\u00e9mit\u00e9s sont identiques. Dans les graphes orient\u00e9s, la notion \u00e9quivalente est celle de circuit, m\u00eame si on parle parfois aussi de cycle. Afin de simplifier le vocabulaire, on parlera de cycle pour les deux. Un graphe ne comportant pas de cycle est dit acyclique.</p> <p>Partie 1:</p> <ul> <li>Le graphe est-il acyclique? Justifier</li> <li>\u00c9crivez la matrice d'adjacence.</li> <li>\u00c9crivez les listes de successeurs</li> </ul> <p>Partie 2:</p> <ul> <li>On consid\u00e8re la version non orient\u00e9e de ce graphe.</li> <li>R\u00e9pondre aux m\u00eame questions.</li> </ul> <p>Exercice 2 :</p> <p>Consid\u00e9rez le graphe non orient\u00e9 suivant :</p> <p></p> <p>Graphe connexe</p> <p>Un graphe est dit connexe si, pour chaque paire de n\u0153uds distincts dans le graphe, il existe un chemin entre ces deux n\u0153uds. Autrement dit, il n'y a pas de sous-graphes isol\u00e9s dans un graphe connexe, chaque n\u0153ud peut \u00eatre atteint \u00e0 partir de n'importe quel autre n\u0153ud par une s\u00e9quence d'ar\u00eates. </p> <ul> <li>Le graphe est-il connexe? Justifier</li> <li>Le graphe est-il cyclique? Justifier</li> <li>\u00c9crivez la matrice d'adjacence.</li> <li>\u00c9crivez les listes de successeurs</li> </ul> <p>Relation entre sommets et ar\u00eates</p> <p>On peut prouver que la somme des degres d'un graphe est le double du nombre d'ar\u00eates.</p> <p>Euler l'a fait par double d\u00e9nombrement.</p> <p>On se propose de compter le nombre d'extr\u00e9mit\u00e9s d'ar\u00eates de 2 mani\u00e8res:</p> <ul> <li>Chaque ar\u00eate poss\u00e8de 2 extr\u00e9mit\u00e9s, donc c'est 2 fois le nombre d'ar\u00eates.</li> <li>Le degr\u00e9 d'un sommet repr\u00e9sente le nombre d'extr\u00e9mit\u00e9s rattach\u00e9es. Donc la somme des degr\u00e9s repr\u00e9sente le nombre total d'extr\u00e9mit\u00e9s.</li> </ul> <p>On aboutit donc \u00e0 cette formule, pour un graphe \\((S, A)\\), o\u00f9 \\(S\\) est l'ensemble des sommets, et \\(A\\) l'ensemble des ar\u00eates:</p> \\[ \\sum_{s \\in S} deg(s) = 2 \\times |A| \\] <p>Poign\u00e9es de main</p> <p>Lors d\u2019une r\u00e9ception r\u00e9unissant 8 personnes, on demande \u00e0 chacune d\u2019entre elles de dire combien de poign\u00e9es de main elles ont \u00e9chang\u00e9es au total pendant la soir\u00e9e. En additionnant ces 8 r\u00e9ponses, on obtient 20. Combien de poign\u00e9es de main ont effectivement eu lieu pendant cette r\u00e9ception ? Quelle est la densit\u00e9 du graphe des poign\u00e9es de mainassoci\u00e9?</p>"},{"location":"terminale/structures-de-donnees/graphes/parcours/","title":"Parcours de graphes","text":"<p>Pr\u00e9-requis</p> <p>Les algorithmes de parcours en profondeur et en largeur des arbres doivent \u00eatre ma\u00eetris\u00e9s.</p> <p>Les exercices suivants portent uniquement sur les graphes non orient\u00e9s.</p> <p>Parcours en largeur - BFS (Breadth First Search)</p> <p>Faites l'exercice de vous rappeler du parcours en largeur sur les arbres binaires sans consulter le cours.</p> <p>Si on l'applique tel quel, le probl\u00e8me est qu'on boucle infiniment sur des cycles. Il faut donc garder en m\u00e9moire quels sommets on a enfil\u00e9 pour ne pas les enfiler plusieurs fois. En effet, un sommet enfil\u00e9 sera n\u00e9cessairement trait\u00e9, et il ne faut pas qu'il puisse \u00eatre enfil\u00e9 plusieurs fois. </p> <ul> <li>Ecrire une m\u00e9thode de parcours it\u00e9ratif en largeur des sommets d'un graphe. Le comportement de visite est l'accumulation du sommet dans une liste renvoy\u00e9e.</li> </ul> <pre><code>from structures.lineaires import file\ndef bfs(depart: str, g: graphe) -&gt; list[str]\n</code></pre> <p>Parcours en profondeur - Depth First Search (DFS)</p> <p>De la m\u00eame mani\u00e8re, en vous inspirant du travail sur les arbres binaires, \u00e9crire une fonction qui r\u00e9alise le parcours en profondeur d'un graphe.</p> <p>On se souviendra que la diff\u00e9rence entre un parcours en largeur et en profondeur ne tient pas \u00e0 grand chose dans le code. </p> <pre><code>def dfs(depart: str, g: graphe) -&gt; list[str]\n</code></pre> <p>Connexit\u00e9</p> <p>En utilisant une des fonctions pr\u00e9c\u00e9dentes, \u00e9crire la fonction suivante:</p> <pre><code>    def est_connexe(g: graphe) -&gt; bool\n</code></pre> <p>On pourra tester avec le graphe non connexe du cours, cette fonction peut faire une ligne.</p> <p>Sous graphe</p> <ul> <li>Ecrire une fonction qui renvoie le sous graphe constitu\u00e9 des sommets dans la liste:</li> </ul> <pre><code>    def sous_graphe(sommets: list[str], g: graphe) -&gt; graphe\n</code></pre> <p>Composantes connexes</p> <p>Le graphe non connexe du cours poss\u00e8de 2 composantes connexes.</p> <ul> <li>En utilisant des fonctions pr\u00e9c\u00e9dentes, \u00e9crire une fonction permettant de r\u00e9cup\u00e9rer la liste des composantes connexe.</li> </ul> <pre><code>    def composantes_connexes(g: graphe) -&gt; list[graph]\n</code></pre> <p>Plus court chemins - Non pond\u00e9r\u00e9</p> <p>On peut trouver le plus court chemin entre 2 sommets d'un graphe non pond\u00e9r\u00e9 en r\u00e9alisant un parcours en largeur qui renvoie un dictionnaire des pr\u00e9d\u00e9cessurs. D\u00e8s qu'on d\u00e9couvre un sommet non visit\u00e9, on le d\u00e9couvre forc\u00e9ment depuis son pr\u00e9d\u00e9cesseur sur son plus court chemin \u00e0 la source.</p> <p>Ensuite, en examinant le dictionnaire des pr\u00e9d\u00e9cesseurs, on peut en d\u00e9duire le plus court chemin</p> <ol> <li>Ecrire une fonction:</li> </ol> <pre><code>    def predecesseurs_bfs(g: graphe, s1: str) -&gt; dict[str, str]\n</code></pre> <ol> <li>Ecrire une fonction:</li> </ol> <pre><code>    def shortest_path(g: graphe, s1: str, s2: str) -&gt; dict[str, str]\n</code></pre> <ol> <li>Ecrire une fonction distance qui renvoie la longueur du plus court chemin entre \\(s1\\) et \\(s2\\) dans le graphe \\(g\\)</li> </ol> <pre><code>    def distance(g: graphe, s1: str, s2: str) -&gt; int\n</code></pre> Corrig\u00e9 pr\u00e9d\u00e9cesseurs <pre><code>def predecesseurs_bfs(g: gr.graphe, s1: str) -&gt; dict[str, str]:\n\"\"\"\nRetourne le dictionnaire des pr\u00e9d\u00e9ceesseurs de voisins d\u00e9couverts\nen partant de s1 par un parcours en largeur dans le graphe non\npond\u00e9r\u00e9 g.\n\"\"\"\nf = file.creer()\n\u03c0: dict[str, str] = {s1: \"\"}\nwhile len(f) &gt; 0:\n    u = file.defiler(f)\n    for v in gr.get_voisins(u, g):\n        if v not in \u03c0:\n            \u03c0[v] = u\n            file.enfiler(f, v)\nreturn \u03c0\n</code></pre> <p>On d\u00e9finit la distance entre 2 sommets comme la longueur du plus court chemin entre ces ar\u00eates. On veut montrer que pour n'importe quel sommet \\(s2\\), en remontant \\(\\pi\\), on obtient le plus court chemin \\(s1\\)</p> <p>Indicateurs courants sur les graphes</p> <p>En seconde (oui je sais c'est loin), vous avez peut-\u00eatre d\u00e9couvert les notions d'excentricit\u00e9, de rayon, de diam\u00e8tre de graphe, ainsi que des \u00e9l\u00e9ments d'explication permettant une premi\u00e8re approche d'interpr\u00e9tation de ces valeurs.</p> <p>Vous \u00e9crirez les fonctions suivantes en une ligne ou deux \u00e0 l'aide de listes en compr\u00e9hension et des fonctions min et max.</p> <p>La fonction distance de l'exercice pr\u00e9c\u00e9dent est n\u00e9cessaire.</p> <pre><code>def excentricite(g: gr.graphe, s: str) -&gt; int:\n    \"\"\"\n    Retourne l'excentricit\u00e9 du sommet s dans le graphe non pond\u00e9r\u00e9 g.\n    L'excentricit\u00e9 d'un sommet est la distance \u00e0 son sommet le plus \u00e9loign\u00e9.\n    \"\"\"\n    return ...\n\ndef centre(g: gr.graphe) -&gt; list[str]:\n    \"\"\"\n    Retourne le centre du graphe g.\n    Le centre du graphe est l'ensemble des sommets ayant la plus petite excentricit\u00e9.\n    On appelle de tels sommets des somemts centraux.\n    Les sommets centraux sont strat\u00e9giquement importants, par exemple pour placer un serveur, un relais,\n    un entrep\u00f4t. Ils minimisent la distance maximale \u00e0 tous les autres sommets.\n    \"\"\"\n    ...\n    return ...\n\ndef rayon(g: gr.graphe) -&gt; int:\n    \"\"\"\n    Retourne le rayon du graphe non pond\u00e9r\u00e9 g.\n    Le rayon d'un graphe est l'excentricit\u00e9 des sommets centraux.\n    Il repr\u00e9sente la distance maximale de n'importe quel sommet aux sommets centraux.\n    \"\"\"\n    return ...\n\ndef diametre(g: gr.graphe) -&gt; int:\n    \"\"\"\n    Retourne le diam\u00e8tre du graphe non pond\u00e9r\u00e9 g.\n    Le diam\u00e8tre d'un graphe est la distance maximum entre 2 sommets du graphe.\n    Il donne une id\u00e9e de son \u00e9tendue. Un graphe avec un petit diam\u00e8tre est dit efficace, ou compact.\n    \"\"\"\n    return ...\n</code></pre> <p>Arbre couvrant</p> <p>On supposera le graphe connexe.</p> <p>En th\u00e9orie des graphes, un arbre est tout simplement un graphe connexe acyclique. Les arbres que nous avons vus pr\u00e9c\u00e9demment sont dits enracin\u00e9s car ils poss\u00e8dent un sommet sp\u00e9cial qu'on appelle la racine.</p> <p>Construire un arbre \u00e0 partir du dictionnaire des pr\u00e9d\u00e9cesseurs. On appelle ce graphe un arbre couvrant.</p> <pre><code>def get_arbre_couvrant(g: graphe) -&gt; graphe:\n</code></pre> <p>Sur les graphes pond\u00e9r\u00e9s, il est fr\u00e9quent de rechercher l'arbre couvrant de poids minimum (Minimum Spanning Tree). Il repr\u00e9sente le minimum de ce qui peut tout connecter au moindre co\u00fbt.</p> <p>Graphe exemple</p> <p></p> <p>Graphe exemple2</p> <p></p>"}]}